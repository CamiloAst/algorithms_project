@INPROCEEDINGS{9867127,
  author={Ma, Jingsi and Zhang, Yi and Bin, Hesiqi and Wang, Kang and Liu, Jinfang and Gao, Hanrui},
  booktitle={2022 International Symposium on Educational Technology (ISET)}, 
  title={The Development of Students' Computational Thinking Practices in AI Course Using the Game-Based Learning: A Case Study}, 
  year={2022},
  volume={},
  number={},
  pages={273-277},
  abstract={Promoting the computational thinking of the K12 students through artificial intelligence education is reflected in curriculum standards and academic research. Game-based learning promotes the learning interest and motivation, helps students reinforce computational thinking practices. Based on the input-process-result (IPO) game-based learning model, this study integrated the artificial intelligence instructional content, game-based learning, and the core elements of computational thinking practice to design game-based learning activities that was suitable for promoting computational thinking practices in artificial intelligence courses. In this research, the artificial intelligence course “Challenging Tic-Tac-Toe” was conduct in senior high school. The results showed that the game-based learning in artificial intelligence courses could help students to master artificial intelligence subject knowledge, significantly improved the computational thinking practices, enhanced learning interest, motivation, self-confidence, and reduce cognitive load. Thus, this study provides additional evidence that using the game-based learning strategies is an effective learning method that improves both learning performance and computational thinking practices.},
  keywords={Learning systems;Computational modeling;Learning (artificial intelligence);Educational technology;Artificial intelligence;Standards;Computational thinking practices;Artificial intelligence course;Game-based learning;IPO game-based learning model},
  doi={10.1109/ISET55194.2022.00065},
  ISSN={2766-2144},
  month={July},}@INPROCEEDINGS{9361128,
  author={Dong, Xueyan and Jia, Jingpeng},
  booktitle={2020 International Conference on Artificial Intelligence and Computer Engineering (ICAICE)}, 
  title={Teaching Reform of Software Engineering Course Based on Computational Thinking}, 
  year={2020},
  volume={},
  number={},
  pages={399-402},
  abstract={For students majored in computer science, the ability to have computational thinking is an essential skill. Facilitating computational thinking cannot only help students understand the professional knowledge and principles of computer, but also bring new ideas to addressing complex problems, therefore, many colleges and universities have carried out computer professional curriculum reform based on computational thinking. Due to the high degree of abstraction of computational thinking, traditional teaching methods will cause students to understand computational thinking only at the conceptual level, and cannot realize the flexible use of computational thinking concepts. This study takes the software engineering course as an example to explain how to integrate the concepts of computational thinking into the original courses. The goal is to enable students to understand software engineering contents problems from the perspective of problem-solving.},
  keywords={Computer science;Software design;Education;Software;Problem-solving;Artificial intelligence;Software engineering;Computational Thinking;Problem Solving;Software Engineering;Teaching Reform},
  doi={10.1109/ICAICE51518.2020.00084},
  ISSN={},
  month={Oct},}@INPROCEEDINGS{8494172,
  author={Vinayakumar, R and Soman, KP and Menon, Pradeep},
  booktitle={2018 9th International Conference on Computing, Communication and Networking Technologies (ICCCNT)}, 
  title={Fractal Geometry: Enhancing Computational Thinking with MIT Scratch}, 
  year={2018},
  volume={},
  number={},
  pages={1-6},
  abstract={Recent developments in pedagogy have focused upon computational thinking. Computational thinking provides a way to solve the problem and it is a key practice of science education. The importance of computational thinking is rarely found in K-12 education. Computational thinking is a an important skill everyone needs and it is correlated with many other concepts. These factors have made the development of new tools and syllabus. In this paper, we aim to show the experiments of fractal geometry using MIT Scratch. These computational exercises facilitate to learn many of computational thinking skills that are very important for the people in the near future. Based on our experience with students, we claim that the concept of fractal and its implementation in MIT Scratch is the best practices to improve computational thinking in K-12 school level students.},
  keywords={Fractals;Programming profession;Education;Visualization;Games;Computational thinking;fractal geometry;Scratch;K-12 education;block based programming;21st century learning skills},
  doi={10.1109/ICCCNT.2018.8494172},
  ISSN={},
  month={July},}@INPROCEEDINGS{9534576,
  author={Xiaohong, Cong and Jie, Liu and Zhibin, Miao and Li, Xu},
  booktitle={2021 2nd International Conference on Artificial Intelligence and Education (ICAIE)}, 
  title={Teaching research on the cultivation of computational thinking ability by using information technology}, 
  year={2021},
  volume={},
  number={},
  pages={564-567},
  abstract={Computational thinking ability is a very important, and it is a basic necessary skill for future talents. This paper describes the shortcomings of the current education of cultivating students’ computational thinking ability, analyzes the needs of cultivating students’ innovative ways of computational thinking in the information age, and expounds the necessity of innovative education and teaching. In this paper, the project driven teaching mode and the teaching method of computational thinking cultivation are proposed. The Small Private Online Course (SPOC) teaching method is used in the teaching practice, which is a kind of information technology method. Combined with project driven and SPOC teaching methods, the students' computational thinking ability is further cultivated. In the teaching practice, the information technology and project driven learning are made full use, which are two key factors in the information age, so the students’ computational thinking ability has been greatly improved, and the teaching effect is obvious.},
  keywords={Training;Technological innovation;Education;Employment;Information age;Artificial intelligence;information technology;computational thinking;Innovation education;Project driven;Teaching practice},
  doi={10.1109/ICAIE53562.2021.00125},
  ISSN={},
  month={June},}@INPROCEEDINGS{5769498,
  author={Yin, Li-jie and Zuo, Rui-xin and Zhao, Yang},
  booktitle={2011 International Conference on Consumer Electronics, Communications and Networks (CECNet)}, 
  title={Teaching and research on assembly language for computational thinking}, 
  year={2011},
  volume={},
  number={},
  pages={3649-3652},
  abstract={Assembly language is a foundation courses for science and technology of computers. Computational thinking emphasizes just like computer scientists thinking. It is one of basic skills to solve problems with the computer technology. How to develop student's computational thinking is an urgent question in computer education. This paper analyzes the connotation of computational thinking, the embodiment of ability in assembly language and the process of formation; then proposes teaching programs of assembly language for computational thinking. In 2009 and 2010, cross-teaching experiments have been adopted between teachers and students. The feedback information from students shows that the introduction of computational thinking computing can help students to improve the professional ability. The teaching reform has achieved good results.},
  keywords={Education;Computer science;Assembly;Computers;Biological system modeling;Economics;Computational modeling;assembly language;computational thinking;teaching;model},
  doi={10.1109/CECNET.2011.5769498},
  ISSN={},
  month={April},}@INPROCEEDINGS{10261627,
  author={Chen, Jiefei},
  booktitle={2023 5th International Conference on Computer Science and Technologies in Education (CSTE)}, 
  title={Study on Teaching Programming in Adult Colleges Based on the Cultivation of Computational Thinking}, 
  year={2023},
  volume={},
  number={},
  pages={81-85},
  abstract={Computational thinking is an important concept that is currently receiving widespread attention in the international computing community. Teaching programming is an effective way to develop students' computational thinking. Students in adult colleges and universities face the pressure of study and work, and there is a need to improve their computational thinking skills. In this paper, we design and develop a set of programming activities based on computational thinking development for adult college students, and study the changes in students' computational thinking before and after they participate in the activities. It provides a reference for frontline teachers and related researchers to design programming activities and conduct research in computational thinking.},
  keywords={Education;Programming profession;Faces;computational thinking;programming;activity design},
  doi={10.1109/CSTE59648.2023.00021},
  ISSN={},
  month={April},}@INPROCEEDINGS{9645630,
  author={Chen, Bing-Hong and Chen, Ling-Hsiu and Chen, Chih-Cheng and Chen, Chih-Hung},
  booktitle={2021 IEEE 3rd Eurasia Conference on IOT, Communication and Engineering (ECICE)}, 
  title={Influence of Programming Robot Learning Mode Based on Conceptual Mapping on College Students' Computational Thinking}, 
  year={2021},
  volume={},
  number={},
  pages={617-620},
  abstract={As the information age has progressed, computational thinking ability to solve problems has become an indispensable way of life in life. Many scholars believe that the process of solving problems will be more logical if they have computational thinking ability. At the same time, scholars believe that a good learning method improves learners' intrinsic motivation. Therefore, in this research, we try to use conceptual mapping so that students can construct knowledge when composing their own images, as the focus of this learning model and computational thinking is the thinking process and the two coincide. This research intends to introduce the traditional programming robot course into conceptual mapping and measure whether there are differences in computational thinking tendencies, problem-solving tendencies, and intrinsic motivations between students who use conceptual mapping and those who do not use it. The students in the experimental group with conceptual mapping activities developed computational thinking skills during the program robotics course. The students in the control group first watched the computational thinking explanation video to explain the computational thinking skills to the students, and then taught in the traditional programming robotics course.},
  keywords={Learning systems;Conferences;Computational modeling;Programming;Information age;Robot learning;Problem-solving;Concept mapping;computational thinking;programmed robot 10 pts;intrinsic motivation},
  doi={10.1109/ECICE52819.2021.9645630},
  ISSN={},
  month={Oct},}@INPROCEEDINGS{10361088,
  author={Zhang, Jiaying and Zhang, Yi and Lin, Yuru},
  booktitle={2023 International Symposium on Educational Technology (ISET)}, 
  title={The Impact of stem Courses on Students’ Computational Thinking: Mediation based on problem solving ability and stem attitude}, 
  year={2023},
  volume={},
  number={},
  pages={74-78},
  abstract={Computational thinking is advocated as a skill that everyone should possess, and stem content and background can be conducive to the learning of computational thinking. This study constructed a theoretical model of the impact of stem courses on students’ computational thinking, and measured the mediating effects of problem solving skills and stem attitudes on stem courses and students’ computational thinking. The study included a questionnaire of 1870 secondary school students and a descriptive, correlational and mediating analysis. The results show that stem courses can predict students’ computational thinking through students’ problem solving ability and students’ attitude towards stem. The results of this study have a positive reference value for discussing the factors affecting students’ computational thinking, implementing stem course education, improving students’ problem-solving ability and enhancing students’ attitude towards stem.},
  keywords={Computational modeling;Educational technology;Extensibility;Problem-solving;Mediation;Computational thinking;stem course;Problem Solving Ability;stem Attitude},
  doi={10.1109/ISET58841.2023.00023},
  ISSN={2766-2144},
  month={July},}@INPROCEEDINGS{10159750,
  author={Vlahović, Ines and Biškupić, Ivana Ogrizek},
  booktitle={2023 46th MIPRO ICT and Electronics Convention (MIPRO)}, 
  title={Fostering Critical and Computational Thinking in the Field of Primary and Secondary Education in non-STEM Subjects by Using Data Sets and Applications}, 
  year={2023},
  volume={},
  number={},
  pages={672-677},
  abstract={Critical and computational thinking in primary and secondary education in recent years shows growing importance in methodical approaches used in the classroom. Although many examples exist for using critical and computational thinking in STEM educational area, the social sciences i.e., non-STEM areas were somehow left out due to the relatively more difficult design of such content, especially in the part of the development of computational thinking. In that context, in this paper we present one way of using critical and computational thinking in non-STEM education, more specifically on the example of historical data sources, through the use of programming in Python. As an example, we use historical data for Trans-Atlantic Slave Trade routes, that were the largest long-distance coerced movement of people in history up to the mid-nineteenth century, for connecting concepts of databases, Data Science and programming for development of critical and computational thinking in context of history science. This way of using modern approaches in classroom should give teachers and pupils a broader picture of importance of interdisciplinary education for critical and computational thinking development through STEM and non-STEM classes that give pupils novel skills needed for future labor market.},
  keywords={Correlation;Soft sensors;Education;Social sciences;Data science;History;Pupils;Critical Thinking;Computational Thinking;STEM;non-STEM;Data Science;programming;Python;history;Trans-Atlantic Slave Trade routes},
  doi={10.23919/MIPRO57284.2023.10159750},
  ISSN={2623-8764},
  month={May},}@INPROCEEDINGS{10343475,
  author={Castellanos, Hugo and Vieira, Camilo and Magana, Alejandra},
  booktitle={2023 IEEE Frontiers in Education Conference (FIE)}, 
  title={A Topic Modeling Approach to Characterizing Colombian Teachers' Conceptions of Computational Thinking}, 
  year={2023},
  volume={},
  number={},
  pages={1-5},
  abstract={This work-in-progress paper will explore the effectiveness of topic modeling to support the analysis of Colombian teachers' conceptions of computational thinking (in Spanish) in an online professional development program. Computational thinking has become a form of literacy as it can help individuals to solve problems. Consequently, governments and bodies of accreditation worldwide have supported educational initiatives, primarily at the K-12 level. However, curricular changes are not enough. Teachers need to be prepared, so they develop the content knowledge associated with computational thinking concepts, practices, and applications in the classroom. To contribute to professional development opportunities geared toward the development of computational thinking pedagogical content knowledge, the Colombian National Academy of Exact, Physics, and Natural Sciences and the Global Center for Equitable Computer Science Education implemented an open online professional development program for Latin American early childhood and elementary educators. More than 100 teachers enrolled in a six-week online professional development program to integrate computational thinking activities from early childhood education. The program included two modules focused on conceptual understanding of computational thinking in early childhood and four more modules where the participants adapted, designed, implemented learning activities, and reflected on what happened during the implementation. As part of the participants' weekly interactions, the program included a Jamboard space, where the teachers answered a set of guiding questions, just like a discussion forum, but as a post-it wall, where they could access all their peers' contributions and questions in a single space.},
  keywords={Analytical models;Discussion forums;Computational modeling;Government;Education;Accreditation;Computer science education;Computational thinking;conception;topic modeling},
  doi={10.1109/FIE58773.2023.10343475},
  ISSN={2377-634X},
  month={Oct},}@INPROCEEDINGS{10685684,
  author={Zhou, Pinghong and Tang, Yumin and Zhang, Yi and Yu, Yue and Li, Yixin},
  booktitle={2024 International Symposium on Educational Technology (ISET)}, 
  title={Does computational thinking really have an impact on academic performance? A systematic review}, 
  year={2024},
  volume={},
  number={},
  pages={153-157},
  abstract={This study is a systematic review of the effects of computational thinking on students’ academic performance from 2006 to 2023. The main purpose of this study is to explore whether computational thinking can promote students’ academic performance and the characteristics of such research. After literature collection and screening from three databases, a total of $\mathbf{2 3}$ articles were included. According to the coding table, the literature was coded in five aspects, including basic information, sample, research, computational thinking and academic performance. Then, the publication trend, research types, effect results, computational thinking measurement and the characteristics of academic achievement evaluation of the impact of computational thinking and academic achievement are reviewed. It is found that computational thinking has a better effect on students’ academic achievement, and finally some suggestions are put forward.},
  keywords={Databases;Educational technology;Market research;Encoding;computational thinking;systematic review;academic achievement},
  doi={10.1109/ISET61814.2024.00038},
  ISSN={2766-2144},
  month={July},}@INPROCEEDINGS{10469197,
  author={Lai, Chien-Hung and Hsieh, Cheng-Han},
  booktitle={2023 IEEE 3rd International Conference on Social Sciences and Intelligence Management (SSIM)}, 
  title={Exploring the Impact of the Learning Sequence of Computational Thinking and Programming on Learning Outcomes}, 
  year={2023},
  volume={},
  number={},
  pages={175-179},
  abstract={The primary objective of this research was to investigate effective learning sequences starting with computational thinking, programming, or both. We experimented with and analyzed the learning sequence of students from the Department of Computer Engineering, Information Management, and Mechanical Engineering. The findings indicated that the students of the Department of Computer Engineering possessed prior experiences in programming or computational thinking. Their learning sequences limitedly impacted learning outcomes. Conversely, for the students of the Department of Information Management, learning computational thinking before programming did not result in better learning outcomes, emphasizing the need for coherence in courses. The students of the Department of Mechanical Engineering showed the practical value of computational thinking in non-IT disciplines, particularly in using specialized software such as MATLAB. For students with foundational knowledge, the learning sequence between learning computational thinking and programming was less significant. However, for beginners or those from non-IT backgrounds, effective learning required the coherence and integration of courses. Thus, it is required to maintain cross-course coherence and establish links between computational thinking and programming skills to offer a more in-depth learning experience.},
  keywords={Training;Systematics;Social sciences;Coherence;Programming;Software;Information management;computational thinking;programming;learning sequence;course coherence;interdisciplinary application},
  doi={10.1109/SSIM59263.2023.10469197},
  ISSN={},
  month={Dec},}@INPROCEEDINGS{8190654,
  author={Borges, Karen Selbach and de Menezes, Crediné Silva and da Cruz Fagundes, Léa},
  booktitle={2017 IEEE Frontiers in Education Conference (FIE)}, 
  title={The use of computational thinking in digital fabrication projects a case study from the cognitive perspective}, 
  year={2017},
  volume={},
  number={},
  pages={1-6},
  abstract={Existing literature presents many cases of computational thinking analysis through the perspective of a skill set for 21st century. However it is important to go deeper and understand how computational thinking activities fosters the cognitive development of the young, especially if we want them to have “a significant advantage in problem solving”, becoming innovative thinkers [1]. To be innovative it is necessary that a person use sophisticated cognitive structures to reason over abstractions and deal with hypothesis. These are the characteristics of the formal operational thinking [2]. Therefore, this paper is about the use of formal thinking on computational thinking activities over a digital fabrication project developed in a Brazilian makerspace (POALab FabLab). Using a Case Study we want to show that computational thinking and digital fabrication projects demand the use of formal thinking and, since that, the importance of designing learning activities for makerspaces taking in mind the possibilities of cognitive development.},
  keywords={Fabrication;Tools;Games;Computational modeling;Complexity theory;Creativity;Floors;formal thinking;computational thinking;making;Jean Piaget},
  doi={10.1109/FIE.2017.8190654},
  ISSN={},
  month={Oct},}@INPROCEEDINGS{10568269,
  author={Pale-Parra, Daniel and Pérez-Salazar, Christian and Sánchez-García, Ángel J. and Ocharán-Hernández, Jorge Octavio},
  booktitle={2023 11th International Conference in Software Engineering Research and Innovation (CONISOFT)}, 
  title={Web Systems for the Development of Computational Thinking in Software Engineering Students: A Systematic Literature Review}, 
  year={2023},
  volume={},
  number={},
  pages={132-139},
  abstract={Many undergraduate students in software engineering have trouble developing computational thinking. Several tools have been reported in the literature to support the development of computational thinking. This paper reports a Systematic Literature Review to present the characteristics that have made successful web systems that support the development of computational thinking in recent years and the reported limitations. Eighteen primary studies were selected where the strategies used are usually learning through lessons, practicing with exercises, working through games, and using feedback. The systems found have been used at different elementary, middle, high school, and bachelor's degree levels. Finally, the main limitations reported in using these systems were mainly the difficulty of the topics, the previous knowledge that the students should have, the attitude that the students showed and the lack of motivation. Finally, we make some recommendations to software engineering curriculum planners and programming teachers about systems for developing computational thinking.},
  keywords={Technological innovation;Systematics;Bibliographies;Games;Programming;Software engineering;Computational thinking;web system;Learning;Software Engineering;students},
  doi={10.1109/CONISOFT58849.2023.00026},
  ISSN={},
  month={Nov},}@INPROCEEDINGS{6142980,
  author={Yeh, Kuo-Chuan and Xie, Ying and Ke, Fengfeng},
  booktitle={2011 Frontiers in Education Conference (FIE)}, 
  title={Teaching computational thinking to non-computing majors using spreadsheet functions}, 
  year={2011},
  volume={},
  number={},
  pages={F3J-1-F3J-5},
  abstract={Recently, higher education has seen an increasing emphasis on the prominent role of computational thinking in all disciplines. Computational thinking is advocated as not only a fundamental skill or concept in computer science but also a core competency for all disciplines. Teaching students in non-computer science majors computing thinking is challenging because students do not have experts' mental models. This study investigates the knowledge gap that non-computing major college students (n=126) possess about computational thinking in an introductory MS Excel course by measuring their performance using spreadsheet functions in three categories: recall, application, and problem solving. The empirical result, analyzed using ANOVA, shows that students can recall the meaning of those functions but seem to have trouble using them correctly and precisely (cued or uncued). Students' test results suggest the following issues: (1) problems with understanding the data type, (2) failure in translating problems to productive representations using spreadsheet functions, and (3) inadequate stipulation of the computational representations in precise forms. Addressing these problems early and explicitly in future classes could improve the education of computational thinking and alleviate difficulties students may experience in using computational thinking in learning and problem solving.},
  keywords={Problem-solving;Computer science;Computers;Conferences;Educational institutions;Instruments;Computational Thinking;Computer Science Education;Spreadsheet Functions;Problem Solving},
  doi={10.1109/FIE.2011.6142980},
  ISSN={2377-634X},
  month={Oct},}@INPROCEEDINGS{5169480,
  author={Deng, Zhenrong and Huang, Wenming and Dong, Rongsheng},
  booktitle={2009 International Conference on Education Technology and Computer}, 
  title={Discussion of Ability Cultivation of Computational Thinking in Course Teaching}, 
  year={2009},
  volume={},
  number={},
  pages={197-200},
  abstract={Computational thinking is taken for the fundamental skills for everyone, not just computer scientist, to learn and use. It remains to be explored in many aspects how to understand the essence of computational thinking and how cultivate the computational thinking ability of students. In the view of course teaching of computer science, this paper discusses the perception of the essence of computational thinking and presents a method for the cultivation of the computational thinking ability by using courses as carrier, and a case study of the course Data Structures and Algorithms.},
  keywords={Computer science;Pervasive computing;Concurrent computing;Embedded computing;Data structures;Computer vision;Educational technology;Humans;Computer science education;Printing machinery;Computational thinking;methodology;course teaching;data structure and algorithm},
  doi={10.1109/ICETC.2009.16},
  ISSN={2155-1812},
  month={April},}@INPROCEEDINGS{9015331,
  author={Sasaki, Yuji and Fukui, Masanori and Hirashima, Tsukasa},
  booktitle={2019 IEEE 8th Global Conference on Consumer Electronics (GCCE)}, 
  title={Development of iOS Software n-Queens Problem for Education and Its Application for Promotion of Computational Thinking}, 
  year={2019},
  volume={},
  number={},
  pages={563-565},
  abstract={In this study, the authors develop an iOS software “n-Queens Problem for Education” and discuss its application in the promotion of computational thinking. As it has already been pointed out in [1] and [2], playing games and solving puzzles are effective in cultivating computational thinking, and our gaming software can be a good tool to cultivate skills regarding “Generalization (Pattern Recognition),” “Abstraction;' and “Algorithms” of computational thinking. Our software “n-Queens Problem for Education” is based on the well-known “The n-Queens Puzzle,” which involves solving a puzzle of placing eight chess queens on an n × n chessboard so that they do not attack one another. This puzzle is a good way for students to learn computational thinking. Since this software shows the queens' moves and evaluates solutions, you can concentrate on using your brain without writing down the moves or erasing wrong solutions. In addition, this software has features such as the symmetry operations of rotation and reflection of the board that help users study their solutions.},
  keywords={Education;Software;Games;Pattern recognition;Software algorithms;Problem-solving;Conferences;Computational Thinking;iOS Application;n-Queens Problem;Algorithmic Thinking;Problem Solving Skills},
  doi={10.1109/GCCE46687.2019.9015331},
  ISSN={2378-8143},
  month={Oct},}@INPROCEEDINGS{7557641,
  author={Chang, Chih-Kai},
  booktitle={2016 5th IIAI International Congress on Advanced Applied Informatics (IIAI-AAI)}, 
  title={Using Computational Thinking Patterns to Scaffold Program Design in Introductory Programming Course}, 
  year={2016},
  volume={},
  number={},
  pages={397-400},
  abstract={Visual programming languages (VPLs), such as Scratch and StarLogo TNG, can make computer science education more accessible to everyone. Current researches in the study of using VPLs for educational purposes primarily focus on understanding motivational benefits and computational thinking gains. All these educational VPLs claim to scaffold students learning computational thinking concepts. Although the evaluations show that students may exhibit more enthusiasm, it is not clear what computational thinking concepts are actually learned by students. In this paper, we attempt to develop a visual programs recognition tool for student-created StarLogo TNG simulations which representing the computational thinking concepts implemented by the students. Through collecting student's created projects over time, this visual programs recognition tool can possibly indicate the patterns of computational thinking in science simulations created by StarLogo TNG.},
  keywords={Computational modeling;Programming profession;Visualization;Ice;Computers;Syntactics;Visual programming languages;computer science education;computational thinking;StarLogo TNG},
  doi={10.1109/IIAI-AAI.2016.27},
  ISSN={},
  month={July},}@INPROCEEDINGS{8567183,
  author={Lin, Chia-Ching and Chao, Po-Yao and Lin, En-Ting and Tzeng, Huei-Lin},
  booktitle={2018 1st International Cognitive Cities Conference (IC3)}, 
  title={Exploring the Role of Visual Programming Activities in Computational Thinking}, 
  year={2018},
  volume={},
  number={},
  pages={135-138},
  abstract={This study explored the role of visual programming activities in computational thinking. A group of 158 freshmen majoring in information science and communication in Northern Taiwan were engaged in this study. A visual programming platform, computational thinking questionnaire and a programming examination were employed to collect the log data of programming activities, self-responses to computational thinking and the score of programming examination for later analyses. The results reveal that visual programming activities would be critical to the evolution of multiple computational thinking perspectives.},
  keywords={Programming;Visualization;Problem-solving;Urban areas;Data collection;Conferences;Computer aided instruction;computational thinking;visual programming;programming learning;problem solving},
  doi={10.1109/IC3.2018.00-43},
  ISSN={},
  month={Aug},}@INPROCEEDINGS{9725199,
  author={Silva, Diego S. and Melo, Sérgio L. and Basto Diniz, Juliana R.},
  booktitle={2021 XVI Latin American Conference on Learning Technologies (LACLO)}, 
  title={Developing a didactic sequence for introducing computational thinking in the early years of elementary school}, 
  year={2021},
  volume={},
  number={},
  pages={526-529},
  abstract={The employment of technology as a tool is a reality in any area of knowledge. Technology is present and permanently impacts our society, including its effects on education. Computational thinking is a way of critically and creatively using the fundamentals of computer science to solve problems, making it essential for success in the job market. This article aims to stimulate computational thinking in children from the first years of elementary school, ranging from the 1 st to the 5 th grades, which corresponds to the age group from 6 to 10 years old. For developing computational thinking in the students, a didactic sequence was created using several tools, namely: naval battle, Blockly Games and the Scratch block programming language. The sequence of artifacts created with Scratch simulates a robot with color sensors, and, as students progress in learning, new challenges are added with the use of sensors, sounds and animations. This project aims to show the importance of computational thinking and encourage teachers to make it increasingly present in the classroom.},
  keywords={Computer science;Computer languages;Employment;Education;Games;Color;Robot sensing systems;Computational thinking;Scratch;Blockly game},
  doi={10.1109/LACLO54177.2021.00095},
  ISSN={},
  month={Oct},}@INPROCEEDINGS{9066359,
  author={Nakamura, Takayasu and Kawasaki, Tetsushi},
  booktitle={2019 International Joint Conference on Information, Media and Engineering (IJCIME)}, 
  title={Computer Science Unplugged for Developing Computational Thinking and Mathematical Thinking}, 
  year={2019},
  volume={},
  number={},
  pages={305-308},
  abstract={The purpose of this study is to make learning material that can develop both Computational thinking and Mathematical thinking. This study suggest a hamburger flowchart as a teaching material that combines the three elements of "unplugged", "thinking from the end " and "mathematics class". Using this flowchart, basic experiment was conducted for 8 to 12 years old. The purpose of this experiment is to confirm whether it is possible for children to develop both Computational thinking and Mathematical thinking by using the hamburger flowchart. We evaluated both Computational thinking and Mathematical thinking from the state in this class and the content of the worksheet and prior and subsequent tests. As a result, the state related to Computational thinking and Mathematical thinking increased, and the correct answer rate of many children increased from the prior test to the subsequent test. Therefore it turned out that the hamburger flowchart affects mathematical thinking.},
  keywords={Flowcharts;Programming profession;Tools;Education;Sugar;Toxicology;21st-century-skills;Computational-thinking;Mathematical-thinking;thinking-from-the-end},
  doi={10.1109/IJCIME49369.2019.00108},
  ISSN={},
  month={Dec},}@INPROCEEDINGS{9725213,
  author={Laura-Ochoa, Leticia and Bedregal-Alpaca, Norka},
  booktitle={2021 XVI Latin American Conference on Learning Technologies (LACLO)}, 
  title={Development of Computational Thinking Skills: An Experience With Undergraduate Students}, 
  year={2021},
  volume={},
  number={},
  pages={112-117},
  abstract={Computational thinking is a type of analytical thinking that is developed intentionally, that is, under a “learned” approach, and the best way to learn it is through computer programming. In this paper, the experience of using block-based programming environments such as Scratch, Lightbot and the PSelnt pseudo-code tool for the understanding of computational concepts and development of computational thinking skills is reported. A quasi-experimental methodological design was used, since it did not work with a control group. A mixed exploratory investigation was carried out. 85 first-year students from the Accounting Professional School of the National University of San Agustin de Arequipa participated in the experience. The results show that in introductory programming courses of short time period, teaching with block-based programming environments compared to the use of pseudocode with the PSelnt tool, facilitates the appropriation of computational concepts and the development of computational thinking skills; thus obtaining better learning results. It is concluded that block-based programming environments favor the construction of knowledge and foster the development of creativity and algorithmic thinking.},
  keywords={Design methodology;Education;Programming profession;Creativity;Programming environments;algorithmic thinking;computational thinking;constructionism;digital literacy;problem solving},
  doi={10.1109/LACLO54177.2021.00070},
  ISSN={},
  month={Oct},}@INPROCEEDINGS{6926576,
  author={Shuiyan He and Yongmin Hang and Yi Ding},
  booktitle={2014 9th International Conference on Computer Science & Education}, 
  title={Teaching method based on computational thinking a case research}, 
  year={2014},
  volume={},
  number={},
  pages={817-820},
  abstract={Computational thinking, also called structural thinking is characterized by design and construction. In view of the existing problems of traditional teaching methods in high vocational colleges, we propose a teaching method aimed at developing the computational thinking of students. This article analyses the courses of high vocational colleges and the characteristics of students firstly. Then we design the teaching activities based upon the principles and strategies of computational thinking. Finally we offer a real teaching case. The teaching evaluations from students indicate that the teaching method based on computational thinking is very effective.},
  keywords={Computers;Educational institutions;Laboratories;High vocational colleges;computational thinking;active directory},
  doi={10.1109/ICCSE.2014.6926576},
  ISSN={},
  month={Aug},}@INPROCEEDINGS{10685695,
  author={Xue, Tianyu and He, Shiyan and Guo, Weitong},
  booktitle={2024 International Symposium on Educational Technology (ISET)}, 
  title={Design and implementation of a graphical programming class for computational thinking in elementary schools}, 
  year={2024},
  volume={},
  number={},
  pages={376-380},
  abstract={As the process of artificial intelligence progresses, it is recognized that computational thinking is one of the basic skills for understanding and solving problems and one of the core literacies of the IT discipline. There are various ways to develop students’ computational thinking, and at the primary and secondary school levels, graphical programming classes are an important way to do so. This study establishes a framework for an instructional program aimed at developing students’ computational thinking skills based on elementary school graphic programming classes. Combining curriculum standards, graphic programming standards for youth programming skills, and International Computational Thinking Challenge standards, relevant teaching cases are designed to foster students’ computational thinking and promote the development of computational concepts, computational practices, and computational concepts.},
  keywords={Graphics;Educational technology;Artificial intelligence;Programming profession;Standards;Computational Thinking;Graphical Programming;Teaching},
  doi={10.1109/ISET61814.2024.00081},
  ISSN={2766-2144},
  month={July},}@INPROCEEDINGS{10211961,
  author={Raia, Marcos Librelon and Martins, André Giacon and Kas, Gustavo Paulino Al and Eliseo, Maria Amelia},
  booktitle={2023 18th Iberian Conference on Information Systems and Technologies (CISTI)}, 
  title={FruitSort: the educational computational thinking game with accessibility for hearing-impaired children}, 
  year={2023},
  volume={},
  number={},
  pages={1-6},
  abstract={This work addressed the teaching of Computational Thinking for children from 7 to 11 years of elementary school I for the teaching of logical reasoning. From studies on accessibility in games for children aged 7 to 11 years old, with hearing impairment, an inclusive game was developed to support the teaching of computational thinking in the learning of logic. For the development of the game, not only Computational Thinking were studied, but educational games for children with hearing impairment, in addition to web accessibility guidelines. As a result of the research carried out, an inclusive game, FruitSort, was implemented for children with hearing impairment, which addressed the Merge Sort Sorting Algorithm, to support the teaching of Computational Thinking through a playful and inclusive environment.},
  keywords={Education;Games;Auditory system;Aging;Cognition;Sorting;Information systems;Computational Thinking;inclusive games;hearing impairment},
  doi={10.23919/CISTI58278.2023.10211961},
  ISSN={2166-0727},
  month={June},}
