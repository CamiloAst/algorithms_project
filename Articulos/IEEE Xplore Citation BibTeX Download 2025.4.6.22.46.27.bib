@ARTICLE{10508087,
  author={Liao, Jian and Zhong, Linrong and Zhe, Longting and Xu, Handan and Liu, Ming and Xie, Tao},
  journal={IEEE Transactions on Learning Technologies}, 
  title={Scaffolding Computational Thinking With ChatGPT}, 
  year={2024},
  volume={17},
  number={},
  pages={1628-1642},
  abstract={ChatGPT has received considerable attention in education, particularly in programming education because of its capabilities in automated code generation and program repairing and scoring. However, few empirical studies have investigated the use of ChatGPT to customize a learning system for scaffolding students’ computational thinking. Therefore, this article proposes an intelligent programming scaffolding system using ChatGPT following the theoretical framework of computational thinking and scaffolding. A mixed-method study was conducted to investigate the affordance of the scaffolding system using ChatGPT, and the findings show that most students had positive attitudes about the proposed system, and it was effective in improving their computational thinking generally but not their problem-solving skills. Therefore, more scaffolding strategies are discussed with the aim of improving student computational thinking, especially regarding problem-solving skills. The findings of this study are expected to guide future designs of generative artificial intelligence tools embedded in intelligent learning systems to foster students’ computational thinking and programming learning.},
  keywords={Chatbots;Education;Programming profession;Codes;Task analysis;Problem-solving;Encoding;Artificial-intelligence-generated content (AIGC);ChatGPT;computational thinking (CT);scaffolding},
  doi={10.1109/TLT.2024.3392896},
  ISSN={1939-1382},
  month={},}@INPROCEEDINGS{10578918,
  author={Palomés, Xavier Pi I and Verdaguer-Codina, Joan and Casas, Pau Fonseca I and Rubiés-Viera, José Luis},
  booktitle={2024 IEEE Global Engineering Education Conference (EDUCON)}, 
  title={Physical and Digital Twin with Computational Thinking to Foster STEM Vocations in Primary Education}, 
  year={2024},
  volume={},
  number={},
  pages={1-8},
  abstract={This work aims to explore the application of the physical and digital twin pair as a computational thinking instrument to support learning and exercise proportional reasoning at the ages at which pursuing STEM studies is decided. Diverse studies reveal that the initial decision about the vocation in studies is made towards the end of the primary education stage, also from 8–9 years old. The Digital Transformation Commission of the Engineering Associations of Catalonia is concerned about the low number of young people who decide to pursue STEM studies. STEM explorations in early childhood lay the foundation for lifelong learning. In addition, from age 5, children informally begin to practice proportional reasoning, and in the third year of primary school (8–9 years old), the subject is formally introduced into the Primary Education curriculum. The notion of proportionality is very transversal, and it is one of the fundamental concepts of the STEM field. The consequences of an incomplete understanding of it directly or indirectly affect the attitude of subjects toward mathematics and the STEM world. With the emergence of Industry 4.0, the digital twin concept is becoming one of the central instruments of Digital Transformation. In this paper, we propose using computational thinking to help the understanding of proportional thinking using a physical and digital twin pair. In 2022, computational thinking was introduced into the Spanish and Catalan educational system's early childhood, primary, and secondary education curricula. It includes programming with block languages such as Scratch or Snap!. A digital twin of the system has also been implemented in Snap!. Through the collaboration of a primary school, a workshop has been prepared in which they exercise the concepts of proportional reasoning, such as ratio, proportion, scale, or percentage. The approach followed has consisted of developing a physical system of a floating ball, controlling the electric motor's power with an electronic system based on low-cost elements from the maker world. We have designed a very easy-to-use system for any teacher, and its open-source nature ensures its transparency and documentation. The foam ball rises and remains floating at a height determined by the power supplied to the motor. The control of the system is carried out with Snap!. It will be assumed that the engine revolutions are proportional to the power setpoint. The physical system generates a high level of expectation and attention in the students, facilitating the process of its abstraction. The range of options of the developed system allows experimenting with the actual system and a schematic digital twin with sound effects. In all cases, the same computational thinking tools have been used to exercise the concepts and powerful ideas of proportional reasoning. At the end of the workshop, the understanding of the concepts exercised and the assessment of their personal experience were evaluated. This gave us helpful information to motivate students of these ages and below to maintain their STEM vocation.},
  keywords={Computers;Instruments;Conferences;Toy manufacturing industry;Documentation;Cognition;Digital twins;Microworlds;Digital Twin;STEM;Computational Thinking;Proportional Reasoning},
  doi={10.1109/EDUCON60312.2024.10578918},
  ISSN={2165-9567},
  month={May},}@INPROCEEDINGS{10455810,
  author={Jumana, Athaillah Adhar and Umboh, Josua Golden and I Ketut Dharma Wijaya, K and Gunawan, Alexander Agung Santoso and Saputra, Karen Etania},
  booktitle={2023 6th International Conference on Information and Communications Technology (ICOIACT)}, 
  title={The Impact of Playing Multiplayer Online Battle Arena Video Games on the Enhancement of Computational Thinking Skills Among Students in Indonesia}, 
  year={2023},
  volume={},
  number={},
  pages={108-113},
  abstract={This research examines the impact of playing Multiplayer Online Battle Arena (MOBA) video games on computational thinking skills among Indonesian college students. Using a quantitative approach, structured and valid questionnaires were administered to collect data and explore the potential benefits of video games in education. The findings indicate that playing MOBA games is associated with enhanced computational thinking skills. Additionally, Participants recognized the positive influence of playing MOBA games on computational thinking, highlighting improved strategic thinking, decision-making, and team coordination as main benefits. These results contribute to the existing research on gaming and cognitive skills, underscoring the potential of MOBA games for fostering computational thinking abilities. Educators and program developers can utilize these insights to enhance teaching and learning methods by integrating video games.},
  keywords={Training;Learning systems;Video games;Data analysis;Decision making;Games;Particle measurements;Multiplayer Online Battle Arena;Computational Thinking;Students;Indonesia;Education and training},
  doi={10.1109/ICOIACT59844.2023.10455810},
  ISSN={2770-4661},
  month={Nov},}@INPROCEEDINGS{10107843,
  author={Qu, ZhiWei and Liu, JiaMing and Che, Lu and Su, YanXiu and Zhang, Wei},
  booktitle={2023 IEEE 12th International Conference on Educational and Information Technology (ICEIT)}, 
  title={Research on the Application of Gamification Programming Teaching for High School Students’ Computational Thinking Development}, 
  year={2023},
  volume={},
  number={},
  pages={144-149},
  abstract={Computational thinking, as one of the core literacies of the Chinese IT courses, is an important area of IT education in primary and secondary schools. This research aims to improve the level of computational thinking of high school students by using Minecraft as a tool for Python gamified programming teaching design and analyzing the effectiveness of 60 high school students’ improvement in algorithmic thinking, problem solving, creativity, critical thinking, and collaboration after the teaching practice. The research results show that gamified programming teaching can significantly improve high school students’ computational thinking, providing a new teaching approach and ideas for high school IT education and computational thinking development.},
  keywords={Education;Urban areas;Collaboration;Data models;Problem-solving;Information technology;Task analysis;game-based learning;gamification programming;computational thinking;high school information technology},
  doi={10.1109/ICEIT57125.2023.10107843},
  ISSN={},
  month={March},}@INPROCEEDINGS{9962501,
  author={Mendoza Diaz, Noemi V. and Trytten, Deborah A. and Meier, Russ},
  booktitle={2022 IEEE Frontiers in Education Conference (FIE)}, 
  title={Introductory Engineering Courses With Computational Thinking: The Impact of Educational Privilege and Engineering Major Entry Policy on Student Pathways}, 
  year={2022},
  volume={},
  number={},
  pages={1-9},
  abstract={This research category paper examines the impact of computational thinking within first-year engineering courses on student pathways into engineering. Computational thinking and programming appear in many introductory engineering courses. Prior work found that early computational thinking development is critical to the formation of engineers. This qualitative research paper extends the research by documenting how pre-university privileges impact first-year student trajectories into engineering through a qualitative examination of student interviews from three institutions with different processes for matriculation into engineering majors. We identify the underlying assumptions of meritocracy that are concealing the role of educational privilege in selecting which engineering students will be allowed to join the field. We provide a suggestion for how institutions can include computational thinking in introductory engineering courses with less risk of furthering the marginalization of students with few academic privileges.},
  keywords={Trajectory;Interviews;Engineering students;Programming profession;diversity;computational thinking;first year curriculum;persistence;matriculation},
  doi={10.1109/FIE56618.2022.9962501},
  ISSN={2377-634X},
  month={Oct},}@ARTICLE{9222821,
  author={Pinto, Juan D. and Quintana, Chris and Quintana, Rebecca M.},
  journal={Computing in Science & Engineering}, 
  title={Exemplifying Computational Thinking Scenarios in the Age of COVID-19: Examining the Pandemic's Effects in a Project-Based MOOC}, 
  year={2020},
  volume={22},
  number={6},
  pages={97-102},
  abstract={The rapid, global spread of COVID-19 has led to an unprecedented rise in enrollments in online learning experiences among learners of all ages. In this article, we explore the impact of the global pandemic on a massive open online course, Problem Solving Using Computational Thinking, with a particular focus on the topics learners chose for their final projects. The Computational Thinking MOOC was designed using a project-based learning approach and aims to provide learners with an introduction to the “big ideas” of computational thinking using a range of case studies that encompass topics such as airport surveillance, epidemiology, and human trafficking. Beyond observing a sharp increase in enrollment and engagement at the time the pandemic began, we discuss ways in which the course's project-based pedagogy allowed learners to bring their present experiences and concerns together with the course's subject matter in order to meet the learning objectives for the course. Many learners chose to address aspects of the pandemic in the course's final project and applied ideas about computational thinking to peer-graded assignments that conveyed an individualized sense of importance and urgency. We assert that this approach, along with the inclusion of a timely epidemiology case study, enabled learners to more deeply internalize the role that computational thinking can play in their own lives and in society as a whole.},
  keywords={Pandemics;Electronic learning;COVID-19;Computer aided instruction;Problem-solving},
  doi={10.1109/MCSE.2020.3024012},
  ISSN={1558-366X},
  month={Nov},}@INPROCEEDINGS{8985944,
  author={Jacob, Sharin and Nguyen, Ha and Richardson, Debra and Warschauer, Mark},
  booktitle={2019 Research on Equity and Sustained Participation in Engineering, Computing, and Technology (RESPECT)}, 
  title={Developing a Computational Thinking Curriculum for Multilingual Students: An Experience Report}, 
  year={2019},
  volume={},
  number={},
  pages={1-2},
  abstract={This study discusses a NSF-funded Research Practice Partnership (RPP) to develop and pilot instructional materials for teaching computational thinking to Grades 3-5 students, with a focus on language learners. The study takes place in a U.S. school district whose percentages of Latino/a students, language learners, and low-income students are among the highest in the nation. The project is among the first to examine the linguistic and sociocultural factors that facilitate the success of multilingual students in mastering computational thinking. Utilizing principles of Design-Based Implementation Research in alignment with the RPP approach, researchers worked collaboratively with teachers and administrators to identify problems of practice in computer science education specific to the district. A broad survey of national and regional computer science initiatives was conducted to identify effective approaches for teaching computational thinking to diverse learners. As a result of this survey, the RPP identified a pathbreaking curriculum that aligns with the Computer Science Teachers Association K-12 standards to pilot in five classrooms in the first year of the RPP. The curriculum was further revised to align with the Common Core State Standards for English Language Arts and the California English Language Development standards during a week-long summer institute. This paper describes these experiences, highlighting the integration of computational thinking into an English Language Arts curriculum as well as the linguistic scaffolding strategies utilized to better meet the needs of multilingual students. This experience report uncovers pedagogical practices of computational thinking for diverse students and identifies areas for future work.},
  keywords={},
  doi={10.1109/RESPECT46404.2019.8985944},
  ISSN={},
  month={Feb},}@INPROCEEDINGS{9497195,
  author={Saleh, Heba},
  booktitle={2017 27th International Conference on Computer Theory and Applications (ICCTA)}, 
  title={Computational Thinking Skills for Today and Tomorrow’s Talent}, 
  year={2017},
  volume={},
  number={},
  pages={1-1},
  abstract={Summary form only given, as follows. The complete presentation was not made available for publication as part of the conference proceedings. Computational thinking (CT) is a term invented by “J.M. Wing, 2006” to describe a set of thinking skills, behaviors, and approaches that are integral to solving complex challenges using a computer and widely applicable in the information society. CT is a must for today’s and tomorrow’s talent. The added-value of this early exposure to CT is that it will help juniors to shape a solid basis of algorithmic and data structures, which form the basic nuts and bolts of the mechanics of computer programming. The added value of developing professionals has its clear impact on the economy perspective, in light of the forecasted demand for today and tomorrow. (World economic forum, 2017) Computer programming is an outstanding way to develop computational thinking skills. It has been taken programming as a useful way for juniors to learn problem solving and computational thinking with an affirmative and quantifiable effect on juniors’ achievement, not only in areas such as math and science, but also in language skills, creativity, interpersonal skills and social emotional interaction.},
  keywords={Programming profession;Buildings;Information and communication technology;Shape;Qualifications;Problem-solving;Government},
  doi={10.1109/ICCTA43079.2017.9497195},
  ISSN={},
  month={Oct},}@ARTICLE{8130248,
  author={Aho, Alfred V.},
  journal={The Computer Journal}, 
  title={Computation and Computational Thinking}, 
  year={2012},
  volume={55},
  number={7},
  pages={832-835},
  abstract={We recommend using the term Computation in conjunction with a well-defined model of computation whose semantics is clear and which matches the problem being investigated. Computer science already has a number of useful clearly defined models of computation whose behaviors and capabilities are well understood. We should use such models as part of any definition of the term computation. However, for new domains of investigation where there are no appropriate models it may be necessary to invent new formalisms to represent the systems under study.},
  keywords={},
  doi={10.1093/comjnl/bxs074},
  ISSN={1460-2067},
  month={July},}@ARTICLE{9020189,
  author={Lin, Pei-Hsuan and Chen, Shih-Yeh},
  journal={IEEE Access}, 
  title={Design and Evaluation of a Deep Learning Recommendation Based Augmented Reality System for Teaching Programming and Computational Thinking}, 
  year={2020},
  volume={8},
  number={},
  pages={45689-45699},
  abstract={Programming is considered a skill to arouse and inspire learner's potential. Learning to program is a complex process that requires students to write grammar and instructions. The structure of a programming language does not cause impose problems to students, the real obstacle is how to apply these learned grammars and present them in a complete and correct program code for problem solving. In this study, a deep learning recommendation system was developed, which includes augmented reality (AR) technology, and learning theory, and is provided for study by students in non-major and also from different learning backgrounds. Those students divided into two groups, the students participating in the experimental group were using the AR system with deep learning recommendation and the students participating in the control group were using the AR system without deep learning recommendation. The results show that students in experimental group perform better than the control group with regards to learning achievement. On the other hand, in the part of computational thinking ability, students using a deep learning recommendation based AR system is significantly better than those using non-deep learning recommendation based AR system. Among the various dimensions of computational thinking, creativity, logical computing, critical thinking, and problem-solving skills are significantly different among the two groups of students. The students in experimental group perform better than the control group with regards to the dimensions of computational thinking, creativity, logical computing, critical thinking, and problem-solving skills.},
  keywords={Machine learning;Education;Programming profession;Problem-solving;Grammar;Augmented reality;Deep learning recommendation;computational thinking;AR technology},
  doi={10.1109/ACCESS.2020.2977679},
  ISSN={2169-3536},
  month={},}@INPROCEEDINGS{8615232,
  author={Wong, Gary K.W. and Jiang, Shan},
  booktitle={2018 IEEE International Conference on Teaching, Assessment, and Learning for Engineering (TALE)}, 
  title={Computational Thinking Education for Children: Algorithmic Thinking and Debugging}, 
  year={2018},
  volume={},
  number={},
  pages={328-334},
  abstract={The benefits of developing children's computational thinking have been widely discussed with various approaches and learning tools. This paper reports the piloting of second-year longitudinal study, aiming to examine the effect of computational thinking education on the 5th grade students (n = 85) as they develop their algorithmic thinking and debugging skills. The results show that students benefited from our designed curriculum with learning gains in algorithmic thinking, especially in analyzing and finding the essential instructions to solve computational problems. Students also achieved significant gains in debugging programs. The study demonstrated that with age-appropriate learning materials and learning approach, even young children can develop computational thinking skills important to thriving in 21st century. This pilot study sets the direction of analyzing the rest of the 5th grade students' performance as well as the next year study.},
  keywords={Education;Games;Debugging;Programming profession;Problem-solving;computational thinking;algorithmic thinking;debug;primary school;coding education},
  doi={10.1109/TALE.2018.8615232},
  ISSN={2470-6698},
  month={Dec},}@ARTICLE{8093668,
  author={Eguíluz, Andoni and Guenaga, Mariluz and Garaizar, Pablo and Olivares-Rodríguez, Cristian},
  journal={IEEE Transactions on Emerging Topics in Computing}, 
  title={Exploring the Progression of Early Programmers in a Set of Computational Thinking Challenges via Clickstream Analysis}, 
  year={2020},
  volume={8},
  number={1},
  pages={256-261},
  abstract={In recent years, many initiatives have aimed to develop basic computational thinking skills. Despite the popularity of online platforms for early programmers, we still lack detailed information to analyze how these skills are acquired. In the present study we analyzed clickstream data from 3,355 participants enrolled in several Computational Thinking workshops using Kodetu, an online platform with fine grained logging features. Participants used Kodetu's coding blocks to solve challenges of increasing difficulty while we gathered their clickstream in the platform. Here, we present our findings after evaluating these data in regards of participants' characteristics (age, sex, previous knowledge), similarity with previously submitted solutions, and degree of discrepancy from the optimal solution. To facilitate collaboration with other researchers in this area, we released our dataset under an open license. To the best of our knowledge, this is the largest Computational Thinking-related datasets publicly available.},
  keywords={Conferences;Tools;Programming profession;Encoding;Hidden Markov models;Aging;Computational thinking;computer science education;educational data mining;educational games;learning technologies;visual programming},
  doi={10.1109/TETC.2017.2768550},
  ISSN={2168-6750},
  month={Jan},}@INPROCEEDINGS{8363456,
  author={Burbaitė, Renata and Drąsutė, Vida and Štuikys, Vytautas},
  booktitle={2018 IEEE Global Engineering Education Conference (EDUCON)}, 
  title={Integration of computational thinking skills in STEM-driven computer science education}, 
  year={2018},
  volume={},
  number={},
  pages={1824-1832},
  abstract={In the context of Computer Science (CS) education, one of the most important goals is the development of computational thinking (CT) and problem solving skills. Computational thinking skills are closely related to the CS concepts and approaches. These skills cover fundamental programming concepts such as task decomposition, abstractions and generalization, data structures and algorithms. On the other hand, CS education challenges, promote the search for new educational tools, methods, activities and resources. Consequently, CS education should be extended by adding the STEM (Science, Technology, Engineering and Mathematics) paradigm principles. The aim of this paper is to show how STEM-driven CS education supports and ensures the development of computational thinking at the high school. We present the already published STEM-driven CS education approach aiming at extending it by introducing a model to assess student achievements, according to the revised Bloom's taxonomy in the connection with CT skills. As a practical implementation, we describe a curriculum of Programming Basics at the high school with respect to STEM-driven aspects and CT skills. We introduce two case studies implemented in the real educational environment. They provide the evidence of availability of our approach.},
  keywords={Engineering education;Conferences;Three-dimensional displays;Computational Thinking;STEM;STEM-Driven education;Computer Science education;STEM-driven CS education;Revised Bloom's Taxonomy},
  doi={10.1109/EDUCON.2018.8363456},
  ISSN={2165-9567},
  month={April},}@INPROCEEDINGS{8340502,
  author={Pedersen, Bjarke Kristian Maigaard Kjær and Andersen, Kamilla Egedal and J⊘rgensen, Anders and Köslich, Simon and Sherzai, Fardin and Nielsen, Jacob},
  booktitle={2018 IEEE Integrated STEM Education Conference (ISEC)}, 
  title={Towards playful learning and computational thinking — Developing the educational robot BRICKO}, 
  year={2018},
  volume={},
  number={},
  pages={37-44},
  abstract={Educational Robotics has proven a feasible way of supporting and exemplifying Computational Thinking. With this paper, we describe the user-centered iterative and incremental development of a new educational robotic system, BRICKO, to support tangible, social and playful interaction while educating children in 1st-3rd grade in Computational Thinking. We develop the system through seven main iterations including a total of 108 participant pupils and their teachers. The methodology is a mixture of observation and interviews using Wizard of OZ testing with the early pilot prototypes as well as usability and user experience testing with the following incrementally improved digital prototypes. Our results for development and evaluation are presented for each iteration leading onto the next and describes the evolution of both the BRICKO driving robot as well as the BRICKO programming-board and its different categories of command-bricks. We discuss the methodologies used for assuring a playful and social educational robotic system and conclude that we achieved a useful prototype for supporting education in Computational Thinking.},
  keywords={Robots;Usability;Observatories;Programming profession;Prototypes;Visualization;Computational thinking;educational robotics;playful learning;tangible learning},
  doi={10.1109/ISECon.2018.8340502},
  ISSN={},
  month={March},}@INPROCEEDINGS{9611850,
  author={Prompolmaueng, Waraporn and Wetmaha, Apisit and Jamsri, Pornsuree},
  booktitle={2021 13th International Conference on Information Technology and Electrical Engineering (ICITEE)}, 
  title={A Game Development to Promote Computational Thinking}, 
  year={2021},
  volume={},
  number={},
  pages={116-121},
  abstract={This paper focuses on game development using Mixed Reality technology, the Magic Leap One device, by exploring with The Lab and Unreal Engine program that are developed in game interpolating Computational Thinking (CT). The research device focuses on integrating thinking skills into 3D games with real-time user interaction. From mixed reality (MR) the application of technology is evaluated in its use for learning effectiveness. The game aims to promote a computational thinking process based on the terms and conditions within 5 levels as well as the complexity of the game with more obstacles in each level as the character travels from beginning to destination. Commands provide for different contexts. Major goal is using mixed reality technology to advance convergence in computing education and training in computational thinking (CT) to help players strengthen their thinking process and CT through the game. This game can be an alternative learning medium for the educator in primary school (Grade 4–6). The assessment of target users 10–15 persons before and after the game tests have 3 aspects in technology, CT, and usability of game performance. An expert evaluation was conducted after the test. Assessment of the overall game focuses on building of CT skill within the game relative to project objectives. Evaluation results were 77.8% by users and 88.6% by the expert. Furthermore, some useful suggestions from assessment suggest adding workshop guidelines for educators or trainers. Thus, this project contributes to the computing education community by using available cutting-edge technology as an optional teaching tool in CT that suits learners in education at the primary level and looks toward future development for higher education.},
  keywords={Training;Three-dimensional displays;Mixed reality;Games;Virtual reality;Tools;Media;Computational Thinking;Mixed Reality Technology;Game Development;Game-based Learning},
  doi={10.1109/ICITEE53064.2021.9611850},
  ISSN={},
  month={Oct},}@INPROCEEDINGS{9028499,
  author={Costa, Erick J. F. and Campelo, Cláudio E. C. and Campos, Lívia M. R. Sampaio},
  booktitle={2019 IEEE Frontiers in Education Conference (FIE)}, 
  title={Automatic Classification of Computational Thinking Skills in Elementary School Math Questions}, 
  year={2019},
  volume={},
  number={},
  pages={1-9},
  abstract={This research full paper presents the design of an automatic classifier for Computational Thinking skills in math questions, based on Machine Learning and Natural Language Processing techniques. We trained and evaluated our model using a dataset of real-world math questions. We obtained encouraging results that indicate the proposed approach may ease the process of assessing the level of alignment between math questions and Computational Thinking skills, which may help improve the problem-solving ability in students of elementary school. These results stimulate the use of automated environments for the elaboration, classification, and resolution of math questions in conformity with Computational Thinking skills.},
  keywords={Computer science;Predictive models;Natural language processing;Education;Data models;Feature extraction;Problem-solving;computational thinking;math problems;problem-solving ability;machine learning;natural language process},
  doi={10.1109/FIE43999.2019.9028499},
  ISSN={2377-634X},
  month={Oct},}@ARTICLE{9749967,
  author={Herrero-Álvarez, Rafael and Miranda, Gara and León, Coromoto and Segredo, Eduardo},
  journal={IEEE Transactions on Emerging Topics in Computing}, 
  title={Engaging Primary and Secondary School Students in Computer Science Through Computational Thinking Training}, 
  year={2023},
  volume={11},
  number={1},
  pages={56-69},
  abstract={Although Computer Science has grown to become one of the most highly demanded professional careers, every year, only a small percentage of students choose a degree directly related to Computer Science. Perhaps the problem lies in the lack of information that society has about Computer Science itself, and particularly about the work computer scientists do. No one doubts the role of Mathematics or Languages as core subjects in every primary and secondary education syllabus; however, Computer Science plays a negligible role in most current syllabuses. Only in a few countries have governments paid special attention to content related to Computer Science and to learning to analyze and solve problems the way computer scientists do (Computational Thinking). In this article, we present Piens@ Computacion@ULLmente, a project that provides a methodology to promote Computer Science through Computational Thinking activities among primary and secondary education students. The results obtained from an exhaustive statistical analysis of the data we collected demonstrate that the perception of Computer Science that pre-university students have can be improved through specific training. Moreover, we can also confirm that the performance of pre-university students involving Computational Thinking skills is independent of gender, particularly at the primary education level.},
  keywords={Computer science;Training;Problem-solving;Programming profession;Engineering profession;Licenses;Europe;Computer science;computational thinking;primary education;secondary education;syllabus},
  doi={10.1109/TETC.2022.3163650},
  ISSN={2168-6750},
  month={Jan},}@INPROCEEDINGS{9073671,
  author={Nuar, Ahmad Najmi Amerhaider and Rozan, Mohd Zaidi Abd},
  booktitle={2019 6th International Conference on Research and Innovation in Information Systems (ICRIIS)}, 
  title={Benefits of Computational Thinking in Entrepreneurship}, 
  year={2019},
  volume={},
  number={},
  pages={1-6},
  abstract={Computational thinking is an essential skill that allows humans to solve a complex problem that later on can be understood by computers and humans. Abstraction and automation are the core of computational thinking. Therefore, CT is the key skill in Industry 4.0. However, in Malaysia's manufacturing, only 50 percent of SMEs deploy automation. Automation can make the company more efficient, more accurate and decrease human error. CT was built based on 4 basic pillars which are abstraction, decomposition, algorithm and pattern recognition. These pillars will encourage automation, efficiency, and innovation. Moreover, one of the benefits of CT for nonprogrammer is the formulated problem can be passed on to information-processing agents such as third-party companies or freelancers who can create the solution. In this paper, we review the benefits of computational thinking in entrepreneurship in the context of Industry 4.0.},
  keywords={Entrepreneurship;Computed tomography;Industries;Automation;Technological innovation;Computers;computational thinking;industry 4.0;automation;entrepreneurship;small and medium enterprise},
  doi={10.1109/ICRIIS48246.2019.9073671},
  ISSN={2324-8157},
  month={Dec},}@INPROCEEDINGS{9273915,
  author={da Silva, Felippe Fernandes and Beatrys Ruiz Aylon, Linnyer and Flôr, Daniela Eloise},
  booktitle={2020 IEEE Frontiers in Education Conference (FIE)}, 
  title={Teaching Computational Thinking to a Student with Attention Deficit Through Programming}, 
  year={2020},
  volume={},
  number={},
  pages={1-9},
  abstract={This research-to-practice full paper deals with the difficulty that it is possible to teach computational thinking through the teaching of algorithms and programming to a person with ADD. We propose approaches to teach algorithms, knowing that it is a difficult task for many teachers. Likewise, inspiring the student's interest also has its difficulties. The Brazilian Computer Society (SBC) understands that it is fundamental and strategic for Brazil that computer content is taught in basic education. Considering the 4.0 education of a connected generation, the thinking of computer education is relevant to the construction of youth and adult education. When we include people with ADD, this challenge is not trivial. This work presents a case study carried out with a high school student who has ADD and the techniques that were used to teach him to program to maintain his interest in the area. The method used was divided into three stages: Computer Discovery (1); Introduction to computational thinking through programming (2); Learn by Doing, in line with real-world problem solving using pair programming technique and challenge-based learning strategy (3). In order to investigate the effectiveness of the developed strategies, an experimental case study was carried out with a student who has ADD. The student was introduced to the content and approaches for 34 weeks, totaling 204 hours. The student presented a strong indication of learning and will forever have the ability of computational thinking to program and develop their applications.},
  keywords={Education;Programming profession;Software;Tools;Pattern recognition;Parallel processing;Hardware;Computational Thinking;DDA;Active Methodologies;Education 4.0;Teaching Programming},
  doi={10.1109/FIE44824.2020.9273915},
  ISSN={2377-634X},
  month={Oct},}@INPROCEEDINGS{8753405,
  author={Falkner, Katrina and Vivian, Rebecca and Falkner, Nickolas},
  booktitle={2018 International Conference on Learning and Teaching in Computing and Engineering (LaTICE)}, 
  title={Supporting Computational Thinking Development in K-6}, 
  year={2018},
  volume={},
  number={},
  pages={126-133},
  abstract={This paper describes the CSER Digital Technologies MOOC curriculum, which aims to build confidence and awareness of fundamental computational thinking skills for teachers within the K-6 context. The CSER MOOC builds upon recent advances in the development of the Australian Curriculum Digital Technologies learning area, which explicitly addresses the development of computational thinking skills, moving ICT education away from digital literacy towards embedding the skills needed for the next generation to become creators of technology. The CSER MOOC presents a broad coverage of core computational thinking concepts, with a focus on integrating with existing learning areas and appropriate pedagogy for the K-6 context. In this paper, we discuss our course curriculum, its alignment with key concepts from the formal curriculum statements, example teacher assessments, and discuss key challenges and concerns.},
  keywords={Computational Thinking;K 6;Digital Technologies;Teacher Professional Development;MOOCs},
  doi={10.1109/LaTICE.2018.00031},
  ISSN={2475-1057},
  month={April},}@INPROCEEDINGS{9962398,
  author={Juárez, Erika Cervantes and Guzmán, Daniel Sánchez},
  booktitle={2022 IEEE Frontiers in Education Conference (FIE)}, 
  title={Developing the computational thinking process in Physics courses, an empirical study for the learning of the rigid body concept in engineering students}, 
  year={2022},
  volume={},
  number={},
  pages={1-6},
  abstract={In the present Research-to-practice Full-paper, the learning, reasoning, and problem-solving processes, in engineering students, have been analyzed from different approaches, one of them is the computational thinking process, where most of the activities must be performed as a computer does and the reasoning is developed with the well-oriented activities realized by them. In many of the engineering career programs, the Physics courses are fundamental, and because of the diversity in contexts, they have not been seen as a subject where students can develop the computational thinking process. Present work describes an empirical study based on the learning of the rigid body concept in physics, with the use of spreadsheets as an electronic tool for promoting the learning with the programming of all the dynamical system, describing the evolution, generating, and analyzing graphics, and explaining the physical phenomena with a high comprehension and transfer of knowledge. At the end, students identified where the concept can be applied in their professional context with the use of a simulation. The learning sequence was implemented in three sessions of 1.5 hours each one, two diagnostic tests were applied, one for identifying the previous knowledge and use of electronic spreadsheets, the second one used as a pretest and post-test, it was focused on the main concepts of the rigid body system, like forces, kinematics, and circular movement. The sequence was implemented with N = 77, students. Session 1, started with the introduction of electronic spreadsheets for their use in science and engineering, some examples in Physics and Mathematics were described with their respect feedbacking for students. For session two, the rigid body concept was described with the support of electronic spreadsheets, all the dynamics, equations, plotting of the results and the relationships of all variables were described; for reinforcing the concept learned, students were asked to solve two more similar exercises with the use of the spreadsheets as homework, and finally they were asked to record, in groups of three students, a video with the solution of the problem assigned. In the video, they must present the problem description, equations and dynamics involved in the solutions and explaining all the programming steps needed to perform the solution in an electronic spreadsheet with its graphical representation and interpretation of the variables, and a description of implications in the changing values of the variables in the mathematical model. At the end of the sequence, in session three, a virtual simulation related to their professional context was used for the reinforcement of all the concepts learned. For analyzing the impact in their learning process, the Normalized Conceptual Gain was used in the pre-test and post-test, results showed a g = 0.85, which represents a high learning and normalized conceptual gain. Finally, the results showed that the computational thinking process can be developed by students, as they must program equations, analyze data, understand it, and identify graphically the variables involved, linking the learning of a physical concept with a computational tool that let them understand in a more clear, specific, and ordered thinking.},
  keywords={Knowledge engineering;Engineering profession;Solids;Mathematical models;Cognition;Software;Engineering students;Computational thinking;engineering students;electronic spreadsheets for learning;physics courses in engineering;professional skills},
  doi={10.1109/FIE56618.2022.9962398},
  ISSN={2377-634X},
  month={Oct},}@ARTICLE{10506466,
  author={Kaleem, Muhammad and Hassan, Muhammad Awais and Khurshid, Syed Khaldoon},
  journal={IEEE Access}, 
  title={A Machine Learning-Based Adaptive Feedback System to Enhance Programming Skill Using Computational Thinking}, 
  year={2024},
  volume={12},
  number={},
  pages={59431-59440},
  abstract={The solution of a typical programming task involves algorithmic thinking, pattern recognition, decomposition, and abstraction skills. These skills are basic pillars of Computational thinking (CT) and are essential for a computer programmer. Therefore, a programming teacher needs to take these skills into account for the evaluation of students. Existing methods for improving programming competency don’t consider the Computational Thinking of students and perform grading of students without taking these skills into account. Due to this limitation, deficiencies of these skills in students remain unrevealed, posing difficulties for educators to provide need-oriented feedback. The performance of programming students is thus hindered by a lack of interventions. This study proposes a method to evaluate programming students in terms of CT skill components and group them based on their skill set. In this study, 780 students of object-oriented programming (OOP) class were given programming assignments for assessment of programming competencies. These students were then given small programming tasks requiring different computational thinking skill components for their solutions. A machine learning approach was used to perform grouping of these students based on their scores. Six groups of programming students, each having its own set of skill deficiencies, were identified as a result of clustering. One of the groups had an empty set of skill deficiencies and consisted of students proficient in programming. Each of the other five groups had a non-empty set of skill deficiencies and comprised non-proficient programming students. A group-specific skill development plan was built for the groups having skill deficiencies. It was found that such feedback was very effective and improved the CT skill deficiencies of 82% of students.},
  keywords={Programming;Programming profession;Codes;Task analysis;Source coding;Clustering algorithms;Feedback;Cognitive systems;Object oriented programming;Machine learning;Education;Performance evaluation;Computational thinking assessment;feedback;K-means clustering;programming},
  doi={10.1109/ACCESS.2024.3391873},
  ISSN={2169-3536},
  month={},}@INPROCEEDINGS{8095286,
  author={Altaher, Marah and Ferchichi, Ahmed},
  booktitle={2017 Joint International Conference on Information and Communication Technologies for Education and Training and International Conference on Computing in Arabic (ICCA-TICET)}, 
  title={Computational thinking and Relational Algorithmic Approach}, 
  year={2017},
  volume={},
  number={},
  pages={1-8},
  abstract={This article examine a new method of learning to solve problems using the concepts of computer science named computational thinking, which is a new term emerged in the last decade and was the subject of experts, researchers, associations, scientific bodies and academic institutions. we will study the approach of computational thinking and then we will develop this approach through a descriptive methodology based mainly on the specification and algorithms and achieve the concepts of computational thinking called Relational Algorithmic Approach and highlight the effectiveness of this methodology in education.},
  keywords={Education;Computer science;computational thinking;Relational Algorithmic Approach;learning and teaching;algorithm;specification},
  doi={10.1109/ICCA-TICET.2017.8095286},
  ISSN={},
  month={Aug},}@INPROCEEDINGS{9320665,
  author={Lin, Zeshan and Ke, Meimei},
  booktitle={2020 Ninth International Conference of Educational Innovation through Technology (EITT)}, 
  title={Instructional Procedure and Strategy of Primary School Programming Education Focusing on Cultivating Computational Thinking}, 
  year={2020},
  volume={},
  number={},
  pages={240-245},
  abstract={Based on the analysis of some famous instructional cases in programming education and in-depth interviews with primary school teachers who are engaged in programming education, this paper focuses on the instructional procedure and strategies of primary school programming education for cultivating students' computational thinking. This examination reveals the current situation and possible problems in the practice of cultivating computational thinking and provide some useful references. Continuous comparison are used to code and analyze the interview data. The article founds that the instructional procedure of cultivating computational thinking in programming education generally involves five major stages: knowledge review, new knowledge exploration, problem analysis, programming on computer, and the stage of reflection. Instructional strategies accordingly include: mind map-supported, unplugged programming, flow chart use, pair programming, log reflection, and more. Finally, the paper concludes with the problems that appeared in teaching, especially in the stage of new knowledge exploration, unplugged programming and pair-programming.},
  keywords={Programming profession;Education;Interviews;Problem-solving;Tools;Task analysis;Focusing;Computational thinking;Programming education;Instructional procedure;Instructional strategy},
  doi={10.1109/EITT50754.2020.00049},
  ISSN={2166-0549},
  month={Dec},}@INPROCEEDINGS{10148487,
  author={Cai, Haiyan and Wong, Gary K. W.},
  booktitle={2022 IEEE International Conference on Teaching, Assessment and Learning for Engineering (TALE)}, 
  title={Parental Involvement in Computational Thinking Education: A Systematic Review}, 
  year={2022},
  volume={},
  number={},
  pages={572-579},
  abstract={We conducted a systematic review of studies aimed at exploring the state of parental involvement in computational thinking (CT) education to facilitate students’ efficiency in learning computational thinking. In this review, we started with reviewing theories of parental involvement. Then we investigated and categorized types of parental involvement, parent roles, and parents’ psychological factors in the parenting process. We also supplemented a new involvement form in Level 2 of Hoover-Dempsey and Sandler’s Model of Parental Involvement in CT Education, namely parents’ support with concerns about using technology and CT tools. We proposed the Model of Parental Involvement in Computational Thinking Education. We conducted comprehensive research of related studies on parental involvement in CT education and identified the research gap in involving parents in children’s CT learning.},
  keywords={Systematics;Computational modeling;Education;Psychology;Computational efficiency;Problem-solving;Programming profession;parental involvement (PI);computational thinking (CT);PI types;parent roles;psychological factors},
  doi={10.1109/TALE54877.2022.00100},
  ISSN={2470-6698},
  month={Dec},}
