@INPROCEEDINGS{9976359,
  author={Dimos, Ioannis and Velaora, Chrysoula and Kakarountas, Athanasios},
  booktitle={2022 Panhellenic Conference on Electronics & Telecommunications (PACET)}, 
  title={Computational Thinking in Greek Educational System for K-12: towards the future teaching approach}, 
  year={2022},
  volume={},
  number={},
  pages={1-6},
  abstract={Computational thinking is considered an important skill set for 21st-century learners and became a subject of focus in K-12 education in recent years. It cultivates problem-solving and algorithmic thinking and can be helpful in wider aspects of everyday life, besides programming and computer science. In this paper, we investigated what is the Greek Primary and Secondary School Teachers’ understanding and awareness as far as Computational Thinking is concerned. Since teachers are the agents of change, it is critical to find out how familiar and/or skilled they are with the Computational Thinking notion. Thus, we applied a qualitative questionnaire all over the whole Greek State where 406 teachers answered. The study led to a number of interesting conclusions regarding the teacher’s readiness, as well as more generic aspects according to their profile and faculty.},
  keywords={Training;Telecommunications;Problem-solving;Programming profession;computational thinking;teachers;curriculum;skills;education},
  doi={10.1109/PACET56979.2022.9976359},
  ISSN={},
  month={Dec},}@INPROCEEDINGS{9470593,
  author={Anistyasari, Yeni and Ekohariadi, Ekohariadi and Asto Buditjahjanto, I. G. P and Hidayati, Shintami C},
  booktitle={2021 International e-Engineering Education Services Conference (e-Engineering)}, 
  title={Exploring The Psychometric Properties of Computational Thinking Assessment in Introductory Programming}, 
  year={2021},
  volume={},
  number={},
  pages={88-93},
  abstract={Computational thinking (CT) is considered as the skill of 21st century. The fundamental CT concepts include abstraction, algorithm design, decomposition, pattern recognition, and data representation or generalization. CT assessment is required to improve the understanding of the cognitive abilities and to relate them in related areas, such as introductory programming in computer science. Assessing computational thinking skills however is a challenging issue since it measures latent variables that cannot be directly observed. In addition, according to psychometrics, appropriate test requires a validation process before it can be effectively used as a measuring instrument. Thus, high quality tools for measuring student learning in Introductory Programming have been under-developed and under-researched. The objective of this work is to determine the psychometric properties (item validity, reliability, discrimination, difficulty, and distractors) of the developed multiple-choice questions of computational thinking in introductory programming by exploring classical test theory and item response theory which has not been deeply investigated by previous studies. The analysis results reveal that most of items are valid and the items are generally adequate reliable. In spite of the fact that some items are suggested to be revised since the item discrimination values, the distribution of difficulties, and distractor points are less than the expected threshold.},
  keywords={Instruments;Education;Programming;Reliability theory;Tools;Data structures;Pattern recognition;assessment;computational thinking;introductory programming;psychometric properties},
  doi={10.1109/e-Engineering47629.2021.9470593},
  ISSN={},
  month={June},}@INPROCEEDINGS{9563181,
  author={Wu, Tao and Chang, Maiga},
  booktitle={2021 IEEE International Conference on Educational Technology (ICET)}, 
  title={Infusing Computational Thinking into the Accounting Curriculum - Framework and Perspectives}, 
  year={2021},
  volume={},
  number={},
  pages={235-241},
  abstract={In the last two decades, computational thinking has been integrated into teaching of Engineering and Computer Science majors, and other science and engineering disciplines in universities. Computational Thinking plays a potential role in cultivating Accounting students' ability to use technology to solve problems. To extend the application of computational thinking in disciplines that are not necessarily related to science and engineering, this study proposes a new theoretical framework and curriculum design to promote the infusion of CT in the Accounting curriculum.},
  keywords={Computer science;Conferences;Educational technology;Computational Thinking (CT);Constructivism;Accounting;curriculum design;framework},
  doi={10.1109/ICET52293.2021.9563181},
  ISSN={},
  month={June},}@INPROCEEDINGS{8783479,
  author={Pierim Pereira, Nícolas and dos Santos Silva, Kennedy and Odakura, Valguima},
  booktitle={2018 XIII Latin American Conference on Learning Technologies (LACLO)}, 
  title={Tools to Support the Teaching-Learning of Computational Thinking in Brazil}, 
  year={2018},
  volume={},
  number={},
  pages={284-291},
  abstract={Computational thinking, or the problem-solving process driven by Computer Science concepts, has been acclaimed as a basic skill of the 21st century. In this context, several researches have been developed to insert computational thinking in schools. The objective of this work is to investigate the use of tools to support the teaching-learning of computational thinking in the national scenario. For this, a systematic mapping of the literature was carried out, using articles published in events and periodical of national relevance. For the analysis, 21 papers published between 2014 and 2017 were selected. The results of this mapping are: (a) the identification of the tools used; (b) what resources are required for the development of such tools, and (c) what benefits students have been reported in using the tools.},
  keywords={Tools;Computer science;Systematics;Portals;Conferences;Visualization;Problem-solving;Computational Thinking;Teaching Learning;Tools;Computer science;Systematic Mapping},
  doi={10.1109/LACLO.2018.00058},
  ISSN={},
  month={Oct},}@ARTICLE{10327734,
  author={Mendoza Diaz, Noemi V. and Yoon, So Yoon and Trytten, Deborah A. and Meier, Russ},
  journal={IEEE Access}, 
  title={Development and Validation of the Engineering Computational Thinking Diagnostic for Undergraduate Students}, 
  year={2023},
  volume={11},
  number={},
  pages={133099-133114},
  abstract={Computational thinking is one barrier to enculturating as a professional engineer. We created the Engineering Computational Thinking Diagnostic (ECTD) as an instructional tool that can identify at-risk first-year engineering students. The purpose of this study is to provide construct validity, internal consistency reliability, item characteristics, and criterion validity evidence for this diagnostic. From fall 2020 to fall 2021, 469 students from three institutions in the United States took the diagnostic. The data from 152 students at one institution was used to provide evidence of predictive validity. Exploratory and confirmatory factor analyses resulted in 20 items loading onto one factor in a good model fit range, with the internal consistency reliability coefficient, Cronbach  $\alpha $  of 0.86. From item analyses based on classical test theory, the diagnostic items on average tended to be slightly easy but had sufficient discrimination power. The correlation matrix for criterion validity evidence indicated that the diagnostic functions well to differentiate students’ computational thinking ability by prior computer science course experience as well as by first-generation status. Predictive validity evidence from regression analyses revealed the statistically significant effect of students’ diagnostic scores assessed at the beginning of the first semester on predicting their end of semester course grades. The ECTD can have a broad impact because it provides a tool to gauge the entry-level skills of students, enabling early curriculum interventions to help retention and persistence to graduation. We make the case that the ECTD could contribute to the development of a more diverse workforce in engineering.},
  keywords={Reliability;Instruments;Engineering students;Computational modeling;Programming profession;Reliability engineering;Analytical models;Computer science education;User experience;Computer science education;computational thinking;diagnostic method;student assessment tools;engineering education;first-year engineering student experience;quantitative research methods;retention;validity;factor analysis},
  doi={10.1109/ACCESS.2023.3335931},
  ISSN={2169-3536},
  month={},}@INPROCEEDINGS{10578701,
  author={Silapachote, Piyanuch and Srisuphab, Ananta and Hoonlor, Apirak and Sunetnanta, Thanwadee},
  booktitle={2024 IEEE Global Engineering Education Conference (EDUCON)}, 
  title={Mastering basic Sorting Algorithms through Computational Thinking Activities for Everyone}, 
  year={2024},
  volume={},
  number={},
  pages={1-5},
  abstract={Sorting is an algorithmic concept that is covered in every fundamental computer science and engineering course and included in most if not all programming competitions. It is an everyday task, self-taught and done naturally even by a small child. In spite of its ingenuousness, mastering sorting algorithms turns out to be not so simple for many first-time programmers. This happens because how humans perform sorting is far from being straightforwardly aligned with machine instructions. We have developed an unplugged game-based learning activity that aims not only to tackle this difficult dilemma but also to promote computational thinking practice. Our game robustly challenges audiences to complete a fun sorting task algorithmically and the building blocks of the exercise are methodologically grounded in the four cornerstones of computational thinking. Participants are gently guided through solving a problem by decomposing it, recognizing patterns, applying abstraction, writing step-by-step instructions, and finally arriving at a programmable solution. Our design is largely flexible. The game can be played in small groups or larger ones. It uses only common, readily accessible materials, and is easily adaptable to different levels of audiences, from the interested general public to secondary school students and teachers, to non-computer science undergraduates and those majoring in engineering or information technology related subjects. We have implemented this activity in our classrooms and conducted several workshops. Responses were markedly positive. Engaged from the beginning to the end, participants enjoyed the activity, having fun sorting. Appreciated the ideas, audiences were captivated by many surprising challenges. Most notably, they were able to comprehend the concepts of sorting algorithms and the computational steps behind them, and gain a better understanding of computational thinking.},
  keywords={Conferences;Games;Writing;Programming;Pattern recognition;Task analysis;Information technology;sorting algorithm;computational thinking;game-based learning activities;unplugged computing},
  doi={10.1109/EDUCON60312.2024.10578701},
  ISSN={2165-9567},
  month={May},}@INPROCEEDINGS{10013445,
  author={Paucar-Curasma, Ronald and Villalba-Condori, Klinge Orlando and Jara, Nolan Jara and Llamoca, Rosa Quispe and Tovar, Roberto Florentino Unsihuay and Malpartida, Katherin Felipa Carhuaz},
  booktitle={2022 XVII Latin American Conference on Learning Technologies (LACLO)}, 
  title={Technological project in the development of computational thinking and problem-solving}, 
  year={2022},
  volume={},
  number={},
  pages={1-6},
  abstract={In the article, the authors propose technological projects to develop computational thinking following the four problem-solving phases: understanding the problem, making the plan, executing the plan, and reviewing the solution. This study was based on a quantitative approach; the participants were 37 engineering students who had just entered university; also, the Pearson correlation statistical test was used to assess the relationship between computational thinking and problem- resolve. The activities of the technological projects have been developed using technological resources, such as the Arduino board, the mBlock software, and electronic sensors. It has been shown that following the problem-solving method based on the four phases contributes to the development of computational thinking skills in engineering students who have recently entered university.},
  keywords={Problem-solving;Instruments;Engineering students;Software;Robots;Visualization;Silicon;computational thinking;problem-solving;engineering students;technological projects},
  doi={10.1109/LACLO56648.2022.10013445},
  ISSN={},
  month={Oct},}@INPROCEEDINGS{8985843,
  author={Burke, Quinn and Roschelle, Jeremy and Angevine, Colin and O’Donnell, Kerri Ann and Smith, Kimberly and Weisgrau, Josh},
  booktitle={2019 Research on Equity and Sustained Participation in Engineering, Computing, and Technology (RESPECT)}, 
  title={Developing Inclusive K-12 Computing Pathways for the League of Innovative Schools}, 
  year={2019},
  volume={},
  number={},
  pages={1-1},
  abstract={This poster proposal for the 2019 RESPECT Conference reports on the ongoing progress of the NSF-funded computer science pathways project entitled “Developing Inclusive K-12 Computing Pathways for the League of Innovative Schools” (award #1837386). Entitled “CT Pathways” for short, the three-year research practitioner partnership (RPP) is a collaboration between Digital Promise Global, Digital Promise, and the League of Innovative Schools, a national network of 101 school districts across 33 states, serving over 3 million students. The goal of CT Pathways is to design, investigate and improve inclusive computing pathways for all K-12 students, starting in elementary school and going through high school. In this RPP, researchers join with three “Core” districts and twelve “Pilot” districts from the League of Innovative Schools to focus on districts’ Hispanic and African American students, Title 1 schools and, more generally, their girls and low-income students. The poster presentation will focus on the first of CT Pathways’ three research questions: How do individual participating League districts define the purpose (“the why”) of CS and CT education, and how do these individual rationales subsequently inform respective district’s intention to offer their students more equitable access to CS/CT content (“the how”)? Results will be reported via baseline pre-survey results from district administrators as well as through follow-up interviews/discussions with select district leads. At this early stage, the primary goal is to help districts align the economic and digital literacy rationales for CS/CT education with the wider social justice and broadening participation considerations they have identified.},
  keywords={Education;Computer science;Collaboration;Proposals;Engineering computing;Economics;computational thinking;CSforAll;equity;computer science pathways},
  doi={10.1109/RESPECT46404.2019.8985843},
  ISSN={},
  month={Feb},}@INPROCEEDINGS{5295278,
  author={Howland, Katy and Good, Judith and Nicholson, Keiron},
  booktitle={2009 IEEE Symposium on Visual Languages and Human-Centric Computing (VL/HCC)}, 
  title={Language-based support for computational thinking}, 
  year={2009},
  volume={},
  number={},
  pages={147-150},
  abstract={This paper explores the potential for simplified programming languages to support the development of computational thinking skills in nonprogrammers. We suggest that novice programming languages might offer a starting point for nonprogrammers to engage with a substantial subset of computational thinking concepts, and assess a number of languages from this perspective. We outline four key computational thinking skills and examine the support provided by existing languages. We then describe additional characteristics which would be important for a new language aimed specifically at developing computational thinking skills.},
  keywords={Computer languages;Computer science;Informatics;Humans;Education;Programming profession;Concrete},
  doi={10.1109/VLHCC.2009.5295278},
  ISSN={1943-6106},
  month={Sep.},}@INPROCEEDINGS{10086259,
  author={Zhao, Fengzhi and Liu, Sijie},
  booktitle={2022 12th International Conference on Information Technology in Medicine and Education (ITME)}, 
  title={Research on blended teaching reform based on computational thinking}, 
  year={2022},
  volume={},
  number={},
  pages={184-188},
  abstract={The outbreak of COVID-19 has impacted traditional teaching methods in schools, and blended teaching in the post-pandemic has gradually become a hot topic of research in higher education. Computational thinking, as one of the core literacies to be acquired in the 21st century, can help students realize the importance of computers as well as enable them to solve specific problems more effectively when facing real-life situations. The article takes the C language programming course as an example, analyzes the problems faced in teaching in the post-pandemic, introduces the concept of computational thinking and integrates it into all aspects of blended teaching design, pays attention to students' individual differences, and proposes a blended teaching model based on computational thinking and puts it into practice. The results show that this teaching model can improve students' learning performance, exercise students' computational thinking skills, and promote blended teaching reform and students' personalized development.},
  keywords={Computers;Training;COVID-19;Computational modeling;Education;C languages;Problem-solving;computional thinking;blended teaching;teaching reform;personalized learning},
  doi={10.1109/ITME56794.2022.00048},
  ISSN={2474-3828},
  month={Nov},}@INPROCEEDINGS{10063777,
  author={Quezada, Lida and Maldonado, Marlon},
  booktitle={2022 Third International Conference on Information Systems and Software Technologies (ICI2ST)}, 
  title={Educational Robotics as a Strategy to Develop Computational Thinking in Basic General Education}, 
  year={2022},
  volume={},
  number={},
  pages={158-163},
  abstract={This research purpose is to figure out whether educational robotics is a strategy to develop young children's computational thinking. The method used in this research was quantitative with a descriptive exploratory scope, with an inductive-deductive approach. The sample consisted of 28 students taken from the population of the tenth-grade students of “Santa Mariana de Jesús” high school. The technique used was the survey and the data collection instrument was a questionnaire at the beginning (Pre-Test) and at the end of the process (Post Test). A "Rubric to evaluate computational thinking" using the Likert scale was used for its tabulation, with the use of the STEAM instructional framework learning methodology, and a "Checklist" was used to monitor the progress of the project. The result of the data analysis showed positive increase in computational thinking skills, due to in the Post Test the students reached the scale Very well with 64%, taking into account that in the beginning (PreTest) it was 14%, concluding that educational robotics is a didactic strategy that promotes computational thinking.},
  keywords={Robots;Instruments;Software;Information systems;Education;Visualization;Technological innovation;Palabras Clave – educación;pensamiento computacional;robótica educativa;innovación;creatividad},
  doi={10.1109/ICI2ST57350.2022.00030},
  ISSN={},
  month={Nov},}@INPROCEEDINGS{10398343,
  author={Macko, Vladimir and Felber, Pascal and Bergram, Kristoffer and Holzer, Adrian},
  booktitle={2023 IEEE International Conference on Teaching, Assessment and Learning for Engineering (TALE)}, 
  title={Using Educational Robotics to Support Active Learning Experiences and Foster Computational Thinking Skills among Non-STEM University Students}, 
  year={2023},
  volume={},
  number={},
  pages={1-8},
  abstract={During the last two decades educational robotics became a popular tool for teaching STEM concepts to audiences of all levels. Yet, its use for teaching programming with university-level non-STEM audiences has not been researched so far. This work presents a new educational activity designed for teaching programming to non-STEM university-level audiences. The key aspect is a separation of teaching programming concepts and programming language and; therefore, complexity reduction in learning. The concepts are introduced using educational robotics and later on students learn how to use the concepts in the context of the Python programming language. Two teaching approaches, direct instruction and productive failure, along with a capstone challenge are deployed and their relationship to educational robotics is observed.},
  keywords={Education;Complexity theory;Robots;Programming profession;Python;Interactive learning environments;Collaborative learning;Human Computer Interaction;Educational Robotics;Programming Education;Productive failure},
  doi={10.1109/TALE56641.2023.10398343},
  ISSN={},
  month={Nov},}@INPROCEEDINGS{7751839,
  author={Brackmann, Christian and Barone, Dante and Casali, Ana and Boucinha, Rafael and Muñoz-Hernandez, Susana},
  booktitle={2016 International Symposium on Computers in Education (SIIE)}, 
  title={Computational thinking: Panorama of the Americas}, 
  year={2016},
  volume={},
  number={},
  pages={1-6},
  abstract={Computers cause an impact in almost every single aspect of our lives, however, unfortunately, schools have not been able to keep up with this irreversible evolution. The simple use of technological apparatuses in the classroom does not guarantee the improvement of the learning process, however it can be the medium through which the students find the alternatives for the solution of complex problems. The Computational Thinking is an approach of teaching that uses a diverse range of techniques derived from computers for the resolution of these problems combined with the new competencies of the 21st century (critical thinking, collaboration, etc.). The adoption of the notion of Computing within the basic education schools is a concern in many countries, where the implementation occurs in a strict way. Admittedly, it grows the idea that the Computing discipline is very distinct from the computer classes and that the use of skills from Computing possesses educational (reflection and problem solving, the comprehension that the world is ingrained with the digital technology) and economic (high demand of professionals with good training) benefits. This article, through the vast bibliographic review, describes an international landscape of countries of all Americas, in order to contextualize the reader in respect to the adoption of Computational Thinking within the basic education schools.},
  keywords={Computers;Training;Problem-solving;Economics;Electronic mail;Companies;Computational Thinking;Basic Education;Computing at Schools},
  doi={10.1109/SIIE.2016.7751839},
  ISSN={},
  month={Sep.},}@ARTICLE{8894360,
  author={Echeverría, Leovy and Cobos, Ruth and Morales, Mario},
  journal={IEEE Revista Iberoamericana de Tecnologias del Aprendizaje}, 
  title={Improving the Students Computational Thinking Skills With Collaborative Learning Techniques}, 
  year={2019},
  volume={14},
  number={4},
  pages={196-206},
  abstract={In this paper we present a STEM education initiative. This initiative involves an improved learning approach by means of the implementation of collaborative learning techniques. The proposed approach promotes computational thinking skills in a group manner to improve the learning of geometry. Two case studies were performed with primary school children in the fourth grade at the Comfacor School (Montería-Colombia). The aim of these studies was to analyse the effects of the improved approach in three aspects: the children' motivation, satisfaction and performance. The obtained results provide evidence that the learning of geometry was enhanced thanks to the proposed approach implemented based on a computational thinking strategy.},
  keywords={Geometry;Tools;Programming profession;Education;Collaborative work;Computational thinking skills;Moodle-G;pair-learning of geometry;collaborative learning techniques},
  doi={10.1109/RITA.2019.2952299},
  ISSN={1932-8540},
  month={Nov},}@INPROCEEDINGS{7044489,
  author={Shell, Duane F. and Hazley, Melissa Patterson and Soh, Leen-Kiat and Dee Miller, L. and Chiriacescu, Vlad and Ingraham, Elizabeth},
  booktitle={2014 IEEE Frontiers in Education Conference (FIE) Proceedings}, 
  title={Improving learning of computational thinking using computational creativity exercises in a college CSI computer science course for engineers}, 
  year={2014},
  volume={},
  number={},
  pages={1-7},
  abstract={Promoting computational thinking is a priority in CS education and other STEM and non-STEM disciplines. Our innovative, NSF-funded IC2Think project blends computational and creative thinking. In Spring 2013, we deployed Computational Creativity Exercises (CCE) designed to engage creative competencies (Surrounding, Capturing, Challenging and Broadening) in an introductory CSI course for engineering students. We compared this CCE implementation semester (80 students, 95% completing 3 or 4 CCEs) to the Fall 2013 semester of the same course (55 students) without CCEs. CCE implementation students had significantly higher scores on a CS concepts and skills knowledge test (F(1, 132) = 7.72, p < 01, partial Eta2 = .055; M=7.47 to M=6.13; 13 items) and significantly higher self-efficacy for applying CS knowledge in their field (F(1, 153) = 12.22, p < .01, partial Eta2 = .074; M=70.64 to M=61.47; 100-point scale). CCE implementation students had significantly higher study time (t(1, 136) = 2.08, p = .04; M=3.88 to M=3.29; 7-point scale) and significantly lower lack of regulation, which measures difficulties with studying (t(1, 136) = 2.82, p = .006; M=2.80 to M=3.21; 5-point scale). The addition of computational creativity exercises to CS courses may improve computational thinking and learning of CS knowledge and skills.},
  keywords={Educational institutions;Instruments;Problem-solving;Programming;Reflection;Engineering profession;CSI;Creative Thinking;Computational Thinking;Engineering;Student Learning;Self-Regulation;Engagement;Self-Efficacy},
  doi={10.1109/FIE.2014.7044489},
  ISSN={2377-634X},
  month={Oct},}@INPROCEEDINGS{9637416,
  author={Pears, Arnold and Tedre, Matti and Valtonen, Teemu and Vartiainen, Henriikka},
  booktitle={2021 IEEE Frontiers in Education Conference (FIE)}, 
  title={What Makes Computational Thinking so Troublesome?}, 
  year={2021},
  volume={},
  number={},
  pages={1-7},
  abstract={This Research Full Paper addresses the definition and implementation of Computational Thinking (CT) in K-12 education. CT is the focus of ongoing debate about the future of computing in schools, and this poses a number of challenges. Early discussions on the topic were plagued by vague and all-encompassing definitions of the term, which raised awareness of a need for school learning focused on emerging computational systems and their impact on society and the lives of citizens, but failed to address what should actually be included in the revised curricula. As some of those issues have been addressed, a number of problems remain. This paper analyses some recent and future developments in the field of computing, and expands the discussion on the vexed question of the nature and limits of computational thinking. We ask whether the current mainstream literature and curriculum for CT is well positioned in terms of the future towards which computing is heading. We conclude by summarising the implications these questions have for the future development of K-12 curricula and teaching practices.},
  keywords={Training;Limiting;Conferences;Education;Data visualization;Parallel processing;Fish;computational thinking;machine learning;programming paradigms;artificial intelligence;data agency},
  doi={10.1109/FIE49875.2021.9637416},
  ISSN={2377-634X},
  month={Oct},}@INPROCEEDINGS{8166701,
  author={Missiroli, Marcello and Russo, Daniel and Ciancarini, Paolo},
  booktitle={2017 IEEE 30th Conference on Software Engineering Education and Training (CSEE&T)}, 
  title={Cooperative Thinking, or: Computational Thinking Meets Agile}, 
  year={2017},
  volume={},
  number={},
  pages={187-191},
  abstract={In this paper, we propose the Computational Thinking concept, which is obtained by enhancing by merging the values of Computational Thinking and Agile. We analyze four existing teaching models for training Cooperative Thinkers, supported by experimental data, and propose an educational path that can promote the early development of this complex skill.},
  keywords={Education;Programming profession;Computational modeling;Encoding;Software engineering;Computational Thinking;Agile Development;Education},
  doi={10.1109/CSEET.2017.37},
  ISSN={2377-570X},
  month={Nov},}@ARTICLE{8305543,
  author={Rojas-López, Arturo and García-Peñalvo, Francisco José},
  journal={IEEE Revista Iberoamericana de Tecnologias del Aprendizaje}, 
  title={Learning Scenarios for the Subject Methodology of Programming From Evaluating the Computational Thinking of New Students}, 
  year={2018},
  volume={13},
  number={1},
  pages={30-36},
  abstract={Computational thinking is a cognitive process that allows generating solutions to problems through the use of skills, such as abstraction, decomposition, and algorithmic design. This paper presents the proposal to evaluate computational thinking of new students to relate knowledge indicated in the subject methodology of programming and to offer an initial environment of learning. This paper describes the exercises selected to evaluate the previously mentioned skills, and correspondence between the different contents of the course; using a qualitative methodology, the experiences of 65 students were evaluated. The results obtained favored activity carried out, and they also indicated improvements for future generations.},
  keywords={Programming profession;Education;Taxonomy;Computed tomography;Proposals;Problem-solving;Computational thinking;computer programming course;higher education;new students;programming learning},
  doi={10.1109/RITA.2018.2809941},
  ISSN={1932-8540},
  month={Feb},}@INPROCEEDINGS{8252381,
  author={Jiang, Shan and Wong, Gary K.W.},
  booktitle={2017 IEEE 6th International Conference on Teaching, Assessment, and Learning for Engineering (TALE)}, 
  title={Assessing primary school students' intrinsic motivation of computational thinking}, 
  year={2017},
  volume={},
  number={},
  pages={469-474},
  abstract={Intrinsic Motivation Inventory is a self-report instrument used to assess participants' experience regarding a particular activity. This paper examined the psychometric properties of a revised Intrinsic Motivation Inventory in the context of computational thinking learning. A total of 400 students from 4th grade participated in the pilot study. The revised instrument measured students' intrinsic motivation from four dimensions: interest/enjoyment, perceived competence, value/usefulness, and relatedness. The main findings of the study are twofold: (1) primary school students showed moderate to high motivation to learn computational thinking through programming and CS Unplugged; (2) factor analysis revealed that single factor model and multifactor model had good fit indices. However, discriminant validity of multifactor model was poor, suggesting the existence of a general factor.},
  keywords={Instruments;Education;Load modeling;Loading;Programming profession;Computational modeling;Intrinsic Motivation Inventory;intrinsic motivation;factor analysis;computational thinking},
  doi={10.1109/TALE.2017.8252381},
  ISSN={2470-6698},
  month={Dec},}@INPROCEEDINGS{7344241,
  author={Burgett, T. and Folk, R. and Fulton, J. and Peel, A. and Pontelli, E. and Szczepanski, V.},
  booktitle={2015 IEEE Frontiers in Education Conference (FIE)}, 
  title={DISSECT: Analysis of pedagogical techniques to integrate computational thinking into K-12 curricula}, 
  year={2015},
  volume={},
  number={},
  pages={1-9},
  abstract={This paper analyzes the efforts of DISSECT (DIScover SciEnce through Computational Thinking) to introduce computer science theories into K-12 Curricula. This is accomplished by teaching computational thinking (CT) problem solving techniques in existing STEM+C courses in select middle and high school classrooms in Las Cruces, New Mexico, USA. Data collected over the course of the fall 2014 and spring 2015 semesters involving 10 graduate fellows, 9 teachers, and over 200 K-12 students has been analyzed. A single assessment was issued at the beginning and end of each semester in order to track metrics about fellow-teacher pairings, student understanding of CT concepts, and student interest in STEM+C areas. Using statistical analysis software to evaluate the data, we were able to determine the efficacy of the DISSECT program. In particular, we use descriptive statistics to evaluate the trends in CT vocabulary recognition and overall interest in computing, and we compare trends across courses and grade levels.},
  keywords={Fellows;Computer science;Computers;Education;Problem-solving;Computed tomography;Statistical analysis;Computer science;computational thinking;K-12;graduate fellows;statistical analysis;stem+c},
  doi={10.1109/FIE.2015.7344241},
  ISSN={},
  month={Oct},}@ARTICLE{8305482,
  author={Seoane Pardo, Antonio Miguel},
  journal={IEEE Revista Iberoamericana de Tecnologias del Aprendizaje}, 
  title={Computational Thinking Between Philosophy and STEM—Programming Decision Making Applied to the Behavior of “Moral Machines” in Ethical Values Classroom}, 
  year={2018},
  volume={13},
  number={1},
  pages={20-29},
  abstract={This paper describes a learning activity on computational thinking in ethics classroom with compulsory secondary school students (14-16 years old). It is based on the assumption that computational thinking (or better “logical thinking”) is applicable not only to science, technology, engineering, and mathematics subjects but to any other field in education, and it is particularly suited for decision making in moral dilemmas. This will be carried out through the study of so called “moral machines," using a game-based learning approach on self-driving vehicles and the need to program such cars to perform certain behavior's under extreme situations. Students will be asked to logically base their reasoning on different ethical approaches and try to develop a schema of decision making that could serve to program a machine to respond to those situations. Students will also have to deal with the uncertainty of reaching solutions that will be debatable and not universally accepted as a part of the difficulty, more ethical than technical, to provide machines with the ability to take decisions where there is no such thing as a “right” versus “wrong” answer, and potentially both (or more) of the possible actions will bring unwanted consequences.},
  keywords={Ethics;Europe;Decision making;Technological innovation;Training;Computer science;Computational thinking;decision making;game-based learning;ethics;logic;moral machines;self-driving car},
  doi={10.1109/RITA.2018.2809940},
  ISSN={1932-8540},
  month={Feb},}@INPROCEEDINGS{9272487,
  author={Jacob, Sharin and Nguyen, Ha and Garcia, Leiny and Richardson, Debra and Warschauer, Mark},
  booktitle={2020 Research on Equity and Sustained Participation in Engineering, Computing, and Technology (RESPECT)}, 
  title={Teaching Computational Thinking to Multilingual Students through Inquiry-based Learning}, 
  year={2020},
  volume={1},
  number={},
  pages={1-8},
  abstract={Central to the theory of learning are inquiry-based approaches to education. Whereas there is a plethora of research on inquiry learning in the domain of science [19], [20], few studies have analyzed how inquiry-based learning can be applied to computer science education, and how different approaches to inquiry may benefit diverse learners. This is one of the first studies to analyze teacher enactment of inquiry-based learning during the implementation of an upper elementary, computational thinking curriculum, and to explore how teacher approaches to inquiry appear to support or constrain multilingual students' development of computational thinking and computer science identities. Design-based research was used to iteratively develop, test, and refine the inquiry-based curriculum, which aligns with computer science and literacy standards, provides linguistic scaffolding, and integrates culturally responsive materials. We adopt a cross-case mixed-methods design to collect data from five teachers and 149 students including detailed field notes, teacher interviews, student computational artifacts, and student identity surveys. Through analyses of teacher moves, we find that teachers adopt different approaches to inquiry that can be indexed along a continuum ranging from open to closed. Patterns in student data revealed that those who received more structured inquiry lessons developed more sophisticated computational artifacts and showed greater identification with the field of computer science. Findings from this study are being used to add more structured inquiry approaches to the next iteration of our curriculum, including integrating USE/MODIFY/CREATE models into lessons and applying metacognitive strategies from reading research to students' programming activities.},
  keywords={Computer science;Education;Standards;Linguistics;Statistics;Sociology;Interviews;inquiry-based learning;computer science;computational thinking;multilingual;English learners},
  doi={10.1109/RESPECT49803.2020.9272487},
  ISSN={},
  month={March},}@INPROCEEDINGS{9454003,
  author={Psycharis, Sarantos and Kalovrektis, Konstantinos and Xenakis, Apostolos and Paliokas, Ioannis and Patrinopoulos, Matthaios and Georgiakakis, Petros and Iatrou, Paraskevi and Theodorou, Paraskevi and Papageorgiou, Theodora and Ntourou, Vasiliki},
  booktitle={2021 IEEE Global Engineering Education Conference (EDUCON)}, 
  title={The Impact of Physical Computing and Computational Pedagogy on Girl’s Self – Efficacy and Computational Thinking Practice}, 
  year={2021},
  volume={},
  number={},
  pages={308-315},
  abstract={Research studies provide some evidence that computing and education robotics have a positive impact on female students' engagement in Computational Thinking (CT) practices and their self-efficacy for CT. Other issues raised by research concern the decontextualization of computing education from the actual lives of students which causes problems for students under represented in the fields of computing and engineering, such as female students. To tackle this problem, paper aimed to develop (STEM-Computational Thinking (CT)-Computing) scenarios related to students' actual lives and their local communities in order to help female students to develop STEM(Science, Technology, Engineering, Mathematics) competences, when core disciplinary ideas and cross-cutting concepts are infused in the scenarios. All scenarios were implemented using the didactic model of inquiry teaching and learning and the engineering design thinking instruction strategy using physical computing activities. A validated questionnaire for self-efficacy and CT practices was applied before and after the intervention to female prospective engineering school teachers studying at Higher Education Institutes in Greece. Results show a strong evidence for the effectiveness (enhancement of CT efficacy of female students) by using the STEM content epistemology through activities implemented with physical computing platforms.},
  keywords={Conferences;Computational modeling;Mathematical model;Engineering education;Robots;Computational Pedagogy;STEM;Computational Thinking;Women in Engineering;Physical Computing},
  doi={10.1109/EDUCON46332.2021.9454003},
  ISSN={2165-9567},
  month={April},}@INPROCEEDINGS{7344238,
  author={Folk, R. and Lee, G. and Michalenko, A. and Peel, A. and Pontelli, E.},
  booktitle={2015 IEEE Frontiers in Education Conference (FIE)}, 
  title={GK-12 DISSECT: Incorporating computational thinking with K-12 science without computer access}, 
  year={2015},
  volume={},
  number={},
  pages={1-8},
  abstract={Computational Thinking (CT) introduces computing concepts and demonstrates their usefulness in many other disciplines. CT principles such as algorithmic problem solving, abstraction, modeling and simulation, are integrated into existing STEM (Science, Technology, Engineering, Mathematics) curricula by DISSECT (DIScover SciEnce through Computational Thinking). By pairing a local K-12 teacher with a graduate fellow, DISSECT provides instruction and resources as instruments that are pertinent to each specific discipline. These skills in problem-solving and abstract reasoning are necessary for students to be able to compete in the modern and future job markets. DISSECT works to provide these skill-sets to students and classrooms that lack access to computers. The K-12 teachers and graduate fellows work together to develop modules that are capable of teaching CT concepts that are directly tied to their current curriculum while removing the need for access to computer systems. This paper will focus on the modules developed and executed in middle and high school classrooms, emphasizing the creative ways explored to operate in a computer-free environment discussing the strengths and weaknesses of different approaches, while qualitatively assessing student engagement, learning, and interaction which is gathered through teacher interviews, observations and informal talks with students.},
  keywords={Fellows;Computer science;Computers;Biology;Problem-solving;Training;Computational Thinking;K-12;Graduate Fellows},
  doi={10.1109/FIE.2015.7344238},
  ISSN={},
  month={Oct},}@ARTICLE{8012290,
  author={Yaşar, Osman},
  journal={Computing in Science & Engineering}, 
  title={The Essence of Computational Thinking}, 
  year={2017},
  volume={19},
  number={4},
  pages={74-82},
  abstract={A decade of discourse to capture the essence of computational thinking has resulted in a broad set of skills whose teaching continue to pose challenges because of the reliance on the use of electronic computers and programming concepts. This article not only links computational thinking skills to fundamental cognitive competencies but also describes pedagogical tools that have proven effective in teaching them at early ages.},
  keywords={Computational modeling;Cognitive systems;Deductive databases;Brain modeling;Computational modeling;Programming;modeling and simulation;deductive and inductive reasoning;computational thinking;scientific computing},
  doi={10.1109/MCSE.2017.3151241},
  ISSN={1558-366X},
  month={},}
