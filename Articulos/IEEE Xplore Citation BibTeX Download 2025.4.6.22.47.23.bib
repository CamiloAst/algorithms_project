@INBOOK{8709378,
  author={Denning, Peter J. and Tedre, Matti},
  booktitle={Computational Thinking}, 
  title={7 COMPUTATIONAL SCIENCE}, 
  year={2019},
  volume={},
  number={},
  pages={149-174},
  abstract={The sciences do not try to explain, they hardly even try to interpret, they mainly make models.},
  keywords={},
  doi={},
  ISSN={},
  publisher={MIT Press},
  isbn={9780262353410},
  url={https://ieeexplore-ieee-org.crai.referencistas.com/document/8709378},}@INBOOK{8709312,
  author={Denning, Peter J. and Tedre, Matti},
  booktitle={Computational Thinking}, 
  title={3 COMPUTING MACHINES}, 
  year={2019},
  volume={},
  number={},
  pages={45-69},
  abstract={The intolerable labour and fatiguing monotony of a continued repetition of similar arithmetical calculations, first excited the desire, and afterwards suggested the idea, of a machine, which, by the aid of gravity or any other moving power, should become a substitute for one of the lowest operations of human intellect.},
  keywords={},
  doi={},
  ISSN={},
  publisher={MIT Press},
  isbn={9780262353410},
  url={https://ieeexplore-ieee-org.crai.referencistas.com/document/8709312},}@INBOOK{8709316,
  author={Denning, Peter J. and Tedre, Matti},
  booktitle={Computational Thinking}, 
  title={2 COMPUTATIONAL METHODS}, 
  year={2019},
  volume={},
  number={},
  pages={23-43},
  abstract={If controversies were to arise, there would be no more need of disputation between two philosophers than between two accountants. For it would suffice to take their pencils in their hands, to sit down to their slates, and to say to each other (with a friend as witness if they liked): Let us calculate.},
  keywords={},
  doi={},
  ISSN={},
  publisher={MIT Press},
  isbn={9780262353410},
  url={https://ieeexplore-ieee-org.crai.referencistas.com/document/8709316},}@INBOOK{8709355,
  author={Denning, Peter J. and Tedre, Matti},
  booktitle={Computational Thinking}, 
  title={PREFACE}, 
  year={2019},
  volume={},
  number={},
  pages={ix-xv},
  abstract={A computer revolution is in full swing. The invasion of computing into every part of our lives has brought enormous benefits including email, internet, World Wide Web, Amazon's e-commerce, Kahn Academy, Uber's taxi hailing, Google's maps, trip navigators, smartphones, real-time translators, and apps by the millions. At the same time it has also brought enormous concerns including possible loss of jobs to automation, mass surveillance, collapse of critical infrastructure, cyber war, mass sales of personal data, invasions of advertising, loss of privacy, polarization of politics, loss of civility and respectful listening, and exacerbated income inequality.},
  keywords={},
  doi={},
  ISSN={},
  publisher={MIT Press},
  isbn={9780262353410},
  url={https://ieeexplore-ieee-org.crai.referencistas.com/document/8709355},}@INBOOK{8709365,
  author={Denning, Peter J. and Tedre, Matti},
  booktitle={Computational Thinking}, 
  title={6 DESIGNING FOR HUMANS}, 
  year={2019},
  volume={},
  number={},
  pages={127-147},
  abstract={Descriptions of software entities that abstract away their complexity often abstract away their essence. Good judgment comes from experience, and experience comes from bad judgment.},
  keywords={},
  doi={},
  ISSN={},
  publisher={MIT Press},
  isbn={9780262353410},
  url={https://ieeexplore-ieee-org.crai.referencistas.com/document/8709365},}@INBOOK{8709383,
  author={Denning, Peter J. and Tedre, Matti},
  booktitle={Computational Thinking}, 
  title={GLOSSARY}, 
  year={2019},
  volume={},
  number={},
  pages={219-225},
  abstract={},
  keywords={},
  doi={},
  ISSN={},
  publisher={MIT Press},
  isbn={9780262353410},
  url={https://ieeexplore-ieee-org.crai.referencistas.com/document/8709383},}@INBOOK{8709311,
  author={Denning, Peter J. and Tedre, Matti},
  booktitle={Computational Thinking}, 
  title={9 FUTURE COMPUTATION}, 
  year={2019},
  volume={},
  number={},
  pages={193-212},
  abstract={Technology is part of our civilization. Sometimes people talk about conflict between humans and machines, and you can see that in a lot of science fiction. But the machines we're creating are not some invasion from Mars. We create these tools to expand our own reach.},
  keywords={},
  doi={},
  ISSN={},
  publisher={MIT Press},
  isbn={9780262353410},
  url={https://ieeexplore-ieee-org.crai.referencistas.com/document/8709311},}@INBOOK{8709313,
  author={Denning, Peter J. and Tedre, Matti},
  booktitle={Computational Thinking}, 
  title={4 COMPUTER SCIENCE}, 
  year={2019},
  volume={},
  number={},
  pages={71-94},
  abstract={The question “What can be automated?” is one of the most inspiring philosophical and practical questions of contemporary civilization.},
  keywords={},
  doi={},
  ISSN={},
  publisher={MIT Press},
  isbn={9780262353410},
  url={https://ieeexplore-ieee-org.crai.referencistas.com/document/8709313},}@ARTICLE{10534769,
  author={Herrero-Álvarez, Rafael and Callejas-Castro, Enrique and Miranda, Gara and León, Coromoto},
  journal={IEEE Access}, 
  title={Analysis of Sentiment Toward Computer Science in Pre-University Education}, 
  year={2024},
  volume={12},
  number={},
  pages={71205-71218},
  abstract={Emotions are essential drivers of the learning process, influencing motivation, performance, and problem-solving abilities. In the field of Computer Science, students often struggle with negative emotions during programming activities, impacting their performance and project quality. To address this challenge, there is a growing need to introduce Computational Thinking skills at the pre-university level. This study focuses on understanding the emotions experienced by primary and secondary school students during Computational Thinking activities, involving both plugged and unplugged tools. A significant performance difference was observed between primary and secondary education levels, with the latter outperforming the former. The research identifies specific associations between concepts and emotions, highlighting age-related differences with younger students exhibiting more positive emotions. While gender-based disparities in Computer Science perception exist in secondary education, there are no corresponding distinctions in emotional responses. The study reveals a gender-based effect, with girls showing reduced emotional responses and lower Computational Thinking performance than boys. In summary, this research underscores the profound role of emotions in learning, providing essential insights for tailoring educational strategies considering gender-specific and programming concept-related factors. It also connects lower emotional reactions to inferior results, emphasizing the importance of heightened emotional engagement.},
  keywords={Education;Programming profession;Training;Phase measurement;Sorting;Shape;Instruments;Computer science;computational thinking;primary education;secondary education;gender studies},
  doi={10.1109/ACCESS.2024.3402991},
  ISSN={2169-3536},
  month={},}@INPROCEEDINGS{9799068,
  author={Gonzalez-Torres, Antonio and Sancho-Chavarria, Lilliana and Zuniga-Cespedes, Magaly and Monge-Fallas, Jorge and Navas-Su, Jose},
  booktitle={2021 International Conference on Computational Science and Computational Intelligence (CSCI)}, 
  title={A strategy to assess computational thinking}, 
  year={2021},
  volume={},
  number={},
  pages={1037-1042},
  abstract={Computational Thinking (CT) is a method of analysis and problem solving that enables the development of life skills and positively influences the social and competitive conditions of people. This type of thinking promotes learning through the application of planning, analysis, abstraction and decomposition of problems into their constituent parts. In addition, PC contributes to the formation of critical thinking, creativity and cooperation between people. In education, the mechanisms used to foster CP are diverse; among them, learning through programming. Databases of source code generated in learning exercises using the CP method are a valuable tool for discovering learning patterns. However, there are no robust and scalable methods for studying the huge source code bases of learning products to recognize the predominant patterns and determine the effectiveness of the method. Consequently, a comprehensive analysis of learners’ skills, knowledge, outcomes and performance levels is necessary to identify points of improvement to meet learning objectives and modify curricula and exercises. This paper presents the joint research between the Costa Rica Institute of Technology (TEC) and the PRONIE MEP-FOD program of the Omar Dengo Foundation. Its objective is to automatically analyze the source code created by the students, evaluate the Computational Thinking skills they developed and compare the results with the learning objectives established in the study plans.},
  keywords={Measurement;Codes;Scientific computing;Education;Software;Planning;Pattern recognition;Computation thinking;program analysis;automatic grading},
  doi={10.1109/CSCI54926.2021.00222},
  ISSN={},
  month={Dec},}@INPROCEEDINGS{9057865,
  author={Zhang, Shiqi and Stewart, Christopher},
  booktitle={2019 IEEE National Aerospace and Electronics Conference (NAECON)}, 
  title={Computational Thinking Curriculum for Unmanned Aerial Systems}, 
  year={2019},
  volume={},
  number={},
  pages={122-125},
  abstract={Unmanned aerial systems (UAS) can explore common, vast and unsafe places at low cost. They could transform multiple sectors from photography to farming to city planning. However, the software underlying UAS is complex and requires multiple distinct programming skills, e.g., AI, machine learning and flight control. Few programmers encompass these skills, hampering software development and dampening the impact of UAS. We contend that early exposure to UAS software could help align workforce skills. However, early exposure requires curriculum that (1) captures the breadth of UAS software, (2) supports multiple levels of depth for diverse programming backgrounds and (3) fits within resource and institutional challenges. We propose a computational thinking framework. In our approach, lessons fit within 20-30 minute instructional blocks, making them usable in short workshop and extended classroom settings. UAV topics and computational thinking depth link lessons. Teachers can trade breadth for in-depth coding and vice versa. In early work, we presented an autonomous UAS to middle school students. Our 1 hour workshop focused on breadth and was received well.},
  keywords={Software;Conferences;Artificial intelligence;Drones;Face;Password;FAA},
  doi={10.1109/NAECON46414.2019.9057865},
  ISSN={2379-2027},
  month={July},}@INPROCEEDINGS{10402125,
  author={Wang, Xinze and Saito, Daisuke and Washizaki, Hironori and Fukazawa, Yoshiaki},
  booktitle={2023 IEEE Integrated STEM Education Conference (ISEC)}, 
  title={Facilitating Students’ Abstract and Computational Thinking Skills Using Virtual Reality}, 
  year={2023},
  volume={},
  number={},
  pages={243-246},
  abstract={As Virtual reality (VR) devices become more widespread, they are being recognized as efficient teaching tools for many subjects. In the 21st century, learners are expected to master important skills, which are difficult to teach in conventional lectures, such as computational thinking, critical thinking, creativity, and abstract reasoning. [1] Therefore, computer science or information technology courses often limit the discussion of recursion to calculating a factorial or a Fibonacci number, even though recursion is presented as an academic-type oddity in most cases. [2] To elucidate how VR can improve students’ computational thinking skills and abstract thinking associated with solving problems that require recursive algorithms, this paper examines the use of VR in computer science education to teach the abstract concept of recursion. The results of learners using VR Tower of Hanoi software are compared to those using the conventional Hanoi puzzle. Most learners show an improved understanding after experiencing the gameplay in the VR software, and some demonstrate a better understanding of recursion. In the post-survey, most participants acknowledge that the immersive environment is helpful when learning abstract subjects.},
  keywords={Computer science;Surveys;Codes;Education;Software algorithms;Virtual reality;Software;Computer Science Education;Virtual Reality;Tower of Hanoi;Recursion},
  doi={10.1109/ISEC57711.2023.10402125},
  ISSN={2473-7623},
  month={March},}@INPROCEEDINGS{8820846,
  author={Tavares Fernandes, Kleber and Lucena, Marcia and Aranha, Eduardo},
  booktitle={2019 IEEE 19th International Conference on Advanced Learning Technologies (ICALT)}, 
  title={A Strategy for the Development of Computational Thinking from Game Design Specifications}, 
  year={2019},
  volume={2161-377X},
  number={},
  pages={386-388},
  abstract={Digital games are becoming more and more a part of our daily lives. After realizing this, several educators have been motivated to use games as teaching and learning tools. In this sense, it is possible to involve teachers and students in the production of their own games, thus contributing both to the development of computational thinking and to acquiring knowledge related to the different disciplines involved in this process. Despite the benefits, the production of games is a complex task that requires knowledge of a specific domain and presents a significant learning curve for students and teachers. The choice of using effective strategies such as Model-Driven Engineering (MDE) practices supported by a Controlled Natural Language (CNL) to promote the production of games in the educational context is decisive and can favor the adoption of game-based learning. This work proposes a strategy for the specification of game design for digital games by students and teachers in the classroom, that can promote the development of computational thinking, as well as reading and writing skills.},
  keywords={Games;Writing;Education;Production;Natural languages;Tools;Conferences;digital games;game design;computacional thinking;learning},
  doi={10.1109/ICALT.2019.00122},
  ISSN={2161-377X},
  month={July},}@INPROCEEDINGS{9796660,
  author={Johnson, Marina and Swanson, Hillary and Edwards, John},
  booktitle={2022 Intermountain Engineering, Technology and Computing (IETC)}, 
  title={Syntax Exercises and Their Effect on Computational Thinking}, 
  year={2022},
  volume={},
  number={},
  pages={1-6},
  abstract={Job opportunities and the need for programmers are increasing. Companies are looking for new hires who have the ability to learn how to learn, who have computational thinking skills. Student dropout rate in computer science is the highest among college majors. Educators are striving to find a way to teach efficiently and effectively the technical and the problem solving skills students need. In this paper we will be studying the effects of syntax exercises on a subject's ability to think computationally and precisely. We tested our process on professionals and students. Half of the professionals were in the computer science field and half of our students did syntax exercises. The other half of professionals and students had no exposure to syntax to compare. Our purpose is to find if teaching students syntax exercises are still relevant and can teach both technical and computational thinking skills.},
  keywords={Computer science;Engineering profession;Education;Companies;Syntactics;Computer science education;Problem-solving;syntax;precision in thinking;computation thinking;programming;computing eduation},
  doi={10.1109/IETC54973.2022.9796660},
  ISSN={},
  month={May},}@INPROCEEDINGS{7344237,
  author={Bean, Nathan and Weese, Joshua and Feldhausen, Russell and Bell, R. Scott},
  booktitle={2015 IEEE Frontiers in Education Conference (FIE)}, 
  title={Starting from scratch: Developing a pre-service teacher training program in computational thinking}, 
  year={2015},
  volume={},
  number={},
  pages={1-8},
  abstract={This paper details a series of pre-professional development interventions to assist teachers in utilizing computational thinking and programming as an instructional tool within other subject areas (i.e. music, language arts, mathematics, and science). It describes the lessons utilized in the interventions along with the instruments used to evaluate them, and offers some preliminary findings.},
  keywords={Sprites (computer);Programming profession;Education;Shape;Conferences;Standards;Computational Thinking;K-12;teacher professional development;Scratch},
  doi={10.1109/FIE.2015.7344237},
  ISSN={},
  month={Oct},}@ARTICLE{7999170,
  author={Moreno-LeÓn, JesÚs and Robles, Gregorio and RomÁn-GonzÁlez, Marcos},
  journal={IEEE Transactions on Emerging Topics in Computing}, 
  title={Towards Data-Driven Learning Paths to Develop Computational Thinking with Scratch}, 
  year={2020},
  volume={8},
  number={1},
  pages={193-205},
  abstract={With the introduction of computer programming in schools around the world, a myriad of guides are being published to support educators who are teaching this subject, often for the first time. Most of these books offer a learning path based on the experience of the experts who author them. In this paper we propose and investigate an alternative way of determining the most suitable learning paths by analyzing projects developed by learners hosted in public repositories. Therefore, we downloaded 250 projects of different types from the Scratch online platform, and identified the differences and clustered them based on a quantitative measure, the computational thinking score provided by Dr. Scratch. We then triangulated the results by qualitatively studying in detail the source code of the prototypical projects to explain the progression required to move from one cluster to the next one. The result is a data-driven itinerary that can support teachers and policy makers in the creation of a curriculum for learning to program. Aiming to generalize this approach, we discuss a potential recommender tool, populated with data from public repositories, to allow educators and learners creating their own learning paths, contributing thus to a personalized learning connected with students' interests.},
  keywords={Programming profession;Tools;Education;Games;Computational modeling;Programming;computational thinking;learning paths;data-driven;Scratch},
  doi={10.1109/TETC.2017.2734818},
  ISSN={2168-6750},
  month={Jan},}@ARTICLE{8760527,
  author={Cutumisu, Maria and Guo, Qi},
  journal={IEEE Transactions on Education}, 
  title={Using Topic Modeling to Extract Pre-Service Teachers’ Understandings of Computational Thinking From Their Coding Reflections}, 
  year={2019},
  volume={62},
  number={4},
  pages={325-332},
  abstract={Contribution: This paper employs the automatic scoring of short essays as a novel way to determine pre-service teachers' knowledge of and attitudes toward computational thinking (CT) from their written reflections. Implications about designing CT courses for pre-service teachers are discussed. Background: CT is an essential 21st-century competency that supports the development of problem-solving skills. Inspired by computing science problem-solving practices, CT should transcend disciplines, but few universities or colleges include CT courses or CT content in their core courses. It is also difficult to know what pre-service teachers think about CT and their role in promoting it. Research Questions: Do pre-service teachers' coding reflections reveal any important information about their knowledge of, skills in, and attitudes toward CT? Methodology: Traditional qualitative techniques based on human raters are impractical in analyzing hundreds of essays. Topic modeling, an unsupervised machine learning modeling technique, was employed to extract topical features from participants' reflections. In one section of an undergraduate Introduction to Educational Technology course offered at a large university in Western Canada, n = 139 pre-service teachers wrote a short reflection on their experience following a 20 h Accelerated Intro to Computer Science Code.org course. Topics were identified by analyzing contextual trends in participants' written reflections. Findings: Results showed that pre-service teachers' reflections included CT concepts, practices, and perspectives. Specifically, participants connected the coding activity to prior knowledge and experiences.},
  keywords={Computational modeling;Feature extraction;Problem-solving;Education;Tools;Encoding;Data mining;Computational thinking;computing skills;educational technology;higher education;pre-service teachers;problem solving;programming;topic modeling},
  doi={10.1109/TE.2019.2925253},
  ISSN={1557-9638},
  month={Nov},}@INPROCEEDINGS{9005682,
  author={Underwood, William and Marciano, Richard},
  booktitle={2019 IEEE International Conference on Big Data (Big Data)}, 
  title={Computational Thinking in Archival Science Research and Education}, 
  year={2019},
  volume={},
  number={},
  pages={3146-3152},
  abstract={This paper explores whether the computational thinking practices of mathematicians and scientists in the physical and biological sciences are also the practices of archival scientists. It is argued that these practices are essential elements of an archival science education in preparing students for a professional archival career.},
  keywords={Big Data;Conferences;computational thinking;archival science},
  doi={10.1109/BigData47090.2019.9005682},
  ISSN={},
  month={Dec},}@INPROCEEDINGS{6427135,
  author={Barcelos, Thiago Schumacher and Silveira, Ismar Frango},
  booktitle={2012 XXXVIII Conferencia Latinoamericana En Informatica (CLEI)}, 
  title={Teaching Computational Thinking in initial series An analysis of the confluence among mathematics and Computer Sciences in elementary education and its implications for higher education}, 
  year={2012},
  volume={},
  number={},
  pages={1-8},
  abstract={The pervasiveness of computer devices in everyday situations poses a fundamental question about Computer Sciences as being part of those known as basic sciences. However, it would be more beneficial not to consider computation only as a technique, but instead as a way of reasoning and problem solving. Under this perspective, there are inherent relationships among the knowledge, skills and attitudes that emanate from this field and those ones commonly related to Math. This paper discusses the relationship between the so-named Computational Thinking and the foundations of Math Education, based on a literature review. Three groups of skills that can be jointly developed by both areas are identified and some challenges and implications for education in Computer Sciences are discussed.},
  keywords={Mathematics;Computers;Computational modeling;Cognition;Games;Educational institutions;Computational thinking;Mathematics;didactic strategies},
  doi={10.1109/CLEI.2012.6427135},
  ISSN={},
  month={Oct},}@INPROCEEDINGS{8377800,
  author={Gossen, Frederik and Kühn, Dennis and Margaria, Tiziana and Lamprecht, Anna-Lena},
  booktitle={2018 IEEE 42nd Annual Computer Software and Applications Conference (COMPSAC)}, 
  title={Computational Thinking: Learning by Doing with the Cinco Adventure Game Tool}, 
  year={2018},
  volume={01},
  number={},
  pages={990-999},
  abstract={Aspiring software developers, like the novice students in Computer Science courses, need to acquire a thorough understanding of fundamental computational concepts like sequential execution, conditional branching, loops, modularisation, hierarchy and reuse. This understanding and "computational thinking" is deepened when they encounter the concepts in different contexts and environments, as opposed to only in one traditional programming language. In this paper, we describe how we used the Cinco Adventure Game Tool, a tool that allows students to model simple browser games in an intuitive graphical framework, to train basic computational concepts in a creative and engaging, learning-by-doing fashion. On purpose, we steered away from traditional programming languages, in order to separate the use of the concepts and constructs from the hurdle of a programming language syntax and development environment. The experiences with a large group of first-term Computer Science students in two successive years were very positive: The students had no problems in understanding and using the concepts, used the tool proficiently and enjoyed designing and modelling the games. Working together on a game project in small groups, they showed sustained engagement, developed a high level of confidence, and created quite complex games containing various fundamental computational constructs.},
  keywords={Games;Tools;Education;Unified modeling language;Computational modeling;Software;Computer science education, Computational thinking, Model-driven development},
  doi={10.1109/COMPSAC.2018.00175},
  ISSN={0730-3157},
  month={July},}@INPROCEEDINGS{9125087,
  author={Utesch, Matthias C. and Faizan, Nilüfer Deniz and Krcmar, Helmut and Heininger, Robert},
  booktitle={2020 IEEE Global Engineering Education Conference (EDUCON)}, 
  title={Pic2Program - an Educational Android Application Teaching Computational Thinking}, 
  year={2020},
  volume={},
  number={},
  pages={1493-1502},
  abstract={Digital tools have become more essential in education and business areas these days and it is important to start in the early stages of education, e.g. already in the preschool stage. This paper describes the development and pilot testing of an Android based serious gaming App for mobile devices called Pic2Program. The App aims to teach children the basics of Computational Thinking (CT) in a playful way. The gameplay expects the young children to steer successfully their in-game character with the help of an intuitive symbol language through a set of increasingly complex mazes. The children may even draw sets of symbols by hand thus develop a basic program. Pic2Programs image recognition module will then process these symbols by first photographing them with an Android device and then using a neural network to map the photos to program instructions. The effectivity of Pic2Program on learning CT has been evaluated by a designed course for 9th, graders. The results show that students find the App well-structured and help them to understand the basics of programming.},
  keywords={Image recognition;Computed tomography;Conferences;Neural networks;Games;Mobile handsets;Problem-solving;computational thinking;solution-based thinking;education;IT-based learning;E-learning;M-Learning;Android;image recognition;young children;preschool children;cognitive development;problem solving},
  doi={10.1109/EDUCON45650.2020.9125087},
  ISSN={2165-9567},
  month={April},}@INPROCEEDINGS{8190655,
  author={Costa, Erick John Fidelis and Campos, Livia Maria Rodrigues Sampaio and Dario Serey Guerrero, Dalton},
  booktitle={2017 IEEE Frontiers in Education Conference (FIE)}, 
  title={Computational thinking in mathematics education: A joint approach to encourage problem-solving ability}, 
  year={2017},
  volume={},
  number={},
  pages={1-8},
  abstract={In this paper, we analyzed whether the ability of students to solve problems can be influenced by the implementation of Computational Thinking (CT) in the teaching of mathematics. In this sense, we performed a quasi-experiment with students in the Brazilian's Basic Education Regular System (particularly in a group of students around fifteen years old) comparing their performance after being trained with practical activities using exercises in more or less conformity with well known CT concepts and capabilities. Considering the quantitative results obtained, the experimental group outperformed the control group, which worked with exercises in more and less conformity with CT, respectively. The results were statistically significant, suggesting that bringing together CT and mathematics through proper adjustments of classroom practices can have a positive influence on students abilities of solving problems. In order to strengthen this conclusion we also performed a qualitative analysis comprising students and the teacher involved in the quasi-experiment that reinforced our quantitative results.},
  keywords={Mathematics;Education;Problem-solving;Programming profession;Tools;computational thinking;teaching of mathematics;problem solving ability},
  doi={10.1109/FIE.2017.8190655},
  ISSN={},
  month={Oct},}@INPROCEEDINGS{7851769,
  author={Silapachote, Piyanuch and Srisuphab, Ananta},
  booktitle={2016 IEEE International Conference on Teaching, Assessment, and Learning for Engineering (TALE)}, 
  title={Teaching and learning computational thinking through solving problems in Artificial Intelligence: On designing introductory engineering and computing courses}, 
  year={2016},
  volume={},
  number={},
  pages={50-54},
  abstract={At the core of every computing related discipline and impacting everyone everywhere, computational thinking or CT has increasingly emerged as its own subject in all levels of education. How to effectively teach CT skills poses real challenges and creates opportunities. Focusing on engineering and computer science undergraduates, we resourcefully integrated elements of Artificial Intelligence (AI) into introductory computing courses. In addition to a comprehension of the essence of CT, AI enabled inspirations of collaborative problem solving beyond abstraction, logical reasoning, critical, and analytical thinking. It fostered the study of basic data structures and algorithms. Students enjoyed active learning classrooms. Learning to learn, they constructed essential knowledge from solving exciting AI puzzles, competing in strategic AI games, and participating in intellectual discussion. Every activity is designed to allow students to fully engage their mental tools. Neither coding nor programming was required.},
  keywords={Handheld computers;Conferences;Education;Decision support systems;Computer science;Search problems;computational thinking (CT);artificial intelligence (AI);collaborative problem solving;active learning classrooms},
  doi={10.1109/TALE.2016.7851769},
  ISSN={2470-6698},
  month={Dec},}@INPROCEEDINGS{8252356,
  author={Weng, Xiaojing and Wong, Gary K. W.},
  booktitle={2017 IEEE 6th International Conference on Teaching, Assessment, and Learning for Engineering (TALE)}, 
  title={Integrating computational thinking into english dialogue learning through graphical programming tool}, 
  year={2017},
  volume={},
  number={},
  pages={320-325},
  abstract={Developing students' Computational Thinking (CT), which is an essential problem-solving skill for people living in the 21st century, becomes an outstanding purpose of promoting engineering education in K-12 classrooms. In this paper, CT is represented through the graphical programming language Scratch according to the three-dimensional CT framework proposed by Brennan and Resnick [1]. This project aims to explore the classroom effect of using graphical programming tool in learning English dialogue and investigate how to improve the integration of CT into English education with the elements of programming. To achieve these objectives, a qualitative method was adopted to collect data through class observations, programming projects, and semi-structured interviews. Nine primary students (n = 9) were the targeted participants, who attended extra-curricular lessons for computer programming using Scratch at their school in Hong Kong. The preliminary results show that the introduction of CT into English dialogue learning through graphical programming language can motivate primary school students to study English dialogue. To better connect CT with English education via graphical programming tools, students and the teacher in the group under study suggested making computers interact with people autonomically, designing games in graphical programming environments to encourage English learning, keeping the balance of students' graphical programming language learning skill and their English language skill, and adopting graphical programming language as a tool to finish the summative English language assignments.},
  keywords={Education;Tools;Programming profession;Computer languages;Interviews;Writing;Computational Thinking;English dialogue learning;Graphical programming language;Classroom effect},
  doi={10.1109/TALE.2017.8252356},
  ISSN={2470-6698},
  month={Dec},}@ARTICLE{9321708,
  author={Chai, Xiaolin and Sun, Yan and Luo, Hong and Guizani, Mohsen},
  journal={IEEE Transactions on Emerging Topics in Computing}, 
  title={DWES: A Dynamic Weighted Evaluation System for Scratch based on Computational Thinking}, 
  year={2022},
  volume={10},
  number={2},
  pages={917-932},
  abstract={Scratch is a programming environment, which is widely adopted as the first language to enter the programming world. Since Scratch projects are rich in multimedia resources, it can be time-consuming to judge them by hand, requiring manual execution with the understanding of each project. Auto-judgment tools come into being, they can rapidly evaluate the project in some way. Unfortunately, the existing tools are too rigid and they ignore the diversity of Scratch projects. To address this issue, we propose a new dynamic weighted evaluation system (DWES). First, we define a new computational thinking (CT) evaluation criteria from eight aspects. Second, based on the proposed criteria, we present an analysis tool that automatically assesses the CT skills of the learners’ projects. Third, considering the characteristics of projects, we dynamically adjust the evaluation results according to types, so that a single standard is no longer applied roughly to all. This process is data-driven, we consider the CT performance and scripts of projects. We prove the rationality of the evaluation criteria from the aspect of program complexity. Through the correlation analysis between DWES CT scores and experts’ ratings, we find that compared with Dr. Scratch, the correlation coefficient has increased.},
  keywords={Tools;Sprites (computer);Manuals;Games;Computer languages;Complexity theory;Programming profession;Scratch;computational thinking;evaluation system;dynamic weighted},
  doi={10.1109/TETC.2020.3044588},
  ISSN={2168-6750},
  month={April},}
