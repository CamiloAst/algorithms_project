@ARTICLE{10436103,
  author={Tareq, Zebel-Al and Raja Yusof, Raja Jamilah},
  journal={IEEE Transactions on Education}, 
  title={Modeling a Problem-Solving Approach Through Computational Thinking for Teaching Programming}, 
  year={2024},
  volume={67},
  number={2},
  pages={282-291},
  abstract={Contribution: A problem-solving approach (PSA) model derived from major computational thinking (CT) concepts. This model can be utilized to formulate solutions for different algorithmic problems and translate them into effective active learning methods. Background: Different teaching approaches for programming are widely available; however, being able to formulate an algorithmic solution computationally and then transform it into code is essential for students. Research Questions: What are the effective teaching approaches for fostering the development of problem-solving and programming skills? How do CT concepts contribute to the formulation of a PSA model for programming problems and its translation into an effective teaching method? How can an effective teaching method that utilizes the PSA model be identified and distinguished from other approaches? Methodology: A preliminary study pointed out the difficulties experienced when teaching programming, inspiring the formulation of a PSA model that used CT concepts. An experimental study on problem-based and game-based programming workshops that utilized the PSA model through sorting algorithms was performed on experimental groups consisting of 30 students each. A syntax-based programming workshop consisting of 30 students was used as the control group. All the participants were recruited through a pretest that incorporated basic programming questions. The participants had to answer a posttest after the workshop. Findings: The results showed that the participants exhibited no significant difference between the pretest and posttest for the syntax-based learning (SBL). However, there is a significant difference between the pretest and posttest of both the problem-based learning (PBL) and the game-based learning (GBL) workshops. There was no significant difference significant difference for the pretest scores of all three workshops. The analysis of the posttest further confirmed that the experimental groups (PBL and GBL) exhibited significant difference in the scores compared to the control group. However, the posttest results did not differ significantly between the experimental groups (PBL and GBL).},
  keywords={Programming profession;Education;Problem-solving;Sorting;Computational modeling;Conferences;Software algorithms;Active learning;approach model;computational thinking (CT);computer science;computing skills;game-based learning (GBL);problem-based learning (PBL);problem-solving instructional methods;sorting algorithm;syntax-based learning (SBL)},
  doi={10.1109/TE.2024.3354425},
  ISSN={1557-9638},
  month={April},}@ARTICLE{10676315,
  author={Su, Yu-Sheng and Wang, Xiao and Zhao, Li},
  journal={IEEE Transactions on Education}, 
  title={Constructing a Computational Thinking Evaluation Framework for Pupils}, 
  year={2024},
  volume={67},
  number={6},
  pages={878-888},
  abstract={Research Purpose and Contribution: The study aimed to construct an evaluation framework for assessing pupils’ computational thinking (CT) during classroom learning problem solving. As a self-report evaluation scale for pupils, this evaluation framework further enriched the CT assessment instruments for pupils and provided a specialized instrument for experts to evaluate pupils’ CT in problem-solving situations during classroom learning. Background: CT cultivation and assessment methods are hot topics in the field of education. CT assessment can effectively test the effect of CT cultivation. There are many CT assessment methods, of which evaluation frameworks are an effective self-reporting assessment method. Existing studies on self-reported CT evaluation frameworks are commonly applicable to students at different stages. However, few studies have focused on the specific context from the perspective of practice for pupils. Thus, the evaluation framework of pupils’ CT is worth exploring. Intended Outcomes: A CT evaluation framework for evaluating pupils’ CT in problem-solving situations in classroom learning was constructed to facilitate researchers’ understanding of pupils’ CT levels and problem-solving skills. Application Design: In this study, data from 897 pupils in the fifth and sixth grades were collected using an online questionnaire that included 27 items about CT. Exploratory factor analysis (EFA), confirmatory factor analysis (CFA), and item analysis were conducted to analyze the data in this study, with 17 items remaining in the final evaluation framework. Findings: The fitting validity, convergence validity, and discriminant validity all met the recommended criteria, which showed that the evaluation framework was effective. The total reliability of CT was 0.911, indicating that the consistency and reliability of the evaluation framework constructed in this study were satisfied.},
  keywords={Instruments;Pupils;Problem-solving;Education;Programming profession;Reliability;Creativity;Classroom learning;computational thinking (CT);evaluation framework;pupils},
  doi={10.1109/TE.2024.3424423},
  ISSN={1557-9638},
  month={Dec},}@INPROCEEDINGS{10893178,
  author={Espinal, Alejandro and Vieira, Camilo and Bredder, Eric and Chiu, Jennie and Wilkens, Kim},
  booktitle={2024 IEEE Frontiers in Education Conference (FIE)}, 
  title={WIP: Professional Learning in Computational Thinking for Early Childhood Teachers in Latin America}, 
  year={2024},
  volume={},
  number={},
  pages={1-5},
  abstract={This research to practice work in progress paper explores changes in teachers' knowledge of integrating computational thinking (CT) into early childhood education in a professional learning (PL) initiative. The main goal of the program is to prepare teachers to develop CT practices into early childhood learning environments by fostering several key components: recognizing the significance of CT development from early childhood, applying pedagogical practices (i.e. unplugged activities, Use-Modify-Create), identifying socially constructed roles and stereotypes surrounding toys, implications of screen and device usage in learning, and developing skills to design CT learning activities tailored for their own classroom settings. To achieve our goals, the research team designed, implemented, and evaluated an online 30-hour PL program with educators from Latin American countries. Approximately 80 teachers completed the online PL program. The participating teachers engaged with the PL program weekly by providing written journal reflections. In the final week, they were asked to design a lesson based on what they learned and implement it into their classroom. Teachers completed a pre- and post-survey surrounding their self-efficacy and technological, pedagogical, and content knowledge (TPACK) in CT. Data sources include pre- and post-surveys, teacher journal reflections, and lesson plans developed by teachers. In this paper, we analyzed their journal reflections to qualitatively develop an understanding of how teachers progressed in the PL. The lesson plans will be analyzed to identify: (1) the learning goals for the students, (2) which activities teachers preferred to implement, and (3) how they assessed student learning in CT in their classroom. Preliminary findings demonstrate the types of CT activities they implemented in their classrooms. Teachers also created lessons that met their students' needs which further provides examples of how CT is integrated within the existing curriculum surrounding student interest and culture. Many PL programs often teach about CT concepts, but do not offer a chance to implement a lesson plan and reflect on their experience. This process helps teachers develop self-efficacy for teaching CT in an elementary classroom and teachers reported that they would continue to integrate CT within their future instruction. Also, this program contributes to the reduction of the gender gap in CT, promoting equitable practices in early childhood education.},
  keywords={Soft sensors;Education;Toy manufacturing industry;Reflection;Object recognition;Computer;Science;Computational Thinking;Professional Development},
  doi={10.1109/FIE61694.2024.10893178},
  ISSN={2377-634X},
  month={Oct},}@INPROCEEDINGS{9962505,
  author={Chowdhury, Bushra and Kafura, Dennis and Johri, Aditya},
  booktitle={2022 IEEE Frontiers in Education Conference (FIE)}, 
  title={When Does Collaborative Interaction Support Learning of Computational Thinking Among Undergraduate Students}, 
  year={2022},
  volume={},
  number={},
  pages={1-7},
  abstract={Collaborative learning has proven to be a productive approach across domains including computer science. Especially for novices, collaboration among learners with diverse experiences, values, and knowledge can be especially effective. However, there is limited research on how collaborative interactions among learners from different undergraduate disciplines manifest during the learning of computational concepts. This qualitative study investigates interaction among learners in small interdisciplinary student groups in an undergraduate computational thinking (CT) class. In analyzing the social interactions of cohort members, the Differentiating Overt Learning Activities (DOLA) framework developed by Chi was used as a starting point. Several themes (e.g. explain-to-other, self-monitor, connect/plan) suggested by Chi’s overt activities framework emerged naturally in the observations. However, several categories that were not explicitly stated in the DOLA framework also emerged. These are: asking a shallow question versus asking an elaborate question, socializing, being confused or expressing frustration, self-talk, and struggle. Analysis of interactions between cohort members revealed that most of the group interactions were active in nature. Barriers to collaborative learning were accentuated when peers were novices. Students who lacked knowledge of computational concepts found it hard to contribute to a discussion, hindering learning, whereas students who had better conceptual understanding were constructive in their interactions, elaborated on a topic, made connections with previous problems, and displayed self-awareness about their understanding.},
  keywords={Codes;Federated learning;Semantics;Collaboration;Writing;Syntactics;Problem-solving;Computational Thinking;Collaboration;Undergraduate Instruction;Qualitative Research;Data Science},
  doi={10.1109/FIE56618.2022.9962505},
  ISSN={2377-634X},
  month={Oct},}@INPROCEEDINGS{10664854,
  author={Luo, Qi and Zhang, Shuhan},
  booktitle={2024 IEEE Integrated STEM Education Conference (ISEC)}, 
  title={Game-Based Assessment for Computational Thinking: A Systematic Review}, 
  year={2024},
  volume={},
  number={},
  pages={01-08},
  abstract={Computational thinking (CT) has become an indispensable skill in the 21st century and has permeated into K-12 education at all levels. The evaluation of CT has become a crucial concern for educators and researchers. Currently., while extensive research has investigated the assessment of students' CT conceptual understanding., the measurement of their thinking processes is less involved. The game-based assessment appears to address this issue by analyzing students' behaviors and reactions during the gameplay process., which has become an emerging assessment tool in CT education. This drives the need for a comprehensive overview of this field. To fill this gap., this study aims to conduct a systematic literature review on the assessment of CT through games. It explores CT skills assessed through games., focusing on target groups, game forms., and benefits. A total of fifteen studies were examined. Findings indicate that algorithmic thinking, problem decomposition, pattern recognition., and abstraction were commonly assessed in games. Different ways for assessing CT skills in games were identified, involving progression level, log data, and manual coding. The benefits of CT game-based assessments were broadly reported, such as enjoyable experiences for students, instant feedback, easy administration for teachers and researchers, and richer information on students' cognitive processes. However, limited has been done in exploring the use of digital games for younger age groups, and the psychometric qualities of the tools were hardly reported in the reviewed studies. The study sheds light on the research and teaching practices in using games and interactive assessment platforms in CT education.},
  keywords={Cognitive processes;Current measurement;Education;Focusing;Games;Manuals;Encoding;computational thinking;systematic review;game-based assessment;STEM education},
  doi={10.1109/ISEC61299.2024.10664854},
  ISSN={2473-7623},
  month={March},}@INPROCEEDINGS{7739695,
  author={Ota, Go and Morimoto, Yosuke and Kato, Hiroshi},
  booktitle={2016 IEEE Symposium on Visual Languages and Human-Centric Computing (VL/HCC)}, 
  title={Ninja code village for scratch: Function samples/function analyser and automatic assessment of computational thinking concepts}, 
  year={2016},
  volume={},
  number={},
  pages={238-239},
  abstract={Ninja Code Village is a comprehensive learning-support environment for the Scratch, visual programming language. It provides more than 60 sample functions that are commonly used in Scratch projects, and analyses automatically which functions are used in a project in order to foster students' competencies in abstraction, modelling, and decomposition. It also provides automatic assessment of computational thinking concepts such as conditional statements, loops, data, and parallelism in order to develop students' programming skills.},
  keywords={Programming profession;Education;Sprites (computer);Visualization;Computational modeling;Parallel processing;Programming learning;Automatic assessment},
  doi={10.1109/VLHCC.2016.7739695},
  ISSN={1943-6106},
  month={Sep.},}@INPROCEEDINGS{7943079,
  author={Krugel, Johannes and Hubwieser, Peter},
  booktitle={2017 IEEE Global Engineering Education Conference (EDUCON)}, 
  title={Computational thinking as springboard for learning object-oriented programming in an interactive MOOC}, 
  year={2017},
  volume={},
  number={},
  pages={1709-1712},
  abstract={The prerequisite knowledge regarding Computer Science (CS) varies strongly among freshmen at university and it seems advisable to compensate for these differences before the first lecture starts. Massive open online courses (MOOCs) might represent a possible solution. We therefore designed and developed a MOOC (called “LOOP: Learning Object-Oriented Programming”) which provides a gentle introduction to computational thinking and object-oriented concepts before the programming part. In addition to the common quizzes, we developed various we-based interactive exercises to enable the learners to experiment and interact directly with the presented concepts. Furthermore, we implemented programming exercises with constructive feedback for the learners using a web-based integrated development environment and additionally an automatic grading system. The target group of the course are prospective students of science or engineering that are due to attend CS lessons in their first terms. The course was conducted as a prototype with a limited number of participants. In a concluding survey, the participants submitted textual feedback on the course; some of them proposed specific improvements for the employed interactive exercises. Yet, the overall feedback was encouragingly positive. In this paper, we describe the design and the development of the course, as well as our initial results.},
  keywords={Programming profession;Videos;Tools;Object oriented programming;Education;Java;Computer science education;Courseware;Education courses;Educational technology;Electronic learning;Self-study courses;STEM},
  doi={10.1109/EDUCON.2017.7943079},
  ISSN={2165-9567},
  month={April},}@INPROCEEDINGS{5673139,
  author={McMaster, Kirby and Rague, Brian and Anderson, Nicole},
  booktitle={2010 IEEE Frontiers in Education Conference (FIE)}, 
  title={Integrating Mathematical Thinking, Abstract Thinking, and Computational Thinking}, 
  year={2010},
  volume={},
  number={},
  pages={S3G-1-S3G-6},
  abstract={In recent years, several groups of Computer Science educators have made a sustained effort to capture the essence of CS apart from programming. Three of these approaches are Mathematical Thinking, Abstract Thinking, and Computational Thinking. Each approach tries to clarify areas of CS that are not directly tied to writing computer programs. In a separate line of research, the current authors have been examining different ways to teach mathematics to CS students. We developed a Computational Math scale that measures the level of problem-solving gestalt exhibited by textbook authors. In this study, we relate our Computational Math framework to current research on Mathematical, Abstract, and Computational (MAC) Thinking. We counted words used frequently in research articles and compared them to words that form the Computational Math scale. Our results suggest an overall MAC Thinking framework that integrates a wide range of topics relevant to computing and programming.},
  keywords={Computers;Computational modeling;Programming profession;Books;Mathematical model;Abstraction;Algorithm;Computational Math;Model;Thinking},
  doi={10.1109/FIE.2010.5673139},
  ISSN={2377-634X},
  month={Oct},}@INPROCEEDINGS{7460062,
  author={Isaac, Joseph and Babu, Sabarish V.},
  booktitle={2016 IEEE Symposium on 3D User Interfaces (3DUI)}, 
  title={Supporting computational thinking through gamification}, 
  year={2016},
  volume={},
  number={},
  pages={245-246},
  abstract={Video games have grown in popularity since the 1980's. The largest consumers of video games are youth populations. Previous research has shown cognitive development and learning principles in video games. As a result, there is an increasing interest in games being teaching tools. Gamification is the use of video game elements in non-game applications. In this paper, I proposed a design to a study of applying gamification to a computer programming software, VENVI, in order to promote motivation, engagement, and computational thinking.},
  keywords={Games;Software;Computers;Programming profession;User interfaces;Education;Education;virtual characters;user studies},
  doi={10.1109/3DUI.2016.7460062},
  ISSN={},
  month={March},}@INPROCEEDINGS{7836179,
  author={Parmar, Dhaval and Babu, Sabarish V. and Lin, Lorraine and Jörg, Sophie and D'Souza, Nikeetha and Leonard, Alison E. and Daily, Shaundra B.},
  booktitle={2016 Research on Equity and Sustained Participation in Engineering, Computing, and Technology (RESPECT)}, 
  title={Can embodied interaction and virtual peer customization in a virtual programming environment enhance computational thinking?}, 
  year={2016},
  volume={},
  number={},
  pages={1-2},
  abstract={To address the problem of underexposure, underrepresentation, and underproduction of diverse professionals in the field of computing, we target middle school education using an idea that combines computational thinking with dance and movement choreography. This lightning talk delves into a virtual reality education and entertainment application named Virtual Environment Interactions (VEnvI). Our in vivo study examines how VEnvI can be used to teach fundamental computer science concepts such as sequences, loops, variables, conditionals, functions, and parallel programming. We aim to reach younger students through a fun and intuitive interface for choreographing dance movements with a virtual character. Our study contrasts the highly immersive and embodied virtual reality metaphor of using VEnvI with a non-immersive desktop metaphor. Additionally, we examine the effects of user attachment by comparing the learning results gained with customizable virtual characters in contrast with character presets. By analyzing qualitative and quantitative user responses measuring cognition, presence, usability, and satisfaction, we hope to find how virtual reality can enhance interest in the field of computer science among middle school students.},
  keywords={Programming profession;Virtual reality;Education;Computers;Three-dimensional displays;Programming environments},
  doi={10.1109/RESPECT.2016.7836179},
  ISSN={},
  month={Aug},}@INPROCEEDINGS{9040113,
  author={Havlásková, Tatiana and Homanová, Zuzana and Tran, Daniel},
  booktitle={2019 17th International Conference on Emerging eLearning Technologies and Applications (ICETA)}, 
  title={Developing Computational Thinking in Pre-School Children}, 
  year={2019},
  volume={},
  number={},
  pages={210-215},
  abstract={Problem solving, logical thinking, exceptionality, creativity and originality are the most appreciated skills today. Developing these skills from an early age (pre-school) appears to be the best approach. This paper introduces a methodology and interactive activities for developing computational thinking in pre-school children.},
  keywords={Education;Problem-solving;Visual perception;Task analysis;Games;Graphics;Aging},
  doi={10.1109/ICETA48886.2019.9040113},
  ISSN={},
  month={Nov},}@INPROCEEDINGS{10487240,
  author={Li, Jiang and Cuddapah, Jennifer and Torres-Crespo, Marisel and Stewart, Ann and Williams, Anthony},
  booktitle={2023 Congress in Computer Science, Computer Engineering, & Applied Computing (CSCE)}, 
  title={Promoting K-12 Computer Science Education : A Computational Thinking Partnership Project}, 
  year={2023},
  volume={},
  number={},
  pages={1054-1058},
  abstract={This paper describes a collaborative project that was conducted to promote Computer Science (CS) and Computational Thinking (CT) Education among pre-service and in-service teachers as well as Teacher Preparation Faculty. More than 40 pre-service and in-service teachers and 9 Education faculty members from three schools participated in a learning experience designed to address the K-12 Computer Science Framework [1] and Maryland's K-12 Computer Science Standards. The collaboration was designed to develop CS/CT knowledge, understanding, skills and application among participants. In phase one of the project, pre-service and in-service teachers explored CS educational hard/software platforms and used open-source sites such as Sphero Edu, Wonder Workshop, Scratch and Code.org. They envisioned how activities apply to K-8 classrooms, and they worked collaboratively to design a problem-based project for their own students. In phase two of the project, teacher preparation faculty were trained to integrate CS and CT into several preservice courses as well as build into the coursework sequence meaningful experiences that would expose future teachers to CS and CT knowledge and skills so that they could then incorporate these into their own K-8 lesson plans. Project evaluation included formative and summative assessments to examine changes in content and pedagogical knowledge. The feedback from the participants shows positive results.},
  keywords={Computer science;Conferences;Education;Collaboration;Computer science education;Standards;computer science education;computer science teaching standard;computation thinking;professional development},
  doi={10.1109/CSCE60160.2023.00175},
  ISSN={},
  month={July},}@INPROCEEDINGS{5295246,
  author={Howland, Katy},
  booktitle={2009 IEEE Symposium on Visual Languages and Human-Centric Computing (VL/HCC)}, 
  title={Supporting the development of multimodal writing and computational thinking skills through computer game creation}, 
  year={2009},
  volume={},
  number={},
  pages={250-251},
  abstract={This abstract describes design-based research on building tools that support the development of skills which will allow learners to become producers rather than simply consumers of computational tools. Game creation is an activity which has good potential for learning skills such as multimodal writing and computational thinking skills. Existing tools make the creation of commercial quality games possible, but fall short of fulfilling the potential for skills development. Learner-centred design of a suite of tools which will guide learners towards activities with potential for the desired skills development is underway. Current progress on the design and development of tools is reported and future activities are outlined.},
  keywords={Writing;Cognition;Informatics;Buildings;Head;Programming profession;Software tools;Electrons;Engines;Vehicles},
  doi={10.1109/VLHCC.2009.5295246},
  ISSN={1943-6106},
  month={Sep.},}@INPROCEEDINGS{10767671,
  author={Monardes, Anaís Monserrat Foix and Díaz, Nataly Maritza González and Alarcón, Francisco Andrés Muñoz and Roncagliolo, Silvana and Cubillos, Claudio},
  booktitle={2024 43rd International Conference of the Chilean Computer Science Society (SCCC)}, 
  title={FAST DELIVERY: An Educational Video Game for Developing Computational Thinking Skills}, 
  year={2024},
  volume={},
  number={},
  pages={1-8},
  abstract={Fast Delivery is an educational game designed to facilitate the learning of computational thinking and development of logic, teaching the basic pillars that would be sentences, conditionals and cycles through an entertaining and innovative tool. Fast Delivery facilitates the resolution of programs because it is written in a textual programming language through a simple and intuitive pseudocode in the Spanish language. The game employs a gamified approach where users answer coding questions displayed on the screen by selecting code fragments from boxes to complete the given code. Using various associated techniques, such as gamification mechanics that will be lives and scores. And also the behavioral instruction technique that will work through visual and auditory stimuli. To evaluate the effects of the game use on learning and motivation, a study was carried out with students from a Chilean educational school. The results show that some students presented an overall learning gain, while others performed worse in the posttest than in the pretest. A motivational questionnaire based in the Self-determination Theory, supports the idea that students perceived the activity as difficult, lowering their sense of autonomy and competence, raising pressure, and thus negatively affecting motivation. Results by learning objective suggest that higher learnings were obtained for decision structures rather than for cycles and arithmetic operations with variables.},
  keywords={Computer science;Visualization;Video games;Computer languages;Codes;Education;Games;Encoding;Logic;Arithmetic;Educational software;Self Determination Theory;Game-based Learning;computational thinki},
  doi={10.1109/SCCC63879.2024.10767671},
  ISSN={2691-0632},
  month={Oct},}@INPROCEEDINGS{9620608,
  author={Larimore, Rachel and Yadav, Aman and Rich, Kathryn and Shah, Niral},
  booktitle={2021 Conference on Research in Equitable and Sustained Participation in Engineering, Computing, and Technology (RESPECT)}, 
  title={Computational thinking in elementary classrooms: Using classroom dialogue to measure equitable participation}, 
  year={2021},
  volume={},
  number={},
  pages={1-3},
  abstract={The increased push for access to computer science (CS) at the K-12 level has been argued as a way to broaden participation in computing. At the elementary level, computational thinking (CT) has been used as a framework for bringing CS ideas into the classroom and educating teachers about how they can integrate CT into their daily instruction. A number of these projects have made equity a central goal of their work by working in schools with diverse racial, linguistic, and economic diversity. However, we know little about whether and how teachers equitably engage students in CT during their classroom instruction-particularly during science and math lessons. In this paper, we present an approach to analyzing classroom instructional videos using the EQUIP tool (https://www.equip.ninja/). The purpose of this tool is to examine the quantity and quality of students' contributions during CT-integrated math and science lessons and how it differs based on demographic markers. We highlight this approach using classroom video observation from four teachers and discuss future work in this area.},
  keywords={Economics;Computer science;Atmospheric measurements;Tools;Linguistics;Particle measurements;Videos},
  doi={10.1109/RESPECT51740.2021.9620608},
  ISSN={},
  month={May},}@INPROCEEDINGS{4720362,
  author={Davies, Stephen},
  booktitle={2008 38th Annual Frontiers in Education Conference}, 
  title={The effects of emphasizing computational thinking in an introductory programming course}, 
  year={2008},
  volume={},
  number={},
  pages={T2C-3-T2C-8},
  abstract={In many introductory programming courses, the surface features of the programming language can distract and intimidate students so much that they fail to concentrate on what is really the ldquobrainyrdquo task: solving the problem conceptually. To counter this, we devised a form of structured pseudocode, designed to highlight and facilitate algorithmic construction so that the complexities of the programming language can be deferred until proficiency in design has been reached. Students taught with this experimental approach are not introduced to the language itself, or the compiler, until the last few weeks of the semester. A controlled experiment comparing this approach with a traditional language-based pedagogy has revealed that by the end of the course, studentspsila programming skills, even on language-specific tasks, is every bit as strong as students taught traditionally, and that their comfort level with modularity (writing functions) is increased. Additionally, we found that students appear to strongly prefer such an approach, citing mostly emotive benefits, and that these effects may be particularly strong among women.},
  keywords={Computer languages;Programming profession;Algorithm design and analysis;Natural languages;Problem-solving;Counting circuits;Functional programming;Writing;Pain;Education;Computational Thinking;Pedagogy;Pseudocode},
  doi={10.1109/FIE.2008.4720362},
  ISSN={2377-634X},
  month={Oct},}@INPROCEEDINGS{8970124,
  author={García, Juan David Rodríguez and León, Jesús Moreno and González, Marcos Román and Robles, Gregorio},
  booktitle={2019 International Symposium on Computers in Education (SIIE)}, 
  title={Developing Computational Thinking at School with Machine Learning: An exploration}, 
  year={2019},
  volume={},
  number={},
  pages={1-6},
  abstract={Artificial Intelligence (AI) and Machine Learning (ML) have heavily irrupted in society, bringing new applications and possibilities while introducing some ethical problems. Governments and institutions around the world are working on the challenges posed by AI in all aspects, from economy to education. Therefore, introducing AI-related content at school and exploring how this kind of content can be taught becomes mandatory. In this paper we carry out a bibliographic revision of previous works done on ML, and then describe an educational resource developed by the institution of the first two authors (INTEF) aimed to teach ML in schools with Scratch and Machine Learning for Kids. The testimonials of three educators, who have implemented their own version of these resources, are depicted. More efforts should be made to introduce AI-related content in education.},
  keywords={Computational Thinking;Artificial Intelligence Education;Machine Learning Education;Scratch},
  doi={10.1109/SIIE48397.2019.8970124},
  ISSN={},
  month={Nov},}@ARTICLE{9139348,
  author={Torres-Torres, Yucnary-Daitiana and Román-González, Marcos and Pérez-González, Juan-Carlos},
  journal={IEEE Revista Iberoamericana de Tecnologias del Aprendizaje}, 
  title={Unplugged Teaching Activities to Promote Computational Thinking Skills in Primary and Adults From a Gender Perspective}, 
  year={2020},
  volume={15},
  number={3},
  pages={225-232},
  abstract={Several investigations state the low participation of women in the world of STEM. This fact implies a lack of feminine perspective in the solution to different problems. The school must provide teaching / learning strategies for the integration, empowerment, and active participation from early ages to work performance in STEM. This paper exposes two unplugged activities taken from a series of activities implemented with elementary students and families in Madrid, Spain. The general objectives are: To introduce and motivate interest from an early age in computer programming and the development of gender dynamics that educate about gender equity to strengthen female empowerment in this context.},
  keywords={Programming profession;Training;Engineering profession;Proposals;Gender equity;Gender;computational thinking;unplugged;computer science education;primary school;elementary education;families;code-literacy},
  doi={10.1109/RITA.2020.3008338},
  ISSN={1932-8540},
  month={Aug},}@INPROCEEDINGS{8491708,
  author={Hug, Sarah and Eyerman, Suzanne and Cota, Raena and Pontelli, Enrico},
  booktitle={2018 Research on Equity and Sustained Participation in Engineering, Computing, and Technology (RESPECT)}, 
  title={Embedding K12 Professional Development Through Co-Teaching Experiences-Sustaining Computational Thinking in Interdisciplinary Courses}, 
  year={2018},
  volume={},
  number={},
  pages={1-6},
  abstract={Focusing on interdisciplinary lesson development in K12 core courses has potential to broaden participation in computing by communicating computer science relevance to youth with limited computer science background within the courses they are already taking (e.g., high school chemistry). The DISSECT professional development program has demonstrated evidence of sustained effort beyond the years of the program—this case study was designed to understand factors that may have supported sustained use.},
  keywords={IEEE Fellows;Education;Computational modeling;Fingerprint recognition;Biological neural networks;Computer science;Task analysis;teacher professional development;sustained change;computational thinking},
  doi={10.1109/RESPECT.2018.8491708},
  ISSN={},
  month={Feb},}@INPROCEEDINGS{9870296,
  author={Li, Bin and Tang, Zhi–Bin},
  booktitle={2022 IEEE Congress on Evolutionary Computation (CEC)}, 
  title={Double-Assimilation of Prosperity and Destruction Oriented Improved Imperialist Competitive Algorithm with Computational Thinking}, 
  year={2022},
  volume={},
  number={},
  pages={01-08},
  abstract={Whereas the imperialist competitive algorithm (ICA) shows limited global search ability and be liable to be trapped into local optimum, a double-assimilation of prosperity and destruction oriented improved imperialist competitive algorithm (DPDO-IIC A) is proposed tentatively to overcome inherent defects. The imperialist assimilation and colonial reform strategy are customized purposefully, and a novel population redistribution mechanism is introduced as well. The three improvement measures are supposed to further promote population diversity and searching accuracy. The CEC2017 test set is selected to verify the performance of the DPDO-IICA by the different types of numerical function problems with the different dimensions. Moreover, the DPDO-IICA is compared with the three first-class intelligent optimization algorithms, which have achieved significant rankings in the CEC2017 competition. The comparison shows that the DPDO-IICA has good performances, which is demonstrated by the accuracy and stability. In addition, the proportion of imperialists and colonies is investigated, and it is through the community partitioning and clustering dynamically to enhance the population diversity. In conclusion, the DPDO-IICA can effectively improve the ability of global exploration and avoid premature convergence in comparison with the original ICA.},
  keywords={Heuristic algorithms;Sociology;Clustering algorithms;Robustness;Partitioning algorithms;Statistics;Particle swarm optimization;imperialist competitive algorithm;computational thinking;double assimilation;prosperity and destruction of empires;population redistribution;elite opposition-based learning;differential evolution operator;partitioning and clustering},
  doi={10.1109/CEC55065.2022.9870296},
  ISSN={},
  month={July},}@INPROCEEDINGS{10397736,
  author={Ahmad, Izzah Sakinah and Sim, Tze Ying and Talib, Corrienna Abdul},
  booktitle={2023 IEEE International Conference on Computing (ICOCO)}, 
  title={Unified Theory Acceptance and Use of Technology Against Unplugged Computational Thinking Activities}, 
  year={2023},
  volume={},
  number={},
  pages={357-362},
  abstract={Occasionally, there may be a low impact on learning engagement between teachers and students due to, for example, poor internet connection or simply because students have lost their focus. One of the methods to improve learning engagement is through a research framework called Unified Theory Acceptance and Use of Technology (UTAUT). This paper adopted 17 UTAUT questions to compare with research variables (pre-post surveys and genders). The user acceptance and use of technology or UTAUT consisted of Likert scale (Strongly disagree to Strongly Agree) questions, computed to generate total scores for each participant. Then, the scores will be compared to each variable to investigate the relationships between these variables against the UTAUT. This study could be implemented via online learning, but in the end, the offline (unplugged) method was the only method to deliver the learning activities. There is limited evidence discussing UTAUT within the area of offline learning; hence, this paper will focus on another spectrum regarding the UTAUT study. Instead of mobile (online) learning engagement, this paper studies the relationship between unplugged learning with user acceptance and the use of technology. Spearman correlation indicated that the unplugged learning approach has a significant positive relationship with user acceptance and use of technology. It revealed that students may also demonstrate an interest in online learning engagement and be able to comprehensively accept the online learning approach. In contrast, Mann-Whitney U test analysis on genders revealed no significant difference. The findings could contribute to another noteworthy discussion regarding the validity of user acceptance and the use of technology against the unplugged learning approach.},
  keywords={Surveys;Correlation;Computational modeling;Hybrid learning;UTAUT;computational thinking;unplugged learning},
  doi={10.1109/ICOCO59262.2023.10397736},
  ISSN={},
  month={Oct},}@INPROCEEDINGS{9637142,
  author={Diaz, Noemi V. Mendoza and Trytten, Deborah A. and Meier, Russ and Yoon, So Yoon},
  booktitle={2021 IEEE Frontiers in Education Conference (FIE)}, 
  title={An Engineering Computational Thinking Diagnostic: A Psychometric Analysis}, 
  year={2021},
  volume={},
  number={},
  pages={1-5},
  abstract={This research-track work-in-progress paper contributes to engineering education by documenting progress in developing a new standard Engineering Computational Thinking Diagnostic to measure engineering student success in five factors of computational thinking. Over the past year, results from an initial validation attempt were used to refine diagnostic questions. A second statistical validation attempt was then completed in Spring 2021 with 191 student participants at three universities. Statistics show that all diagnostic questions had statistically significant factor loadings onto one general computational thinking factor that incorporates the five original factors of (a) Abstraction, (b) Algorithmic Thinking, (c) Decomposition, (d) Data Representation and Organization, and (e) Impact of Computing. This result was unexpected as our goal was a diagnostic that could discriminate among the five factors. A small population size caused by the virtual delivery of courses during the COVID-19 pandemic may be the explanation and a third round of validation in Fall 2021 is expected to result in a larger population given the return to face-to-face instruction. When statistical validation is completed, the diagnostic will help institutions identify students with strong entry level skills in computational thinking as well as students that require academic support. The diagnostic will inform curriculum design by demonstrating which factors are more accessible to engineering students and which factors need more time and focus in the classroom. The long-term impact of a successfully validated computational thinking diagnostic will be introductory engineering courses that better serve engineering students coming from many backgrounds. This can increase student self-efficacy, improve student retention, and improve student enculturation into the engineering profession. Currently, the diagnostic identifies general computational thinking skill},
  keywords={Pandemics;Engineering profession;Sociology;Standards organizations;Loading;Organizations;Particle measurements;Diversity;engineering curriculum;computing knowledge;persistence;psychometric analysis},
  doi={10.1109/FIE49875.2021.9637142},
  ISSN={2377-634X},
  month={Oct},}@ARTICLE{10807249,
  author={Herrero-Álvarez, Rafael and Arnay, Rafael and Segredo, Eduardo and Miranda, Gara and León, Coromoto},
  journal={IEEE Transactions on Learning Technologies}, 
  title={Using RoblockLLy in the Classroom: Bridging the Gap in Computer Science Education Through Robotics Simulation}, 
  year={2025},
  volume={18},
  number={},
  pages={39-52},
  abstract={RoblockLLy is an educational robotics simulator designed for primary and secondary school students, whose goal is to increase their interest in science, technology, engineering, and mathematics. In the particular case of computer science, it allows developing computational thinking skills. It has been designed with ease of use in mind. This free tool is available through a web browser and does not need a complex installation or specific hardware requirements, allowing educational robotics to be introduced to a wide range of users by working on practical projects that will help them understand key concepts of robotics and programming. The effectiveness of RoblockLLy has been validated based on motivation, usability, and user experience criteria. The tool was validated with 212 secondary school students (12–16 years old). Specifically, motivation was measured with the Intrinsic Motivation Inventory, usability with the System Usability Scale, and user experience with the User Experience Questionnaire. Generally speaking, the results demonstrate that students perceived RoblockLLy as a novel and interesting tool. The ratings for usability were predominantly positive, although a few students indicated a preference for expert assistance. The overall rating of the user experience was positive as well, yet notable differences in attitudes toward motivation and usability were observed between genders.},
  keywords={Robots;Three-dimensional displays;Programming;Visualization;Programming profession;Mobile applications;Education;Usability;Python;Operating systems;Computational thinking;educational robotics (ER);pre-university education;programming},
  doi={10.1109/TLT.2024.3520329},
  ISSN={1939-1382},
  month={},}@ARTICLE{9360590,
  author={Cruz Castro, Laura M. and Magana, Alejandra J. and Douglas, Kerrie A. and Boutin, Mireille},
  journal={IEEE Access}, 
  title={Analyzing Students’ Computational Thinking Practices in a First-Year Engineering Course}, 
  year={2021},
  volume={9},
  number={},
  pages={33041-33050},
  abstract={This study investigates the relationship between two related computational thinking practices: data practices and computational problem-solving practices in acquiring related computational thinking practices during a first-year undergraduate engineering course. While computational thinking theory is still developing, empirical studies can help further understand how students demonstrate this knowledge and their progression in attaining the practices. Therefore, with this empirical study, the following questions are addressed. RQ1: What are the differences in students' computational thinking practices at the beginning of an undergraduate introductory programming course? RQ 2: How do these differences correspond to the acquisition of more advanced computational thinking practices? The use of a descriptive non-experimental design that aims to understand the correlation between practices related to data and computational problem-solving is presented. A machine learning technique is employed, utilizing historical data from introductory programming for a problem-solving course with more than 1000 first-year engineering students. After identifying groups of students defining different profiles, data from posterior performance in more advanced programming topics were descriptively analyzed. This study supports the characterization of four different student profiles demonstrating differences in their performance at the beginning of the semester. From these four profiles, two of them show a subsequent differential progression besides their similarity at the beginning of the semester. In this particular case, troubleshooting and debugging appear as a relevant competency when distinguishing these two learners' groups. These findings suggest that previous knowledge or exposure to different practices can result in different progressions of more complex computational practices, emphasizing the relevance of troubleshooting and debugging as a practice required for a successful and timely progression on the acquisition of other computational thinking practices.},
  keywords={Computational modeling;Problem-solving;Data models;Taxonomy;Programming profession;Tools;Mathematical model;Engineering education;engineering students;pattern analysis;statistical learning},
  doi={10.1109/ACCESS.2021.3061277},
  ISSN={2169-3536},
  month={},}@ARTICLE{8130238,
  author={Denning, Peter J.},
  journal={The Computer Journal}, 
  title={Reflections on a Symposium on Computation}, 
  year={2012},
  volume={55},
  number={7},
  pages={799-802},
  abstract={ACM Ubiquity hosted a symposium in 2010–2011 on Turing's question, ‘What is computation?’ The editor reflects on how the symposium was organized and what conclusions it reached. The authors showed strong consensus around the propositions that computation is a process, computational model matters, many computations are natural, many important computations are continuous, many important computations are nonterminating and computational thinking has emerged as a core practice of computing. They left open the questions of whether the Turing model is the best reference model, is computational necessarily a physical process, what is information and what is an algorithm.},
  keywords={algorithm;computation;computational model;computational process;computational thinking;information;information process;interactive computation;natural computation;nonterminating computation;physical computation;reactive computation;turing;turing computability;turing machines},
  doi={10.1093/comjnl/bxs064},
  ISSN={1460-2067},
  month={July},}
