@INPROCEEDINGS{8658859,
  author={Motschnig, Renate and Pfeiffer, Daniel and Gawin, Anna and Gawin, Peter and Steiner, Michael and Streli, Lisa},
  booktitle={2018 IEEE Frontiers in Education Conference (FIE)}, 
  title={Enhancing Stanford Design Thinking for Kids with Digital Technologies A Participatory Action Research Approach to Challenge-Based Learning}, 
  year={2018},
  volume={},
  number={},
  pages={1-9},
  abstract={Can digital competencies be acquired by solving real problems? The educational intervention MadeByKids called an external educational provider to 17 schools to conduct a series of workshops, having pupils age 7 - 12 solve challenges such as designing the schoolbag 4.0 or the future classroom. The workshops were designed by adopting the Stanford Design Thinking Method for Kids (http://www.ideaco.org) and digital technologies with the goal to “teach” children computational thinking, collaborating in teams, resolving conflicts, presenting, giving/receiving feedback, etc. In this paper, we take a participatory action research (PAR) approach with the goal of exposing significant chunks of the incredibly rich experience. A content analysis of a qualitative survey among teachers and findings from a focus group reflect the teachers' view. The study indicates that the acquisition of digital competences needs to be backed by personal and social capacities that take time to mature. Furthermore, we learned that the children's teachers must be included consistently to ensure their cooperation and improve sustainability. Besides providing inspiration for teachers, implications for teacher education are derived and the national project is related to the findings from studies conducted abroad in order to contribute to constructive educational innovations crossing national boundaries.},
  keywords={Conferences;Technological innovation;Prototypes;Educational technology;Stakeholders;21st century competences;digital competences;design thinking;computational thinking;school;challenge;teacher education;sustainability},
  doi={10.1109/FIE.2018.8658859},
  ISSN={2377-634X},
  month={Oct},}@INPROCEEDINGS{9149481,
  author={Sobreira, Péricles de Lima and Abijaude, Jauberth Weyll and Viana, Hellan Dellamycow Gomes and Santiago, Levy Marlon Souza and Guemhioui, Karim El and Wahab, Omar Abdul and Greve, Fabíola},
  booktitle={2020 IEEE World Conference on Engineering Education (EDUNINE)}, 
  title={Usability evaluation of block programming tools in IoT contexts for initial engineering courses}, 
  year={2020},
  volume={},
  number={},
  pages={1-5},
  abstract={Scratch has been shown as one of the main tools for teaching Computational Thinking through the concept of(block-based) programming. In the present research, two platforms based on/inspired by Scratch were considered for the analysis of their usability characteristics through the Cognitive Walkthrough method, for later use by engineering students at the beginning of their university courses for the development of their competences of logical thinking and abstraction of complex concepts: Snap4Arduino (used in the development of solutions for Internet of Things), and; App Inventor (used in the development of Android applications). The results show a positive evaluation of these tools, generating motivation for their use by new engineering students in their teaching-learning processes.},
  keywords={Tools;Usability;Programming profession;Internet of Things;Engineering students;Computational Thinking;Usability;Cognitive Walkthrough;Evaluation;Scratch;Internet of Things;IoT;Learning;Engineering Education},
  doi={10.1109/EDUNINE48860.2020.9149481},
  ISSN={},
  month={March},}@INPROCEEDINGS{9453973,
  author={Zeevaarders, Ad and Aivaloglou, Efthimia},
  booktitle={2021 IEEE Global Engineering Education Conference (EDUCON)}, 
  title={Exploring the Programming Concepts Practiced by Scratch Users: an Analysis of Project Repositories}, 
  year={2021},
  volume={},
  number={},
  pages={1287-1295},
  abstract={Scratch enables children to learn about programming by creating games and animations, and is currently one of the most popular introductory programming languages. While Scratch has been found to increase students' motivation and interest in programming, it has been debated whether Scratch users practice and learn about core programming concepts such as loops, conditional expressions, procedures and variables. This paper presents a large scale study of the progression of the programming concepts practiced by Scratch users through an analysis of their complete public project portfolios. A dataset of over 112 thousand authors and their 1 million projects was constructed and analyzed from three viewpoints. First, we investigate the development of programming concepts by looking at block usage statistics for each project in the users' repositories. Second, we score and analyze the dataset using a computational thinking rubric. Third, we identify users that have left the Scratch platform and evaluate the learning goals they have achieved. Our results show that, while users progress in Scratch, there is a positive trend in the use of all concepts that were examined. Within the least utilized concepts, even after the 20th project of Scratch users, are procedures, conditional loops and logic operations. Examining the users who have left the Scratch platform after creating at least the mean amount of nine projects, we measured that half had left without ever utilizing procedures, and a third had left without ever utilizing conditional loops.},
  keywords={Conferences;Games;Programming;Market research;Software;Trajectory;Engineering education;Programming education;Scratch;Game development;Computational Thinking;K-12},
  doi={10.1109/EDUCON46332.2021.9453973},
  ISSN={2165-9567},
  month={April},}@INPROCEEDINGS{8658581,
  author={Rahman, Md Mahmudur and Paudel, Roshan},
  booktitle={2018 IEEE Frontiers in Education Conference (FIE)}, 
  title={Visual Programming and Interactive Learning Based Dynamic Instructional Approaches to Teach an Introductory Programming Course}, 
  year={2018},
  volume={},
  number={},
  pages={1-6},
  abstract={This Research to Practice Full Paper presents our experience in teaching an introductory programming course in Python by using a visual programming development environment based on flow-charts and active learning with an interactive eBook. The field of computer science education is always being challenged with the high attrition rates despite the ever growing industry demand for computing expertise. The lower rate of student retention is often associated with considerable dropout and failure rates in introductory programming courses during the freshmen year. The main challenge is getting students to write meaningful programs in a short time by focusing more on computational thinking principles and less on language details at that point in time. Nowadays, most students prefer to be engaged and discover course content through exploration, interaction, and collaboration that is relevant, useful, and fun compared to traditional blackboard-based lecturing styles. For evaluation of learning outcomes based on the quantifiable criteria with robust statistical analysis, eleven sections of the course over three semesters were considered. The initial evaluation of summative assessment and analysis of a survey result enable us to conclude that the proposed instructional approach increases student engagement, facilitate learning and contribute to the progress of students in this course.},
  keywords={Visualization;Programming profession;Electronic publishing;Flowcharts;Python;Tools;Introductory programming;computational thinking;visual learning;interactive learning;eBook;active learning;assessment},
  doi={10.1109/FIE.2018.8658581},
  ISSN={2377-634X},
  month={Oct},}@INPROCEEDINGS{9274184,
  author={Schneider, Gelson and Bernardini, Flavia and Boscarioli, Clodis},
  booktitle={2020 IEEE Frontiers in Education Conference (FIE)}, 
  title={Teaching CT through Internet of Things in High School: Possibilities and Reflections}, 
  year={2020},
  volume={},
  number={},
  pages={1-8},
  abstract={This Research to Practice Full Paper presents a pedagogical practice for technical high school students for developing Computational Thinking (CT) abilities through Internet of Things technologies. The covered topics in our proposal include (i) the use of temperature and humidity sensors for data collection, treatment and visualization using Arduino and micro-controllers; (ii) Smart and Human Cities (SHC) and Open Data concepts, in order to lead the students to reflect on the problems of their city and on data protection. Our motivation to our proposal is due to the educational processes have to develop criticality and the ability to solve problems among students. In this context, CT has been used for this through the use of robotics, game building or unplugged computing. On the other hand, technologies for implementing Internet of Things (IoT) have been used in several domains of society, including cities transformation. One important aspect in this scenario is data generation, which have to be carefully tackled by government's and who develop solutions to SHC. In this way, using IoT for teaching CT is an important aspect, also considering open data, privacy and SHC context. In our pedagogical practice, students were able to design and develop solutions to problems in their daily lives indirectly applying CT skills, such as decomposition, pattern recognition, abstraction, automation and analysis, as well as self-skills, collaboration, creativity and critically, required nowadays in broad professional training. It was also possible to develop students' interest in raising awareness of the use of computational technologies, as a solution to problems in society considering aspects of SHC and open data; propose a technological solution using IoT; and analyze the use of these data collected for the social well-being. For the evaluation of our proposal, we carried out questionnaires and tasks observation. The experience was considered successful in its planning and application, with a positive evaluation of the participating students.},
  keywords={Education;Urban areas;Internet of Things;Proposals;Intelligent sensors;Programming profession;Ambient intelligence;computational thinking;internet of things;programming teaching;smart and human cities},
  doi={10.1109/FIE44824.2020.9274184},
  ISSN={2377-634X},
  month={Oct},}@INPROCEEDINGS{9119333,
  author={Bučková, Hana and Dostál, Jiří},
  booktitle={2019 IEEE 15th International Scientific Conference on Informatics}, 
  title={Teachers' attitudes towards implementing coding at schools}, 
  year={2019},
  volume={},
  number={},
  pages={000335-000340},
  abstract={The process of implementing coding at schools attended by pupils from six to fourteen years of age is a current trend in developed countries. In some cases, simple activities involving coding might be even included at kindergartens attended by children from three years of age. The crucial aim is to develop the so-called computational thinking which is going to be more and more essential for a successful personal and professional development of every individual. There is a broad range of factors influencing the success of the change in the curriculum, which is, inter alia, supposed to include coding. In addition to the necessary teaching aids and know-how, teachers also need to have positive attitudes towards its implementation. The main objective of our research is to identify teachers' attitudes towards introducing coding to their classes. We discovered that not all teachers of computing agree with including algorithmization and coding in their teaching. Approximately one half of the questioned educators hold a negative attitude towards the curricular change; they would rather continue teaching computer user skills and basic programs. Their attitude proves to be an impediment to a successful curricular change as teachers should fully grasp the teaching content and communicate it with enthusiasm to their pupils. Insufficient knowledge is the key factor influencing teachers' negative attitudes towards the introduction of coding to schools.},
  keywords={coding;school;teacher;computational thinking;pupil},
  doi={10.1109/Informatics47936.2019.9119333},
  ISSN={},
  month={Nov},}@INPROCEEDINGS{9125209,
  author={Xenakis, Apostolos and Xenakis, Christos and Psycharis, Sarantos and Kalovrektis, Konstantinos},
  booktitle={2020 IEEE Global Engineering Education Conference (EDUCON)}, 
  title={Calculation of the Hubble Universe Expansion Constant by Analyzing Observational Data: An Exploratory Teaching Proposal based on STEM Epistemology}, 
  year={2020},
  volume={},
  number={},
  pages={170-177},
  abstract={Approaches to STEM epistemology are related to the so-called “Integrated STEM Education Curriculum integration of STEM contents based in constructivism theories of learning as a context to implement the STEM epistemology. There are two approaches for STEM education integration: the content integration and the context integration. Computational Pedagogy is a didactic model that applies the Computational Science experiment in order to collect and analyze real- time data in alignment with the practices of Computational Thinking. In this work, the inquiry based teaching and learning strategy is implemented in order to measure the Hubble Universe expansion constant in agreement with the standard Scientific and Engineering practices as a computational experiment.},
  keywords={Analytical models;Scientific computing;Conferences;Computational modeling;Data models;Proposals;Engineering education;STEM Epistemology;Computational Pedagogy;Computational thinking;Hubble Constant;Data analysis},
  doi={10.1109/EDUCON45650.2020.9125209},
  ISSN={2165-9567},
  month={April},}@INPROCEEDINGS{9678771,
  author={Gougeon, Luc and Cross, Jeffrey S.},
  booktitle={2021 IEEE International Conference on Engineering, Technology & Education (TALE)}, 
  title={Japanese Elementary Schools' Playful Programming Curriculum Considerations: Readiness, Limitations and Teacher Training}, 
  year={2021},
  volume={},
  number={},
  pages={23-28},
  abstract={Japan's elementary school educators are facing the difficult task of teaching computer programming education and computational thinking in a playful way which affords students' time to acquire new knowledge while discovering new technology. Japan as a nation has constantly ranked lower than other developed nations in the field of Information and Communication Technology (ICT) literacy. The recent introduction of programming education has created an additional task for educators to learn about programming in order to teach it. Programming education was introduced in April 2020, and little research has been done to measure the knowledge gap of educators. In March 2020, a month before the implementation of programming instruction in Japanese schools, 22 elementary schools were visited to access readiness and to distribute an online survey. The surveys and informal interviews revealed the unpreparedness of educators for the task of teaching programming and limited programming material in the approved textbooks. This research is intended to inform stakeholders in order to improve the fundamental training of in-service and pre-service educators so they can have the necessary knowledge and confidence to teach programming in a fun and playful manner to their students.},
  keywords={Training;Portable computers;Pandemics;Government;Tablet computers;Internet;Information and communication technology;programming;Japan;computational thinking;ICT;primary school;educational policy},
  doi={10.1109/TALE52509.2021.9678771},
  ISSN={2470-6698},
  month={Dec},}@INPROCEEDINGS{6554083,
  author={Zhao, Yongsheng and Zhang, Chunying and Chen, Xiao and Luo, Xiuyan},
  booktitle={2013 8th International Conference on Computer Science & Education}, 
  title={Innovative practice teaching mode, pay attention to students' practice ability training Reforming the practice teaching modes of “The Fundamentals of Computer”}, 
  year={2013},
  volume={},
  number={},
  pages={1117-1122},
  abstract={As the college course of fundamentals of computer pays more attention to the cultivation target of practice ability and the computational thinking ability, we devote to these problems' research as experimental teaching model, teaching contents and teaching method, and reform the innovation practice teaching mode research of the fundamentals of computer in this paper. In the new teaching mode, a new practice teaching system is established based on combined curricular practice teaching with extracurricular innovative work and various innovative competition; group practice teaching is established in order to set a pattern of unit and competitive, where both study and competition can be carried on among groups; the frontier lecture can broaden students' knowledge. The teaching practice proves that the reformed teaching mode will improve students' practice, thinking and learning ability, at the same time stimulate the student's study initiative in large measure, and cultivate students' innovative ability.},
  keywords={Computers;Technological innovation;Blogs;Multimedia communication;Instruction sets;The fundamentals of computer;innovative practices teaching mode;practice ability;the computational thinking ability;innovative ability},
  doi={10.1109/ICCSE.2013.6554083},
  ISSN={},
  month={April},}@INPROCEEDINGS{6554091,
  author={Zhao, Yan jun and Zhang, Chun ying and Li Min jie and Wang, Jing},
  booktitle={2013 8th International Conference on Computer Science & Education}, 
  title={Innovative practices teaching mode research of the fundamentals of computer}, 
  year={2013},
  volume={},
  number={},
  pages={1154-1159},
  abstract={As the course of fundamentals of computer pays more attention to the cultivation target of practice ability and the computational thinking ability, we devote to these problems' research as experimental teaching model, teaching contents and teaching method, and reform the innovation practice teaching mode research of the fundamentals of computer in this paper. In the new teaching mode, a new practice teaching system is established based on combined curricular practice teaching with extracurricular innovative work and vinous innovative competition; group practice teaching is established in order to set a pattern of unit and competitive, in which both study and competition can be carried on among groups; the frontier lecture can help expand the student's knowledge. The teaching practice proves that the reformed teaching mode will improve the practice ability, thinking and learning ability of the students, stimulate the student's study initiative to a great degree, and cultivate the students' innovative ability.},
  keywords={Production;Indium tin oxide;Materials;Technological innovation;the fundamentals of computer;innovative practices teaching mode;practice ability;the computational thinking ability;innovative ability},
  doi={10.1109/ICCSE.2013.6554091},
  ISSN={},
  month={April},}@INPROCEEDINGS{10343492,
  author={Arslan, Pelin Yüksel and Kayali, Fares},
  booktitle={2023 IEEE Frontiers in Education Conference (FIE)}, 
  title={Exploring the Design and Implementation of a Robotic-Coding Camp in Teacher Education}, 
  year={2023},
  volume={},
  number={},
  pages={1-5},
  abstract={This study focused on a bachelor- university-level course that aims to design and implement a robotic-coding camp to train pre-service teachers. Seventeen pre-service teachers participated in this study conducted in the Computational Empowerment Lab at the Center of Teacher Education at the University of Vienna. The researchers aimed to identify specific improvement strategies for in-service and pre-service teachers to enhance their pedagogical practices in designing a robotic-coding camp by promoting student critical thinking, computational thinking, and problem-solving competencies. Additionally, the study proposed to identify the relevant features of the camp's design and implementation that can promote practitioners' engagement and address the challenges they face. The course was offered during the summer semester of 2023. For the procedure of the study, pre-service teachers thought about a problem or situation using the phenomena-based learning method and explained the problem using mediating tools, including educational robots, 3D printers, laser-cutting, and creative Lego boxes, among others. At the end of the course, students developed their project, designed a prototype of a robotic-coding camp, and created digital stories as real-world basis problem statements for their project. Students' assignments and group work interactions, including forum discussions in Moodle, reflection papers, and hands-on activities, were used as data sources. Data collected and analyzed by qualitatively. Participatory action research was used as a research method. The results provide guidelines for how to design and implement robotic coding camps and digital stories for teachers who might want to implement a robotic camp in their future careers. In addition, the results suggest improvement strategies for designing robotic coding activities, including four action steps: (1) phenomenon-based problem statement, (2) visualizing the problem as a digital story, (3) finding a pattern in the problem and (4) creating the learning environment and coding. The most challenging part was the third step, in which participant had difficulty finding a pattern within the problem.},
  keywords={Learning systems;Three-dimensional displays;Soft sensors;Prototypes;Encoding;Reflection;Problem-solving;robotic coding;digital storytelling;action research;participatory design;and computational thinking},
  doi={10.1109/FIE58773.2023.10343492},
  ISSN={2377-634X},
  month={Oct},}@INPROCEEDINGS{9453891,
  author={Fatourou, Eleni and Zygouris, Nikolaos C. and Loukopoulos, Thanasis and Stamoulis, Georgios I.},
  booktitle={2021 IEEE Global Engineering Education Conference (EDUCON)}, 
  title={Review of Learning Design Choices of Primary School Programming Courses in Empirical Researches}, 
  year={2021},
  volume={},
  number={},
  pages={1010-1018},
  abstract={Programming, most recently in the form of Computational Thinking (CT), is emerging as a new subject in primary schools worldwide. By data-based decision making, teachers, as learning designers, make decisions on instruction design based on a broad range of evidence, such as student assessment scores and classroom teaching observations. Given the current limitations on conclusive, field-proven teaching practices and an underlying “culture” to use as a basis, we turn to pertinent empirical studies that the growing scientific interest on introducing programming in primary school curricula has produced. The hypothesis is that we may overcome the lack of extensive experience in designing a programming course by reviewing the above evidence, in order to frame learning situations and methods.},
  keywords={Conferences;Decision making;Cultural differences;Engineering education;Programming profession;Gender issues;Elementary school;learning design;coding/programming;Computational Thinking;classroom},
  doi={10.1109/EDUCON46332.2021.9453891},
  ISSN={2165-9567},
  month={April},}@INPROCEEDINGS{8405151,
  author={Cornejo, Maria Eda and Sommer, Sonia and Rodríguez, Jorge},
  booktitle={2017 36th International Conference of the Chilean Computer Science Society (SCCC)}, 
  title={An approach based on Embodied Programming to teach computer science at a Secondary School}, 
  year={2017},
  volume={},
  number={},
  pages={1-9},
  abstract={In this article a didactic approach is introduced which seeks to integrate the progress made in the context of Block-Based Programming and other didactic approaches developed in the area of computer teaching. The prospects developed in the area of Project Based Learning Approach, Collaborative Learning and Embodied Programming are taken into account. Surrogate Embodiment, in the Embodied Programming context, is a kind of interaction where the movements performed by a person on a stage are directed by students. Furthermore, it is used as a structuring resource in the teaching process, the development of computational devices, paying special attention to skills development in the area of Computational Thinking. This paper presents a Video Game Development Workshop based on this approach with first year students from a state technical school. The experience has shown satisfactory results in connection to the acquisition of concepts and fundamental practices in the area of Algorithms and Programming.},
  keywords={Programming;Education;Software;Cognition;Collaborative work;Performance evaluation;Secondary School;Computing Science;Computational Thinking;Teaching Programming;Embodied Programming;Blocks-based Programming},
  doi={10.1109/SCCC.2017.8405151},
  ISSN={},
  month={Oct},}@ARTICLE{10577151,
  author={Khuda, Ikram E. and Ahmad, Sadique and Ashraf Ateya, Abdelhamied},
  journal={IEEE Access}, 
  title={STEM-Based Bayesian Computational Learning Model-BCLM for Effective Learning of Bayesian Statistics}, 
  year={2024},
  volume={12},
  number={},
  pages={91217-91228},
  abstract={This work contributes to the comprehension of Bayes’ theorem inclusive Bayesian probabilities and Bayesian inferencing within the framework of STEM (Science, Technology, Engineering, Arts, and Mathematics) and cognitive learning w.r.t Bloom’s taxonomy (BT). Bayes’ theorem is taken as a crucial statistical instrument employed in the development of intelligent systems and the management of risks, commonly utilized by engineers for tasks in machine learning and managerial decision-making. The fundamental concept behind Bayes’ theorem revolves around comprehending the degree of truth within the confines of an explicit perspective. This involves partitioning the entire sample space of possible evidence and utilizing the subset containing the relevant perspective to estimate the uncertainty of an event or the reliability of a model. However, it is often found difficult for students to understand Bayes’ theorem to the level of applying it to real-world problems. Considering this, the proposed learning method in this paper elucidated the acquisition of Bayes’ mathematical formulation by leveraging computational thinking, leading to the development of a computational model. The proposed model is named the Bayesian Computational Learning Model (BCLM). Subsequently, we have probed the utility of BCLM in the design and plan of learning activities, coherent to the STEM paradigm and BT cognitive learning hierarchy.},
  keywords={Bayes methods;Probability;Computational modeling;STEM;Mathematical models;Taxonomy;Problem-solving;Computer simulation;Engineering education;Intelligent systems;Project management;Risk management;Bloom’s taxonomy;Bayes’ theorem;computational thinking;computer simulations;decision making;engineering education;frequentist;intelligent systems design;machine learning;project management;risk analysis;STEM},
  doi={10.1109/ACCESS.2024.3420731},
  ISSN={2169-3536},
  month={},}@INPROCEEDINGS{10342890,
  author={Vieira, Camilo and Restrepo, David and De La Hoz, Jose L.},
  booktitle={2023 IEEE Frontiers in Education Conference (FIE)}, 
  title={Computational Notebooks in a Finite Element Analysis Course: Engineering Students' Reflections on the Value and Challenges of Computational Approaches}, 
  year={2023},
  volume={},
  number={},
  pages={1-5},
  abstract={This work-in-progress paper introduces an innovative approach that uses computational notebooks to teach Finite Element Analysis (FEA) in a Mechanical Engineering undergraduate course to aid the understanding of complex phenomena in Mechanics of Materials, and enhance students' computational thinking skills. Research indicates that students, irrespective of their educational level, face difficulties in grasping fundamental concepts in mechanics of materials. These challenges arise from the inherent complexity of concepts like stress, strain, torsion, and buckling, which are difficult to observe, hindering comprehension. Therefore, this work aims to leverage the synergy between mechanics of materials and computational principles to actively engage students in advanced topics such as structural strength, failure of structures, and sensitivity analysis, through the use of computational notebooks. To evaluate the effectiveness of this approach, we first asked students to analyze truss structures using hand calculations following the discrete stiffness method within a Finite Element Analysis framework. Subsequently, we implemented the same method as a simulation tool in a MATLAB Computational Notebook. Finally, we asked the students to reflect on: (1) the value of using computational methods to approach Finite Element Analysis when compared to hand calculations; (2) the difficulties they faced when implementing the activities in the MATLAB Computational Notebook; (3) the support they required to successfully complete these activities; and (4) the effectiveness of the simulation tool in understanding the effect of forces and stress distributions in structures. We anticipate that computational notebooks will provide an ideal platform for sharing lessons and tutorials, enhancing student engagement, and promoting active learning. Students have access to the complete source code, allowing them to develop computational skills. Early exposure to coding, modeling, and simulation techniques is crucial in preparing students for the computational demands of modern engineering workplaces.},
  keywords={Visualization;Sensitivity analysis;Source coding;Tutorials;Reflection;Finite element analysis;Mechanical engineering;Computational notebooks;mechanics of materials;computational thinking;threshold concepts;Finite Element Analysis},
  doi={10.1109/FIE58773.2023.10342890},
  ISSN={2377-634X},
  month={Oct},}@ARTICLE{10054028,
  author={Hooshyar, Danial and Mawas, Nour El and Milrad, Marcelo and Yang, Yeongwook},
  journal={IEEE Access}, 
  title={Modeling Learners to Early Predict Their Performance in Educational Computer Games}, 
  year={2023},
  volume={11},
  number={},
  pages={20399-20417},
  abstract={Data mining approaches have proven to be successful in improving learners’ interaction with educational computer games. Despite the potential of predictive modelling in providing timely adaptive learning and gameplay experience, there is a lack of research on the early prediction of learners’ performance in educational games. In this research, we propose an early predictive modelling approach, called GameEPM, to estimate learners’ final scores in an educational game for promoting computational thinking. Specifically, the GameEPM approach models the sequence of learners’ actions and then uses a limited sequence of the actions to predict the final score of the game for each learner. The findings from our initial trials show that our approach can accurately and robustly estimate the learners’ performance at the early stages of the game. Using less than 50% of learners’ action sequences, the cross-validated deep learning model achieves a squared correlation higher than 0.8 with a relative error of less than 8%, outperforming a range of regression models like linear regression, random forest, neural networks, and support vector machines. An additional experiment showed that the validated deep learning model can also achieve high performance while tested on an independent game dataset, showing its applicability and robustness in real-world cases. Comparing the results with traditional machine learning methods revealed that, in the validation and application phases, up to 0.30 and 0.35 R2 gain is achieved in favor of the deep learning model, respectively. Finally, we found that while the lengths of action sequences influence the predictive power of the traditional machine learning methods, this effect is not substantial in the deep learning model.},
  keywords={Games;Predictive models;Performance evaluation;Machine learning;Adaptation models;Deep learning;Computational modeling;Education;Learning systems;Early performance prediction;learner model;educational games;computational thinking;deep learning},
  doi={10.1109/ACCESS.2023.3249286},
  ISSN={2169-3536},
  month={},}@INPROCEEDINGS{9954081,
  author={Lertlapnon, Thanachote and Lueangrungudom, Naruebes and Vittayakorn, Sirion},
  booktitle={2022 14th International Conference on Information Technology and Electrical Engineering (ICITEE)}, 
  title={Protobot: An Educational Game for Algorithmic Thinking}, 
  year={2022},
  volume={},
  number={},
  pages={79-84},
  abstract={Algorithm has been heavily used to provide a comfort life for us: from finding the best route in Google map to biometrics authentication on your phone. The significant of algorithm defines Computational thinking (CT) as one of the 21st Century skills. Although CT has been integrated into the education in the past years, many students still struggle with CT concept due to the complication of the topic and limited learning methods provided in school environment. To provide alternative learning approach for algorithmic thinking, we propose a game-base learning system called Protobot. Protobot requires students to apply their CT knowledge, especially the algorithmic thinking to solve problems in the gameplay. The experimental results demonstrate that Protobot fosters the algorithmic thinking skill of the players as well as provides the amusement during the gameplay.},
  keywords={Learning systems;Electrical engineering;Biometrics (access control);Education;Games;Internet;Complexity theory;Game-based learning;Digital game-based learning;Procedural content generation;Algorithmic thinking;Computational thinking},
  doi={10.1109/ICITEE56407.2022.9954081},
  ISSN={},
  month={Oct},}@INPROCEEDINGS{10386929,
  author={Underwood, William and Gage, Joan},
  booktitle={2023 IEEE International Conference on Big Data (BigData)}, 
  title={Can GPT-4 Think Computationally about Digital Archival Practices?}, 
  year={2023},
  volume={},
  number={},
  pages={2105-2115},
  abstract={This paper describes an investigation of GPT-4’s knowledge in some areas of archival practice, and its ability to think computationally about archival tasks. It is demonstrated that GPT-4 has shown an understanding of ten among the twenty-two distinct forms of computational thinking. When GPT-4 is combined with plugins, it is able to apply some of these methods and tools to digital archival tasks.},
  keywords={Computational modeling;Data visualization;Oral communication;Metadata;Big Data;Data mining;Systems thinking;computational thinking;systems thinking;large language models;GPT-4;archival system;digitization;metadata extraction},
  doi={10.1109/BigData59044.2023.10386929},
  ISSN={},
  month={Dec},}@INPROCEEDINGS{10825124,
  author={Underwood, William and Gage, Joan},
  booktitle={2024 IEEE International Conference on Big Data (BigData)}, 
  title={Can GPT-4 Think Computationally about Digital Archival Tasks? – Part 2}, 
  year={2024},
  volume={},
  number={},
  pages={2533-2542},
  abstract={This study examines the computational problem-solving capabilities of GPT-4, focusing on its knowledge of machine learning, email categorization, and computational problem solving, alongside its proficiency in Python programming, computational abstraction, and program debugging. The aim of these investigations is to evaluate whether the capabilities of Large Language Models (LLMs), as demonstrated by GPT-4, can support Master of Library and Information Science (MLIS), graduate students in developing computational thinking skills relevant to digital archival tasks.},
  keywords={Computational modeling;Large language models;Text categorization;Machine learning;Debugging;Chatbots;Electronic mail;Problem-solving;Programming profession;Python;computational thinking;GPT-4;computational problem solving;large language models;MLIS education},
  doi={10.1109/BigData62323.2024.10825124},
  ISSN={2573-2978},
  month={Dec},}@INPROCEEDINGS{10775099,
  author={P., Archana Reddy and G., Divya Jyothi and Varshita, Velumury and Akshitha, Chennupati and Radha, D},
  booktitle={2024 IEEE North Karnataka Subsection Flagship International Conference (NKCon)}, 
  title={Modeling Plants vs Zombies Gameplay using Finite automata}, 
  year={2024},
  volume={},
  number={},
  pages={1-7},
  abstract={Playing video games on personal computers is known as PC gaming. PC games are available in a variety of genres, offer both single-player and multiplayer options, and have spawned an international e-sports industry. Modding communities are active, digital distribution systems are essential, and hardware can be customized. Future developments in gaming, such as virtual reality, cloud gaming, and artificial intelligence, portend more innovation in the industry. The game, Plants vs Zombies is represented by Finite Automata and it is ruled by DFAs and NFAs which describe the actions and behaviours of both the plants and the zombies and the result of their actions. In the proposed work you can notice how the NFA will be converted to DFA and vice versa due to its handy functions. Overall, "Plants vs Zombies" is a fun and interactive way for players to explore computational thinking while learning about the complex ideas of NFA and DFA in Automata Theory. The advantages are Synchronize State Management, Consistent State Transitions, Easier Development, and Unambiguous Animation Staging.},
  keywords={Video games;Technological innovation;Solid modeling;Analytical models;Systematics;Learning automata;Computational modeling;Biological system modeling;Games;Virtual reality;Finite Automata;Computational Thinking;Automata Theory;Plants vs Zombie and Interactive Gaming},
  doi={10.1109/NKCon62728.2024.10775099},
  ISSN={},
  month={Sep.},}@INPROCEEDINGS{9894554,
  author={Chang, Chih-Kai and Chen, Pin-Chen},
  booktitle={2022 12th International Congress on Advanced Applied Informatics (IIAI-AAI)}, 
  title={Development and Assessment of Recommendation System Based on Behavioral Intervention Analysis}, 
  year={2022},
  volume={},
  number={},
  pages={208-213},
  abstract={Computer science education in primary and secondary schools uses the. visual programming language "Scratch " to learn computational thinking. However, the limited number of course hours and overwhelmed teachers delay students’ learning progression. Although many Scratch instructional videos are available online, students still fail because of a lack of keyword-searching ability. Given this learning dilemma, we use the existing teaching videos online as hints assisting students in learning "Scratch." This project uses OpenCV to record the program blocks and analyze the behavioral intentions, and then compares and analyzes it with the video content to recommend and mark relevant segments that students need. We believe that through this recommendation system, intelligent hints in the form of videos can cultivate students’ self-learning ability and improve current teaching adversity.},
  keywords={Visualization;Computer languages;Education;Computer science education;Behavioral sciences;Internet;Informatics;Computer science education;Computational Thinking;Visual Programming Language;Intelligent Hint;Recommendation System},
  doi={10.1109/IIAIAAI55812.2022.00049},
  ISSN={2472-0070},
  month={July},}@INPROCEEDINGS{8783348,
  author={Rezende, Criscilla M. C. and Bispo, Esdras L.},
  booktitle={2018 XIII Latin American Conference on Learning Technologies (LACLO)}, 
  title={Comparison between Pseudocode Usage and Visual Programming with Scratch in Programming Teaching}, 
  year={2018},
  volume={},
  number={},
  pages={492-498},
  abstract={This work presents the results of a research that aimed to evaluate the use of the Scratch visual programming language in the development of computational thinking, in comparison with the use of pseudocode, during the teaching of logic and programming algorithms. The research was delineated with a methodology of action research, which made possible the evaluation of the Scratch language and the pseudocode at the end of the approach of each content. The steps of approaching each content were initiated with the application of the diagnostic evaluation, and finalized with the evaluation of performance. The results indicate that the use of the Scratch language presented better results during the initial stages; as the complexity of the content increased, the use of the pseudocode produced better results. Nevertheless, it is worth noting the good acceptance of the Scratch language for the teaching-learning process of the contents, as well as the contribution that it has had to the learning of logic and programming algorithms.},
  keywords={Visualization;Programming profession;Education;Computer languages;Complexity theory;Computational modeling;computing education, Computational Thinking, programming logic, Scratch},
  doi={10.1109/LACLO.2018.00087},
  ISSN={},
  month={Oct},}@INPROCEEDINGS{10449552,
  author={Kulanova, Fariza and Baitureev, Daniyar and Singh, Chandan Pal},
  booktitle={2023 4th International Conference on Computation, Automation and Knowledge Management (ICCAKM)}, 
  title={Fostering Student Competencies in Creative Project Work Through STEAM and Artificial Intelligence in Teaching Art}, 
  year={2023},
  volume={},
  number={},
  pages={1-6},
  abstract={The objective of this study is to determine if there exists a statistically significant distinction between high school pupils who get instruction in the topic of “Art” through the use of Artificial Intelligence (AI) and those who receive instruction through the integration of Science, Technology, Engineering, Arts, and Mathematics (STEAM). Creativity, particularly within the realm of art and design, is commonly perceived as the ability to think beyond conventional boundaries. The study posited an alternative perspective by equating computational thinking with creative thinking. A total of forty-two kids from a high school in Kazakhstan were chosen as case studies for the topic of Art. The objective is to facilitate the integration of STEM education and art-based education.},
  keywords={Visualization;Art;Three-dimensional displays;Education;Vocational training;Artificial intelligence;Task analysis;Computational Thinking;Creativity;Art and Design Practices;STEAM;AI;Teaching;Pedagogy},
  doi={10.1109/ICCAKM58659.2023.10449552},
  ISSN={},
  month={Dec},}@INPROCEEDINGS{10342646,
  author={Alharbi, Noha Abdulkhalig M. and Cutts, Quintin I.},
  booktitle={2023 IEEE Frontiers in Education Conference (FIE)}, 
  title={An Elaboration of Research Led Computer Science Framework for Early Education}, 
  year={2023},
  volume={},
  number={},
  pages={1-8},
  abstract={Teachers face challenges in teaching new subjects at the early primary level. The difficulties vary from subject to subject. Teachers' first challenge in Computer Science (CS) and Computational Thinking teaching is their technological literacy and competency challenges. Lack of confidence, time, and willingness are significant reasons for the challenge. One of the studies on mathematics teaching shows that teachers need more knowledge tools and models to facilitate the analysis during the teaching process. Researchers assert that educational practice has focused more on technology than on new pedagogies needed to truly use technology in a transformative way. Frameworks are designed to meet high-level objectives set by the authorities. Teachers are provided with teaching materials for developing the course contents. The frameworks act as a connection between high-level objectives and low-level teaching materials. In this paper, we present the elaboration of a framework for teaching CS at the early stages of education. The framework consists of three components based on modelling real-world problems into a machine-world context and then realising the machine solution in the real world. Moreover, the problem-solving component of the framework emphasizes the iterative process of learning that strengthens the previous concepts and provides a logical con-nection between the previous and new concepts. The framework was evaluated in the context of Saudi Arabia, where the teachers were interviewed individually and then provided with a guide for teaching grade-4 learners. The guide was developed using the material provided by the Saudi Ministry of Education. The teachers taught using this guide over a sequence of lessons. At the end of this time, a second individual teacher interview was conducted to determine teacher experience. The results show that teaching using the framework is effective, and it is not only easier for teachers to understand the teaching method but also for learners to learn the content quickly.},
  keywords={Computer science;Surveys;Computational modeling;Education;Mathematical models;Problem-solving;Iterative methods;K-12;Computer Science Education;Computational Thinking},
  doi={10.1109/FIE58773.2023.10342646},
  ISSN={2377-634X},
  month={Oct},}@INPROCEEDINGS{10102868,
  author={Boya-Lara, Carlos and Diaz-Solano, Daniela and Fehrenbach, Aaron},
  booktitle={2023 IEEE World Engineering Education Conference (EDUNINE)}, 
  title={A course based on BEAM Robotics for the valorization of WEEE through the development of STEAM skills}, 
  year={2023},
  volume={},
  number={},
  pages={01-06},
  abstract={This article presents a course that relates environmental education and the development of STEAM skills through the valorization of WEEE (Waste of Electrical and Electronic Equipment). As a didactic tool, the BEAM Robots are used, which are simple robots that can be built with elements extracted from WEEE. For the execution of the course, a four-phase curriculum design is developed: propaedeutics, assembly, Computational Thinking (CT), and WEEE. The course is built in a modular way and implemented virtually. The students were evaluated with pre and post-surveys, to investigate the impact of the course. In addition, evaluation activities were created that made it possible to follow the development of the students. In general, it can be concluded that the course had a positive impact on students' STEAM skills and knowledge, as well as an improvement in environmental awareness related to the creative reuse of WEEE.},
  keywords={Electronic equipment;DVD;Metals;Electronic waste;Plastics;Engineering education;Robots;STEM;STEAM;BEAM robotics;Environmental Education;WEEE;Educational robotics;Computational Thinking},
  doi={10.1109/EDUNINE57531.2023.10102868},
  ISSN={},
  month={March},}
