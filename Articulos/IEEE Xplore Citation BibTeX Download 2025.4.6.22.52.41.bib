@INPROCEEDINGS{7273712,
  author={Paravati, Gianluca and Lamberti, Fabrizio and Gatteschi, Valentina},
  booktitle={2015 IEEE 39th Annual Computer Software and Applications Conference}, 
  title={Joint Traditional and Company-Based Organization of Information Systems and Product Development Courses}, 
  year={2015},
  volume={2},
  number={},
  pages={858-867},
  abstract={The fast pace of change in high technology product development requires high flexibility and adaptation in product design and technology management. Within this context, appropriate learning environments are planned to shape future Information and Communication Technology staff in such a way they could get able to keep up with new trends and innovations. A constructivist educational model based on Active Learning represents a step towards this vision for staff training. This paper deals with a new organization of a 13 weeks course based on the inverted class model, where students are introduced to the problem-posing domain by a direct involvement of enterprises, which participate specifically to the problem definition and assessment phases. In the case study shown, students simulate a production business unit in all the phases that characterize the product/service development life cycle. A mixed traditional and company-based organization of the course is supposed to improve students competences by proposing solutions leveraging on appropriate tools taken from traditional experiences and also gaining benefits from a learning-by-doing approach that encourages the use of state-of-the-art solutions. A preliminary study is performed to see how expected professional competences are met during the course, with the additional goal of collecting indications that could help to improve the learning framework for future editions of the course.},
  keywords={Context;Companies;Mathematical model;Computational modeling;Unified modeling language;Active Learning;Inquiry-Based Learning;Computational Thinking;Problem-Posing and Problem-Solving;Company-based Learning},
  doi={10.1109/COMPSAC.2015.83},
  ISSN={0730-3157},
  month={July},}@INPROCEEDINGS{8621932,
  author={Cox, Ryan and Shah, Sohan and Frederick, William and Nelson, Tammie and Thomas, Will and Jansen, Greg and Dibert, Noah and Kurtz, Michael and Marciano, Richard},
  booktitle={2018 IEEE International Conference on Big Data (Big Data)}, 
  title={A Case Study in Creating Transparency in Using Cultural Big Data: The Legacy of Slavery Project}, 
  year={2018},
  volume={},
  number={},
  pages={2689-2695},
  abstract={The Maryland State Archives (MSA) and the Digital Curation Innovation Center (DCIC) of the University of Maryland's iSchool are collaborating on a digital project that utilizes digital strategies and technologies to create an in-depth understanding of the African-American experience in Maryland during the era of slavery. Utilizing crowdsourcing for transcription, data cleaning and transformation techniques, and data visualization strategies, the joint project team is creating new avenues for understanding the complex web of relationships that undergirded the institution of slavery. iSchool students, full participants on the project team, are learning digital curation and other technical skills while gaining insights into the multiple uses of how cultural Big Data can penetrate the past and illuminate the present.},
  keywords={Tools;Data mining;Databases;Big Data;Government;Cultural differences;Crowdsourcing;Computational Thinking;Digital Curation;Computational Archival Science (CAS);Cultural Big Data;Legacy of Slavery},
  doi={10.1109/BigData.2018.8621932},
  ISSN={},
  month={Dec},}@INPROCEEDINGS{9368406,
  author={Kellermayer, Benedikt and Meyer, Dany and Stirzel, Martin and Kirmaier, Amrei and Bergande, Bianca},
  booktitle={2020 IEEE International Conference on Teaching, Assessment, and Learning for Engineering (TALE)}, 
  title={Raising Motivation of Programming Novices? Findings from a Controlled Laboratory Experiment Using Anki VectorTM Robots}, 
  year={2020},
  volume={},
  number={},
  pages={150-156},
  abstract={In order to strengthen the interest of students in the field of programming, robots are increasingly being used in courses of study with information technology content. This article describes the use of the robot Vector, manufactured by Anki, in a controlled laboratory experiment with undergraduate students. The aim of the research was to investigate the influence of robots on the motivation of programming beginners from the perspective of the students. The data of the study was collected using the Intrinsic Motivation Inventory. The subsequent analysis was performed using descriptive statistics and Chi2-tests. In addition, a computer-aided content analysis as well as a factor analysis was used as a second evaluation method. The research results showed a consistently positive influence of the Vector robot on the motivational behavior of the students. In particular, significant dependencies between the female gender and individual subcategories of the Intrinsic Motivation Inventory could be demonstrated. The generalization of the research results is limited due to the small sample size and the exclusive participation of programming beginners.},
  keywords={Educational robots;Conferences;Education;Programming;Information technology;intrinsic motivation;computer science;gender;humanoid robots;STEM;computational thinking},
  doi={10.1109/TALE48869.2020.9368406},
  ISSN={2470-6698},
  month={Dec},}@INPROCEEDINGS{9764109,
  author={Roopaei, Mehdi and Horst, Justine},
  booktitle={2021 IEEE Integrated STEM Education Conference (ISEC)}, 
  title={STEM-Coding using Drones}, 
  year={2021},
  volume={},
  number={},
  pages={140-145},
  abstract={STEM learning from an early age is essential to confirm that students are prepared to meet the needs of the world they will inherit. Currently, there are incredible and inexpensive technologies to keep students engaged and passionate about their learning. A drone is a handson apparatus that could be incorporated in STEM for several learning applications such as class projects, experiments, and exploration. In this paper, the STEMcoding framework is designed for kids to learn coding using a drone and Scratch programming. This platform attempts to visualize their coding by drone while Scratch makes a gaming environment to enhance their programming using block-based learning. The platform has applied in a STEM event at the University of Wisconsin Platteville and the results show the benefit of utilizing drone in STEM-coding as follows: i) transforms abstract concepts into concrete learning, ii) delivers an entertaining and motivating learning environment, iii) combines STEM theory with practice, and iv) provides a hand-on skill which is dynamic and attractive.},
  keywords={Visualization;Conferences;Education;Transforms;Encoding;Concrete;Programming profession;Computational Thinking;Gamification;Drone Technology;Stem-Coding;Visualization.},
  doi={10.1109/ISEC52395.2021.9764109},
  ISSN={2330-331X},
  month={March},}@INPROCEEDINGS{9272418,
  author={Fancsali, Cheri and Mark, June and DeLyser, Leigh Ann},
  booktitle={2020 Research on Equity and Sustained Participation in Engineering, Computing, and Technology (RESPECT)}, 
  title={NYC CS4All: An Early Look at Teacher Implementation in One Districtwide Initiative}, 
  year={2020},
  volume={1},
  number={},
  pages={1-8},
  abstract={Computer science for all initiatives have broadened the participation of students enrolled in elective computer science (CS) courses and introduced compulsory CS instruction in many areas of the United States. However, there is a shortage of K-12 teachers with the background, preparation, and experience necessary to teach CS. To build capacity to deliver this instruction, districts must provide teacher preparation that includes not only CS content, but also high-quality pedagogical approaches that will meet the needs of all students enrolled in a wide variety of school settings. In this paper, we explore teacher outcomes across multiple CS professional development opportunities, in one large urban district. The teacher outcomes were measured via a survey administered between eight months and two years after teachers received training to implement CS. Though our findings are from a single district, we believe these findings are relevant to other settings and provide useful information about the outcomes of teacher professional development for CS education, as well as supports and barriers to implementing CS, in a large, urban school system. The results offer insight into professional development quality, teacher confidence, the ability of teachers to implement CS in their classrooms, and supports and barriers to offering CS instruction (even in a district where CS education is a priority). They also shed light on how supports and barriers differ in schools serving students with high economic needs and lower academic performance compared with schools serving students with lower economic needs and higher academic performance. These differences underscore the importance of considering economic need and academic performance (in addition to race and gender) when developing and executing CS for all initiatives.},
  keywords={Training;Urban areas;Economics;Encoding;Software engineering;STEM;Programming profession;CS4All;K-12 classroom implementation;Teacher survey;Evaluation;Assessment;Computational Thinking;Gender and Diversity;Teacher Development;K-12 Curriculum;K-12 Instruction;Non-traditional Students;Professional Practice},
  doi={10.1109/RESPECT49803.2020.9272418},
  ISSN={},
  month={March},}@INPROCEEDINGS{9028393,
  author={Bosse, Yorah and Redmiles, David F and Gerosa, Marco},
  booktitle={2019 IEEE Frontiers in Education Conference (FIE)}, 
  title={Connections and Influences Among Topics of Learning How to Program}, 
  year={2019},
  volume={},
  number={},
  pages={1-8},
  abstract={This Full Paper of Innovative Practice research shows results that could help to avoid some challenges faced by those who seek to learn how to program. To help improve learning, educators need a deep understanding of the obstacles students must overcome; otherwise, teaching strategies will be uncertain. Moreover, a shallow understanding of topics learned in introductory programming courses can negatively influence the learning of future topics. With the above motivation, we conducted 16 semi-structured interviews with instructors who teach introductory programming courses and we also collected diaries kept by 110 students during their studies. The qualitative analysis of these data revealed connections between the studied contents such as dependencies. Our analysis shows that many difficulties arise from the incorrect application of the knowledge necessary in learning new content, usually because the student has not learned earlier topics or learned them superficially. The main contribution of this paper is a theory that describes the connections among topics of learning how to program, showing the influence that knowledge about one can have on others.},
  keywords={Programming profession;Interviews;Syntactics;Education;Encoding;Libraries;learning to program;novice learners;barriers to learning;introductory programming;computational thinking},
  doi={10.1109/FIE43999.2019.9028393},
  ISSN={2377-634X},
  month={Oct},}@INPROCEEDINGS{9454149,
  author={Rios, Mónica Gómez and Paredes-Velasco, Maximiliano},
  booktitle={2021 IEEE Global Engineering Education Conference (EDUCON)}, 
  title={Using Augmented Reality in programming learning: A systematic mapping study}, 
  year={2021},
  volume={},
  number={},
  pages={1635-1641},
  abstract={Coding skills have become the new language of communication for the tech world. At an educational level, applying the concepts and logic of programming is a complex task for the student. The investigation of this problem was carried out with the intention of knowing if there are tools that could help the student understand programming by using augmented reality technology. For this purpose, a systematic mapping study was carried out to identify, filter and classify the information through a query applied in different ways of research. As a result, 34 articles were selected and classified. The main results show that: a) programming learning is not limited in terms of the student's age; b) Augmented reality has potential advantages in programming learning; c) Due to the extensive content of the programming, applications focused on specific topics were found according to the level of studies; d) The software used in the development of AR applications, mostly uses Unity with Vuforia; and, e) Augmented reality contributes to different learning techniques and styles that improve the way information is perceived and visualized. In conclusion, augmented reality technology has proven to have positive consequences in the programming learning process, providing a starting point for the development of a tool that contributes to the programming learning based on the characteristics found and analyzed in this document.},
  keywords={Visualization;Systematics;Wearable computers;Tools;Information filters;Software;Hardware;Augmented Reality;programming learning;learning based on gamification;collaborative learning;computational thinking},
  doi={10.1109/EDUCON46332.2021.9454149},
  ISSN={2165-9567},
  month={April},}@INPROCEEDINGS{9028612,
  author={Winter, Victor and Friend, Michelle and Matthews, Michael and Love, Betty and Vasireddy, Sanghamithra},
  booktitle={2019 IEEE Frontiers in Education Conference (FIE)}, 
  title={Using Visualization to Reduce the Cognitive Load of Threshold Concepts in Computer Programming}, 
  year={2019},
  volume={},
  number={},
  pages={1-9},
  abstract={This Full Paper in the Research to Practice Category reports on an empirical empirical study in which novel educational tools and techniques were employed to teach fundamentals of problem decomposition - a cognitive task transcending disciplines. Within the discipline of computer science, problem decomposition is recognized as a foundational activity of software development. Factors that contribute to the complexity of this activity include: (1) recognizing patterns within an algorithm, (2) mapping the understanding of an algorithm to the syntax of a given programming language, and (3) complexity intrinsic to the problem domain itself. Cognitive load theory states that learning outcomes can be positively affected by reducing the extraneous cognitive load associated with learning objectives as well as by changing the nature of what is learned. In the study reported upon here, a novel instructional method was developed to decrease students' cognitive load. Novel instructional content supported by a custom visualization tool was used in a classroom setting in order to help novice programmers develop an understanding of function-based problem decomposition within the context of a visual domain. Performance on outcome measures (a quiz and assignment) were compared between the new method and the traditional teaching method demonstrated that students were significantly more successful at demonstrating mastery when using the new instructional method.},
  keywords={Visualization;Tools;Complexity theory;Animation;Computer science;Labeling;Syntactics;computational thinking;mathematical thinking;visual thinking;spatial reasoning;functional programming},
  doi={10.1109/FIE43999.2019.9028612},
  ISSN={2377-634X},
  month={Oct},}@ARTICLE{9648320,
  author={Bogliolo, Alessandro and Delpriori, Saverio and Di Francesco, Gian Marco and Klopfenstein, Lorenz Cuno and Paolini, Brendan Dominic},
  journal={IEEE Access}, 
  title={Massive Remote School Trips: A Case Study}, 
  year={2021},
  volume={9},
  number={},
  pages={165239-165251},
  abstract={During the height of the CoViD-19 pandemic in 2020 and early 2021, schools throughout Europe have been closed for several months, leaving teachers with the responsibility of providing distance learning through video conferencing and remote-presence systems, while parents were scrambling for appropriate tools and support. School outings have also suffered from the limited mobility of students given by stay-at-home orders and other restrictions. In this paper we present a set of technologies developed to reproduce the school trip experience, allowing students to stay at home or in school and requiring only a Web browser and Internet access, while integrating communication tools that allow participants to actively be engaged in interactive lessons and educational experiences. In 2020 the tool has been used during the “CodyTrip” event, a two-day visit to the town of Urbino, attended by more than 15.000 students, followed up with a series of events in 2021 with over 115.000 participants. Results from the pilot events show very high engagement and demonstrate the feasibility of organizing online visiting experiences with massive participation without compromising the perceived interactivity of the proposed activities, which can be equally engaging for different audience demographics. Findings also suggest that this solution may be adopted not only as a contingent substitute for traveling during the pandemic, but as an effective tool to widen the scope and appeal of cultural tourism.},
  keywords={Encoding;Pandemics;Education;Computer aided instruction;COVID-19;Streaming media;Games;Coding;computational thinking;CoViD-19;distance learning;educational technology;virtual tourism},
  doi={10.1109/ACCESS.2021.3135463},
  ISSN={2169-3536},
  month={},}@ARTICLE{9249431,
  author={Vinueza-Morales, Mariuxi and Borrego, Diana and A. Galindo, José and Benavides, David},
  journal={IEEE Transactions on Education}, 
  title={Empirical Evidence of the Usage of Programming Languages in the Educational Process}, 
  year={2021},
  volume={64},
  number={3},
  pages={213-222},
  abstract={Contribution: A systematic literature review on the empirical evidence regarding the usage of programming languages for learning purposes is presented. The review analyzes different methods and tools at different educational levels and with different objectives. Background: Learning programming has gained relevance in the last decade. This is due to the massive presence of programmable elements ranging from computers to toys. Because of this, the interest of researchers on this topic has increased. Questions, such as what to use, in what educational stages to use it, the effectiveness of the method, and the focal objectives for learning programming are questions that do not have obvious answers. Research Questions: 1) What empirical evidence exists on the use of educational programming languages (EPLs)? 2) In what context is the research performed? 3) How is effectiveness reported in the literature after applying EPLs? 4) What pedagogical goals are achieved by using EPLs? Methodology: Following a formal protocol, automated searches were performed for primary studies from 2007 to 2018. A total of 62 studies were identified, of which 29 were selected and analyzed since they include some type of empirical evidence. Findings: After performing the evaluation, the results support the need for better approaches with empirical evidence when reporting research on the usage of EPLs. Some research opportunities are identified which concerns the used programming languages, the areas or stages of their application, or the need to have more empirical evidence in general and more studies in non-WEIRD (Western, educated, industrialized, rich, and democratic) contexts.},
  keywords={Programming profession;Databases;Computer languages;Bibliographies;Tools;Protocols;Computational thinking (CT);educational programming language (EPL);programming learning},
  doi={10.1109/TE.2020.3030588},
  ISSN={1557-9638},
  month={Aug},}@ARTICLE{8070426,
  author={Bosse, Yorah and Gerosa, Marco Aurelio},
  journal={IEEE Latin America Transactions}, 
  title={Difficulties of Programming Learning from the Point of View of Students and Instructors}, 
  year={2017},
  volume={15},
  number={11},
  pages={2191-2199},
  abstract={Computer programming courses are mandatory for many majors. However, the high rate of failures shows that students have difficulties in assimilating the topics. The objective of this research is to understand these difficulties. Analyzing diaries filled out by students and interviews with instructors, we identified difficulties related to language and understanding and some strategies used to mitigate them. The analysis and understanding of the difficulties may support the creation of teaching strategies and tools to facilitate the teaching and learning of computer programming.},
  keywords={Programming;IP networks;IEEE transactions;Visualization;Education;Facebook;Interviews;barriers;computational thinking;Difficulties;introduction to programming;novices;programming learning},
  doi={10.1109/TLA.2017.8070426},
  ISSN={1548-0992},
  month={Nov},}@INPROCEEDINGS{9637325,
  author={Maly, Colin and Person, Suzette and Soh, Leen-Kiat},
  booktitle={2021 IEEE Frontiers in Education Conference (FIE)}, 
  title={SE-First: A New Approach to Software Engineering Education}, 
  year={2021},
  volume={},
  number={},
  pages={1-9},
  abstract={In this Innovative Practice Full Paper, we note that the way software is developed has changed significantly in the past 50 years. Software developers today cannot just be good at writing code; they must also possess non-technical skills in order to work successfully within diverse teams and have an appreciation for the tools and processes needed to build and maintain complex systems. In this work, we describe a novel first-year Software Engineering-First (SE-First) curriculum that introduces students to the broader picture of software development while students learn fundamental computing concepts. To assess the effectiveness of our novel first-year curriculum, we compare students who completed the first-year software engineering curriculum with students who completed our traditional computer science curriculum. We assess student knowledge of computing concepts, and their self-efficacy. Initial results show that students who complete the first-year software engineering courses perform as well or better on the computing concepts test, they are more confident in their computing abilities and in the application of computing skills to their field, and they have a higher success rate in their first-year computing courses (i.e., fewer students drop the course and fewer students receive a D or F course grade) compared with students who complete the traditional first-year computing program.},
  keywords={Computer science;Codes;Computational modeling;Education;Writing;Market research;Software;software engineering;education;curriculum;software engineering-first model;computational thinking;attitudes;perceptions},
  doi={10.1109/FIE49875.2021.9637325},
  ISSN={2377-634X},
  month={Oct},}@INPROCEEDINGS{9378110,
  author={Perine, Lori A. and Gnanasekaran, Rajesh Kumar and Nicholas, Phillip and Hill, Alexis and Marciano, Richard},
  booktitle={2020 IEEE International Conference on Big Data (Big Data)}, 
  title={Computational Treatments to Recover Erased Heritage: A Legacy of Slavery Case Study (CT-LoS)}, 
  year={2020},
  volume={},
  number={},
  pages={1894-1903},
  abstract={Graduate students at the University of Maryland's College of Information Studies (UMD iSchool) collaborated in interdisciplinary teams on a case study to explore application of computational methodologies to datafied collections related to slavery in the Maryland State Archives (MSA). Two research questions were examined: (1) What are the opportunities and limitations for using computational methods and open source tools to characterize data encoded within records of enslavement and to discover new patterns and relationships in that data? (2) How does knowledge of social and cultural systems impact those opportunities and limitations? Computational methods and tools were most effectively used when socio-cultural contextualization and technology's role as a mediator of representation were taken into account. Three additional technical research areas are identified to enhance recovery of heritage hidden in records of enslavement: visualization, graph databases, and ontologies and metadata.},
  keywords={Data visualization;Tools;Big Data;Ontologies;Metadata;Visual databases;Cultural differences;Computational Thinking;Digital Curation;Computational Archival Science (CAS);Legacy of Slavery},
  doi={10.1109/BigData50022.2020.9378110},
  ISSN={},
  month={Dec},}@INPROCEEDINGS{9653337,
  author={Carlos, Enríquez Ramírez and Mariza, Raluy Herrero and Sosa, Luz María Vega},
  booktitle={2021 9th International Conference in Software Engineering Research and Innovation (CONISOFT)}, 
  title={Use of Techno-Pedagogical Tools to Incorporate Remote Collaboration in a Data Structure Course}, 
  year={2021},
  volume={},
  number={},
  pages={232-237},
  abstract={Traditionally, teaching-learning activities in typical schools in most of the states in the Mexican Republic have been face-to-face interactions between students and learning facilitators, but obviously, in 2020, everything changed, so that educational videoconferencing will gain ground in the academic world. Participation in solving individual and / or group problems was adapted to a remote scheme, stimulating the use of different skills in students to face the new normal, as is the case in the development of remote programming projects for the purpose of training novice programmers to solve problems collaboratively, going through the entire global software development process. To do so, it is necessary to incorporate skills that allow them to adapt this work philosophy, which is why in this work the use of competencies that allows to detonate social and cognitive aspects in the development of software in small teams was evaluated, as well as the frequency of use. It is also important to determine if the gender has any influence on the adoption of a certain trait. For this, groups of students were trained by developing computational problems in the field of data structure.},
  keywords={Training;Teleconferencing;Technological innovation;Collaboration;Data structures;Software;Task analysis;Collaborative programming;Skills;Computational thinking},
  doi={10.1109/CONISOFT52520.2021.00039},
  ISSN={},
  month={Oct},}@INPROCEEDINGS{8658886,
  author={Ellrodt, Lisa R. and Freeman, Ion C. and Haigler, Ashley J. and Schmeelk, Suzanna E.},
  booktitle={2018 IEEE Frontiers in Education Conference (FIE)}, 
  title={Doctor of Professional Studies in Computing: A Categorization of Applied Industry Research}, 
  year={2018},
  volume={},
  number={},
  pages={1-6},
  abstract={This is a full paper in the Innovate Practice category examining a Doctor of Professional Studies (D.P.S.) in Computing program at Pace University which is a specialized degree program designed for active Information Technology (IT) professionals with at least five years of full time experience in the computing field. The first question that guided our research is how is the Pace University D.P.S. program related to other doctoral computing programs in the United States and globally. The second question that guided our inquiry is dissertation topics pursued by graduates in dissertation research, specifically by IT professionals in the Pace University program. To answer this second question, we analyzed the first 114 dissertation abstracts that have been defended at Pace University in the Seidenberg School of Computer Science and Information Systems. We used machine learning and natural language processing to determine commonalities among research topics in order to gain an understanding of the topic categories and topic spread produced by the program.},
  keywords={Medical services;Education;Computer science;Information systems;Industries;Machine learning;Natural language processing;Doctoral Programs;Full time working IT Professionals;Computational Thinking;Computing;Education;Natural Language Processing;Machine Learning},
  doi={10.1109/FIE.2018.8658886},
  ISSN={2377-634X},
  month={Oct},}@INPROCEEDINGS{9766752,
  author={Maruyama, Ryoga and Kayama, Mizue and Nagai, Takashi and Otaku, Koki and Taguchi, Naomi},
  booktitle={2022 IEEE Global Engineering Education Conference (EDUCON)}, 
  title={Practical UML Programming based on the Executable UML Method at Secondary School Students}, 
  year={2022},
  volume={},
  number={},
  pages={45-50},
  abstract={This study aims to explore educational methods for conceptual modeling for novices. The subjects of this study are primarily Grade 9 students in secondary school who are enrolled in compulsory education. This study relies heavily on model-driven development (MDD) and a domain-specific language (DSL). Using MDD, learners are not asked to write code, but rather to create a model to evaluate their model by observing the behavior of the target device. Teachers can control the difficulty of the problems assigned to their students by using a DSL. In this study, we describe our research approach using MDD and a DSL and then show our experiment design and results. We also discuss the qualitative and qualitative effectiveness of UML programming in Technology class for Grade 9 students.},
  keywords={Vocabulary;Unified modeling language;Encoding;DSL;Task analysis;Engineering education;Programming profession;technology/engineering education;computational thinking;UML programming;conceptual modeling},
  doi={10.1109/EDUCON52537.2022.9766752},
  ISSN={2165-9567},
  month={March},}@INPROCEEDINGS{9368487,
  author={Ong, Sing Ling and Ling, Jill Pei Wah},
  booktitle={2020 IEEE International Conference on Teaching, Assessment, and Learning for Engineering (TALE)}, 
  title={Low-Cost Educational Robotics Car Promotes STEM Learning and 21st Century Skills}, 
  year={2020},
  volume={},
  number={},
  pages={467-473},
  abstract={Robotics is now increasingly popular in the education system worldwide as it is one of the core technology enablers for Industry 4.0. Robotics is deemed to be able to promote students' STEM interest and 21st century skills. However, not all the students have the access to robotics, especially in Sibu, East Malaysia. This research presents the implementation of a low-cost Maker Uno educational robotics kit and its associated learning experience of the learners, which were seventy-six Foundation in Science (FIS) students in University College of Technology Sarawak (UCTS). The aim of this study is to investigate the students' empirical STEM robotics learning experience by offering them an opportunity to explore a low-cost self-assembled robotics car. Questionnaire and interviews that constitute a mixed method research were employed to investigate the present situation and derive at a solution to the problem. The findings showed that the proposed robotics activities were beneficial for the students to exercise 21st century skills and cultivate STEM interests. Educators could potentially benefit from applying this robotics pedagogical exemplary to help the students to cultivate STEM interests and 21st century skills. Future research on innovation exemplary, particularly on low-cost robotics applications and robotics education methods can be explored.},
  keywords={Service robots;Engineering profession;Education;Collaboration;Automobiles;Interviews;Robots;21st century skills;computational thinking;low-cost robotics;STEM learning;Maker Uno/Arduino Uno},
  doi={10.1109/TALE48869.2020.9368487},
  ISSN={2470-6698},
  month={Dec},}@INPROCEEDINGS{9932989,
  author={Drivas, Thanassis and Doukakis, Spyridon},
  booktitle={2022 7th South-East Europe Design Automation, Computer Engineering, Computer Networks and Social Media Conference (SEEDA-CECNSM)}, 
  title={Introducing the Fundamentals of Artificial Intelligence to K-12 Classrooms According to Educational Neuroscience Principles}, 
  year={2022},
  volume={},
  number={},
  pages={1-7},
  abstract={The rise of Artificial Intelligence (AI) has brought to the fore the need to educate students about AI. The aim is not to keep AI a black box and at the same time to be recognized as a transferable literacy with multiple learning benefits per age group of students. In order to strengthen this perspective, the design of workshops to introduce the basics of artificial intelligence to middle school students according to educational neuroscience principles is presented. With these workshops, the importance of AI literacy is emphasized, and students are given space for hands-on activities. The proposals are based on the axes of perception, representation and reasoning, learning, physical interaction, and social impact and include sections on Introduction to Machine Learning, Machine Learning Application Examples, Supervised Learning, and Training-Test Processes, Unsupervised Learning, and Machine Learning Algorithms.},
  keywords={Training;Neuroscience;Machine learning algorithms;Social networking (online);Conferences;Supervised learning;Organizations;Artificial Intelligence;K-12 Education;Machine Learning;Computing Education;Workshops;Computational Thinking;Educational Neuroscience},
  doi={10.1109/SEEDA-CECNSM57760.2022.9932989},
  ISSN={},
  month={Sep.},}@INPROCEEDINGS{9763976,
  author={Pedersen, Bjarke Kristian Maigaard Kjaer and Larsen, Jorgen Christian and Nielsen, Jacob},
  booktitle={2021 IEEE Integrated STEM Education Conference (ISEC)}, 
  title={Understanding electronics and CT in school - a simplified method for drawing and building electronic circuits for the micro:bit and breadboards}, 
  year={2021},
  volume={},
  number={},
  pages={99-106},
  abstract={Worldwide we see an increasing focus on implementing STEM, CT and Educational Robotics, within K-12 curricula and the British BBC and the Danish DR, have provided more than one-million pupils with the micro:bit technology. However, research show that breadboards and circuit diagrams, can be difficult to understand. In this paper, we have evaluated a set of tools and materials - designed to support the teaching of electronics and CT, for use with micro:bits, breadboards and circuit diagrams - by integrating them in a case study of a robotics course for 7th grade primary school pupils (n=21). The tools and materials consist of 3D-printable covers designed to visualize the internal connections of a breadboard, and a new type of circuit diagrams, incorporating visual cues from the these, into their designs. Results show that the tools and materials ease the learning of the breadboard and of how to use and interpret circuit diagrams. Furthermore, the tools and materials, have been made available free of charge.},
  keywords={Deep learning;Visualization;Education;Breadboard;Software;Libraries;Pupils;K-12;STEM;Educational Robotics;Computational Thinking;micro:bit;breadboard.},
  doi={10.1109/ISEC52395.2021.9763976},
  ISSN={2330-331X},
  month={March},}@INPROCEEDINGS{8658534,
  author={Almeida, Ricardo and Pessoa, Teresa and Gomes, Anabela},
  booktitle={2018 IEEE Frontiers in Education Conference (FIE)}, 
  title={Learning to think like a trainer: bringing Scratch for Educational Sciences professional’s formation}, 
  year={2018},
  volume={},
  number={},
  pages={1-7},
  abstract={This Research to Practice Full Paper presents a study proposal with the intent of knowing Scratch potential in Educational Sciences students' training. In this study, we analyse, through different phases, using Kirkpatrick Evaluation Model (KEM), the benefits of Scratch inclusion in Educational Sciences degree and in its students' future professional activities. In this work an action-investigation methodology is used. This investigation will allow to improve the education curriculum at different levels, in a technological way, with impact on the teaching and learning process, involving students and teachers of all levels. In higher education this software has been especially associated with programming and computing disciplines as a tool for motivating students or as a learning facilitator. This work presents not only an innovative approach of the Scratch utilization, the improvement of learning skills and competences of design regarding the production of educational materials, but also its use in a new area - the idea of a programmer-educator concept. This paper also presents a pre-study regarding the necessary skills to the use of Scratch and its use among first level students focusing in their satisfaction and motivation for this software use.},
  keywords={Training;Tools;Programming profession;Software;Computer languages;Scratch;Educational Sciences;ICT;Programmer-Educator;Computational Thinking},
  doi={10.1109/FIE.2018.8658534},
  ISSN={2377-634X},
  month={Oct},}@INPROCEEDINGS{8725207,
  author={Gross, Sebastian and Park, Eomji and Pickl, Annette and Storck, Tim},
  booktitle={2019 IEEE Global Engineering Education Conference (EDUCON)}, 
  title={K-12 School/Industry Partnership for Modeling and Simulation}, 
  year={2019},
  volume={},
  number={},
  pages={1241-1249},
  abstract={In this paper we present the multi-year collaboration between Rupprecht-Gymnasium München, a preuniversity school (K-12) in Bavaria, Germany, and MathWorks, an international scientific computing company. The school is STEM-focused and a member of the German national STEM school excellence network MINT-EC; they prepare students aged 10 to 18 for university careers. We highlight the starting motivation for the partners and describe several building blocks and initiatives including curricular and extracurricular activities for students as well as teacher training that became part of the collaboration. We also discuss future steps for the partners and how this project could be transferred to other schools.},
  keywords={Mathematical model;Matlab;Software packages;Collaboration;Seminars;Computational modeling;STEM;K-12;pre-university;STEM;modeling;simulation;engineering tools;collaboration;computational thinking},
  doi={10.1109/EDUCON.2019.8725207},
  ISSN={2165-9567},
  month={April},}@INPROCEEDINGS{10500601,
  author={Cabrera, Ronny and Carrión, Andrea and Huerta, Mónica},
  booktitle={2024 IEEE World Engineering Education Conference (EDUNINE)}, 
  title={A Scoping Review and Bibliometric Analysis of BBC Micro:Bit Research}, 
  year={2024},
  volume={},
  number={},
  pages={1-6},
  abstract={According to UNESCO, the use of technology in education can enhance the quality of education and increase access to education worldwide. One of the technological devices that has gained popularity in education in recent years is the BBC micro:bit. This device has been used as an educational tool to teach programming and technology to students of all ages. This paper combines a scoping review and bibliometric analysis to map and analyze the literature on the implementation of the BBC micro:bit in primary and secondary education. A total of 274 authors have published 95 documents with an average of 2.88 co-authors per document. The integration of BBC micro:bit in education has allowed for the adoption of various teaching strategies and methodologies, enriching the learning experience of students. Overall, this study provides a better understanding of the literature on the BBC micro:bit and its research landscape in an educational context.},
  keywords={Technological innovation;Reviews;Shape;Education;Bibliometrics;Social sciences;Problem-solving;BBC micro;bit;Education;Teaching;Learning;Computational thinking;Bibliometric analysis},
  doi={10.1109/EDUNINE60625.2024.10500601},
  ISSN={},
  month={March},}@INPROCEEDINGS{9453972,
  author={Michaeli, Tilman and Romeike, Ralf},
  booktitle={2021 IEEE Global Engineering Education Conference (EDUCON)}, 
  title={Developing a Real World Escape Room for Assessing Preexisting Debugging Experience of K12 Students}, 
  year={2021},
  volume={},
  number={},
  pages={521-529},
  abstract={Debugging code is a central skill in learning to program. Nevertheless, debugging poses a major hurdle in the K12 classroom, as students are often rather helpless and rely on the teacher hurrying from one student-PC to the other. Despite this, debugging is an underrepresented topic in the classroom as well as in computer science education research, as only few studies, materials and concepts discuss the explicit teaching of debugging. According to the constructivist learning theory, teaching and developing concepts and materials for the classroom have to take learners' preexisting experience into account. Students' preexisting debugging experience is built through troubleshooting, where they frequently find and fix errors in their daily lives - before they learn to program - for example when repairing their bicycle or if “the internet” stops working. Debugging is a special case of general troubleshooting and shares common characteristics, such as the overall process or particular strategies. Thus, the aim of this study is to develop an instrument for assessing preexisting debugging experience in the form of a real-world escape room consisting of debugging-related troubleshooting tasks. This allows us to observe students' troubleshooting process, strategies, and overall behavior in a natural environment and thus assess preexisting debugging experience. To this end, a design-based research process was conducted and a real-world escape room consisting of various troubleshooting tasks was developed. Those tasks and the escape room setting provide an innovative methodological approach to study students troubleshooting behavior and assess their preexisting debugging experience.},
  keywords={Systematics;Instruments;Conferences;Debugging;Bicycles;Computer science education;Task analysis;debugging;troubleshooting;escape room;computer science education;K12;computational thinking},
  doi={10.1109/EDUCON46332.2021.9453972},
  ISSN={2165-9567},
  month={April},}@INPROCEEDINGS{9071071,
  author={Winter, Victor and Love, Betty and Friend, Michelle and Matthews, Michael},
  booktitle={2019 International Conference on Computational Science and Computational Intelligence (CSCI)}, 
  title={A Computer Scientist Teaches Gen Ed Math}, 
  year={2019},
  volume={},
  number={},
  pages={793-799},
  abstract={A nationwide effort is underway to provide students pursuing higher education with options for satisfying general education (gen ed) math requirements. Within the context of this effort, computer science has an opportunity to introduce students to programming fundamentals and computer science principles while also satisfying gen ed math requirements. This paper is an experience report that describes initial efforts at the University of Nebraska-Omaha in piloting a course, satisfying the gen ed math requirements for non-STEM majors, whose content spans computer science, mathematics as well as the visual arts.},
  keywords={Art;Algebra;Cognition;Education;Programming profession;mathematical thinking, computational thinking, spatial reasoning, computer programming, visual arts},
  doi={10.1109/CSCI49370.2019.00151},
  ISSN={},
  month={Dec},}@INPROCEEDINGS{10481204,
  author={Lee, Chien-Sing},
  booktitle={2023 18th International Conference on Intelligent Systems and Knowledge Engineering (ISKE)}, 
  title={Developing a Knowledge-Requirements Engineering Framework towards Transformative Metaverses/(Eco)Systems/Ecologies}, 
  year={2023},
  volume={},
  number={},
  pages={1-8},
  abstract={Sustainability and circular economy are promoted by the UNSDGs. However, UNEP has suggested localization prior to development, and harmonization, to aggregate impacts across spatial scales and across different taxonomic groups, applicable to all resources, to address emergent crosscutting issues across regions and models. This study posits that based on design thinking, sustainable investing/asset management theory needs to be situated within societal needs, to cater to differentiated needs, diverse capability maturity levels, and different flavours of reuse. Thus, instantiating from the Knowledge-Requirements Engineering frameworks, this study aims to review, simplify and localize sustainable investing concepts. To cater to different scenarios, a Knowledge-Requirements Engineering-Lifecycle Thinking-Innovation Helixes framework is proposed; intertwining expansive framing and UNEP's intrinsic value, pivoting via instrumental values, localized to cultural values, analogical to online shopping drivers, to enhance absorptive/ multiplicative/ relational capacity/capability, transformative innovations, across SDGs. Hopefully, the framework can interconnect/recommend/transform metaverses/ (eco)systems/ ecologies/assets more reflectively, effectively and efficiently.},
  keywords={Technological innovation;Instruments;Heuristic algorithms;Biological system modeling;Supply chains;Electronic commerce;Cultural differences;metaverse;sustainable investing;UNEP;circular economy;design thinking;Lifecycle Thinking;computational thinking;reform asset management theory;intrinsic;instrumental;cultural values;ontological design potentials;knowledgerequirements engineering},
  doi={10.1109/ISKE60036.2023.10481204},
  ISSN={},
  month={Nov},}
