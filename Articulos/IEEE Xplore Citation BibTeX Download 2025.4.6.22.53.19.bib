@ARTICLE{6960872,
  author={Guruswami, Venkatesan and Xia, Patrick},
  journal={IEEE Transactions on Information Theory}, 
  title={Polar Codes: Speed of Polarization and Polynomial Gap to Capacity}, 
  year={2015},
  volume={61},
  number={1},
  pages={3-16},
  abstract={We prove that, for all binary-input symmetric memoryless channels, polar codes enable reliable communication at rates within an additive gap  $ \varepsilon > 0$  to the Shannon capacity with a block length, construction complexity, and decoding complexity, all bounded by a polynomial in  $1/ \varepsilon $ . Polar coding gives the first known explicit construction with rigorous proofs of all these properties; previous constructions were not known to achieve capacity with less than  $\exp (1/ \varepsilon )$  decoding complexity except for erasure channels. We establish the capacity-achieving property of polar codes via a direct analysis of the underlying martingale of conditional entropies, without relying on the martingale convergence theorem. This step gives rough polarization (noise levels  $\approx \varepsilon $  for the good channels), which can then be adequately amplified by tracking the decay of the channel Bhattacharyya parameters. Our effective bounds imply that polar codes can have block length (and encoding/decoding complexity) bounded by a polynomial in  $1/ \varepsilon $ . The generator matrix of such polar codes can be constructed in polynomial time by algorithmically computing an adequate approximation of the polarization process.},
  keywords={Decoding;Error probability;Polynomials;Entropy;Convergence;Complexity theory;Capacity planning;Information theory;error-correction codes;linear codes;Channel polarization;entropy;maximum likelihood decoding;symmetric capacity},
  doi={10.1109/TIT.2014.2371819},
  ISSN={1557-9654},
  month={Jan},}@ARTICLE{7365445,
  author={Cheraghchi, Mahdi and Guruswami, Venkatesan},
  journal={IEEE Transactions on Information Theory}, 
  title={Capacity of Non-Malleable Codes}, 
  year={2016},
  volume={62},
  number={3},
  pages={1097-1118},
  abstract={Non-malleable codes, introduced by Dziembowski et al., encode messages s in a manner, so that tampering the codeword causes the decoder to either output s or a message that is independent of s. While this is an impossible goal to achieve against unrestricted tampering functions, rather surprisingly non-malleable coding becomes possible against every fixed family P of tampering functions that is not too large (for instance, when I≤I 22αn for some α <; 1, where n is the number of bits in a codeword). In this paper, we study the capacity of non-malleable codes, and establish optimal bounds on the achievable rate as a function of the family size, answering an open problem from Dziembowski et al. Specifically, We prove that for every family P with IFI I≤I 22αn, there exist non-malleable codes against P with rate arbitrarily close to 1-α [this is achieved with high probability (w.h.p.) by a randomized construction]. We show the existence of families of size exp(nO(1)2αn) against which there is no non-malleable code of rate 1 - α (in fact this is the case w.h.p for a random family of this size). We also show that 1 - α is the best achievable rate for the family of functions, which are only allowed to tamper the first αn bits of the codeword, which is of special interest. As a corollary, this implies that the capacity of non-malleable coding in the split-state model (where the tampering function acts independently but arbitrarily on the two halves of the codeword, a model which has received some attention recently) equals 1/2. We also give an efficient Monte Carlo construction of codes of rate close to 1 with polynomial time encoding and decoding that is non-malleable against any fixed c > 0 and family P of size 2nc, in particular tampering functions with, say, cubic size circuits.},
  keywords={Encoding;Decoding;Monte Carlo methods;Computer science;Cryptography;Electronic mail;Probabilistic logic;Cryptography;cryptographic protocols;codes;privacy;data security;Cryptography;cryptographic protocols;codes;privacy;data security},
  doi={10.1109/TIT.2015.2511784},
  ISSN={1557-9654},
  month={March},}@INPROCEEDINGS{9576399,
  author={Broll, Brian and Lédeczi, Ákos and Stein, Gordon and Jean, Devin and Brady, Corey and Grover, Shuchi and Catete, Veronica and Barnes, Tiffany},
  booktitle={2021 IEEE Symposium on Visual Languages and Human-Centric Computing (VL/HCC)}, 
  title={Removing the Walls Around Visual Educational Programming Environments}, 
  year={2021},
  volume={},
  number={},
  pages={1-9},
  abstract={Many block-based programming environments have proven to be effective at engaging novices in learning programming. However, most restrict access to the outside world, limiting learners to commands and computing resources built in to the environment. Some allow learners to drag and drop files, connect to sensors and robots locally or issue HTTP requests. But in a world where most of the applications in our daily lives are distributed (i.e., their functionality depends on communicating with other programs or accessing resources and data on the internet), the lack of support for beginners to envision and create such distributed programs is a lost opportunity. This paper argues that it is not only feasible, but crucial, to create environments with simple yet powerful abstractions that open up distributed computing and other widely used but advanced computing concepts including networking, the Internet of Things, and cybersecurity to novices. By thus removing the walls around our environments, we can expand opportunities for learning considerably: programs can access a wealth of online data and web services, and communicate with other projects. Moreover, these changes can enable young learners to collaborate with each other during program construction whether they share their physical location or study remotely. Importantly, providing access to the wider world will also help counter widespread student perceptions that block-based environments are mere toys, and show that they are capable of creating compelling applications. The paper presents NetsBlox, a programming environment that supports these ideas and shows that tools can be designed to democratize access to powerful ideas in computing.},
  keywords={COVID-19;Visualization;Codes;Educational robots;Web services;Toy manufacturing industry;Distributed databases},
  doi={10.1109/VL/HCC51201.2021.9576399},
  ISSN={1943-6106},
  month={Oct},}@ARTICLE{8907854,
  author={Jia, Menghan and Yu, Wangyang and Zhai, Xiaojun and Saha, Sangeet},
  journal={IEEE Access}, 
  title={Modeling and Analysis of First Aid Command and Dispatching System of Cloud Medical System}, 
  year={2019},
  volume={7},
  number={},
  pages={168752-168758},
  abstract={Nowadays, with the phenomenon of the world ageing getting serious, the demand for intelligent medical treatment becomes higher than past. A series of smart bracelets have been launched for the health of the elderly, which can detect the health condition of the elderly in real-time. When an abnormal phenomenon occurs and the rescue will be needed, it can transmit the signal to the medical platform of the hospital or the mobile phone of its guardian, and then the hospital would send an ambulance and relevant doctors to rescue the patient. This paper mainly studies the starting bracelet sensors to collect data to rescue behavior of the entire process, proposes a Petri net model of distributed resource allocation based on cloud medical system. Through the structural analysis of the model and the construction of the algorithm, the rationality and efficiency of the whole system model are verified, and the case study shows that the model can effectively find the optimal scheduling path and each part of the system can respond well.},
  keywords={Cloud computing;Petri nets;Analytical models;Hospitals;Optimal scheduling;Monitoring;Real-time systems;Cloud medical system;emergency scheduling;Petri net},
  doi={10.1109/ACCESS.2019.2954451},
  ISSN={2169-3536},
  month={},}@ARTICLE{10636140,
  author={Pirzado, Farman Ali and Ahmed, Awais and Mendoza-Urdiales, Román Alejandro and Terashima-Marin, Hugo},
  journal={IEEE Access}, 
  title={Navigating the Pitfalls: Analyzing the Behavior of LLMs as a Coding Assistant for Computer Science Students—A Systematic Review of the Literature}, 
  year={2024},
  volume={12},
  number={},
  pages={112605-112625},
  abstract={In recent years, large language models (LLMs) have been employed significantly in different domains of computing education. Nevertheless, these models have been focused on essential adherence to their integration as coding assistants in computing education. However, attention has been switched to thoroughly examining and analyzing LLM behavior, particularly in computing education for programming tasks such as code generation, code explanation, and programming error message explanation. Therefore, it becomes imperative to understand their behavior to examine potential pitfalls. This article addresses this gap systematically and details how different LLM-based coding chatbots, such as ChatGPT, Codex, Copilot, and others, react to various coding inputs within computing education. To achieve this objective, we collected and analyzed articles from 2021 to 2024, and 72 studies were thoroughly examined. These objectives include investigating the existing limitations and challenges associated with utilizing these systems for coding tasks, assessing their responses to prompts containing coding syntax, examining the impact of their output on student learning, and evaluating their performance as debugging tools. The findings of this review highlight that it is premature to incorporate these systems into computing education due to their limitations that may limit their effectiveness as comprehensive coding assistants for computer science students. These limitations include issues with handling prompts containing code snippets, potential negative impacts on student learning, limited debugging capabilities, and other ineffectiveness. The finding also reports multiple research directions that can be considered in future research related to LLMs in computing education.},
  keywords={Codes;Encoding;Chatbots;Programming profession;Task analysis;Surveys;Large language models;Computer science education;Error analysis;Large language models;computing education;code generation;code explanation;programming error messages explanation},
  doi={10.1109/ACCESS.2024.3443621},
  ISSN={2169-3536},
  month={},}@INPROCEEDINGS{7739687,
  author={Xie, Benjamin and Abelson, Hal},
  booktitle={2016 IEEE Symposium on Visual Languages and Human-Centric Computing (VL/HCC)}, 
  title={Skill progression in MIT app inventor}, 
  year={2016},
  volume={},
  number={},
  pages={213-217},
  abstract={This paper contributes to the growing body of research that attempts to measure online, informal learning. We analyze skill progression in MIT App Inventor, an informal online learning environment with over 5 million users and 15.9 million projects/apps created. Our objective is to understand how people learn computational thinking concepts while creating mobile applications with App Inventor. In particular, we are interested in the relationship between the progression of skill in using App Inventor functionality and in using computational thinking concepts as learners create more apps. We model skill progression along two dimensions: breadth and depth of capability. Given a sample of 10,571 random users who have each created at least 20 apps, we analyze the relationship between demonstrating domain-specific skills by using App Inventor functionality and generalizable skills by using computational thinking concepts. Our findings indicate that domain-specific and generalizable skills progress similarly; there is a common pattern of expanding breadth of capability by using new skills over the first 10 projects, then developing depth of capability by using previously introduced skills to build more sophisticated apps.},
  keywords={Trajectory;Computational modeling;Programming;Atmospheric measurements;Particle measurements;Vocabulary;Analytical models},
  doi={10.1109/VLHCC.2016.7739687},
  ISSN={1943-6106},
  month={Sep.},}@INPROCEEDINGS{7296518,
  author={Erete, Sheena and Pinkard, Nichole and Martin, Caitlin K. and Sandherr, Jim},
  booktitle={2015 Research in Equity and Sustained Participation in Engineering, Computing, and Technology (RESPECT)}, 
  title={Employing narratives to trigger interest in computational activities with inner-city girls}, 
  year={2015},
  volume={},
  number={},
  pages={1-1},
  abstract={There has been a well-documented and persistent drop in the number of women in computer science and engineering courses [1]. Young peoples' decisions about participation often start early and have been linked to particular experiences [2]. For some young people, these experiences are less than encouraging. In the US, high school computer science courses are overwhelmingly male dominated [3]. Schools serving minority students and those from lower socioeconomic backgrounds often struggle to even offer such classes [4]. Even when opportunities exist, many girls and underrepresented populations face barriers such as negative stereotypes and dearth of role models and community [5]. The Digital Youth Divas program was created to address these issues through intentional design. The program is developed to trigger situational interest [6] in girls through a combination of community, project-based instruction, on- and offline learning spaces, and narrative stories. Triggered situational interest is critical as an opening to move on to subsequent phases that are more independent of environmental factors. Understanding potential effective triggers for girls, minorities, and youth from lower socioeconomic backgrounds is critical to engaging such populations in STEM learning. (1) Community: Middle school girls interested in fashion and design are recruited, especially from areas that have traditionally been underserved. Adult mentors who are not engineers, but share cultural connections with the girls and have gone through curriculum and pedagogical training, attend to specific practices of encouraging, helping to troubleshoot, and developing community. (2) Project-based instruction: The program combines principles of fashion, design, and dance with the power and possibilities of electronic circuits and programming to develop interactive e-fashion projects and virtual programmed choreographies. Scaffolded challenges work through stages of design and computational thinking, including paper prototyping, implementation, feedback, and revision. (3) Integrated on and offline learning spaces: Girls work through projects in a shared physical space using supplied materials. An online system, iRemix, is the mechanism for independent work and leveling up. (4) Interactive narrative stories: Narratives can provide context that helps relate abstract concepts to real-world issues [7], increase motivation and positively contribute to girls' science identity [8], and provide focus for design by communicating tasks, specifically when readers can identify with the stories [9]. Compelling stories conveyed in text and multimedia (video, audio, images) is employed to engage middle school girls in activities involving computational thinking. The stories center on a group of middle school girls involved in the Digital Youth Divas program, and combines aspects of contemporary young adult fiction (mystery, social and emotional issues) with content, topics, and project work from the e-textiles and programming curricula. The interactive narratives unfold through the iRemix platform: girls launch narratives and at intervals are prompted to engage in project-based work. The girls solve challenges by submitting work online, and receive and respond to messages from characters. Our early exploratory research suggested that narratives prompted discussions of identity, and contributed to participant interest in the program content and motivation to engage in project work.},
  keywords={Physics;Statistics;Sociology;Computational modeling;User experience;Training;Textiles},
  doi={10.1109/RESPECT.2015.7296518},
  ISSN={},
  month={Aug},}@INPROCEEDINGS{4402039,
  author={Karci, Ali},
  booktitle={2007 IEEE International Conference on Computational Cybernetics}, 
  title={Human Being Properties of Saplings Growing up Algorithm}, 
  year={2007},
  volume={},
  number={},
  pages={227-232},
  abstract={The human culture and cognition are consequence of the thinking capability of human, and thinking is a social activity. People have similar idea and opinion interacts, and interactions force people to have similar idea and interaction take place locally. However, its effect is global. In this study, we try to determine define the computational thinking for saplings growing up algorithm (SGuA) which belongs to evolutionary algorithms. Thinking capability can be defined based on the process interaction for similar solutions. SGuA has four operators: mating, branching, vaccinating and surviving. We determined the computational thinking capability for each operator. Finally, we determined computational thinking capability of SGuA.},
  keywords={Humans;Cognition;Scattering;Evolutionary computation;Cultural differences;Computer networks;Artificial neural networks;Supervised learning;Unsupervised learning;Semisupervised learning},
  doi={10.1109/ICCCYB.2007.4402039},
  ISSN={},
  month={Oct},}@INPROCEEDINGS{9962737,
  author={Barman, Arko and Beckman, Leslie S. and Chebaro, Yasmin},
  booktitle={2022 IEEE Frontiers in Education Conference (FIE)}, 
  title={Interdisciplinary Computing Education: An Introductory Programming and Data Science Course for Postdoctoral Researchers in the Biosciences}, 
  year={2022},
  volume={},
  number={},
  pages={1-8},
  abstract={This Innovative-Practice Full Paper presents the curriculum development of an introductory course in programming and data science for postdoctoral researchers (PDRs) in the biosciences. The use of computing software has become ubiquitous and a working knowledge of data science has become increasingly essential for researchers in all domains. However, curriculum development focusing on imparting foundational programming skills and fundamentals of data science for researchers in domains other than computing has been scarce. Thus, there is an unmet need for curriculum development involving computational thinking, programming, and the fundamentals of data science for this audience. Recognizing these growing needs and demands of researchers to learn programming and data science that can then be applied to their area of research or practice, we developed an introductory course in programming and data science for PDRs in biology and medicine. The primary goal of the course was to develop computational thinking skills in PDRs who hail from backgrounds that have traditionally not focused on inculcating computational thinking. This course covered the fundamental concepts of programming using either Python or R - languages that researchers outside the computing community use in numerous ways including the statistical analysis of large datasets that are becoming increasingly common in biomedical research. Further, PDRs enrolled in the course were introduced to some of the broad categories of problems in data science - exploratory data analysis, classification, regression, and clustering - along with relevant algorithms and how they can be applied to real-world datasets in their respective domains using packages or libraries in Python or R. We also report the feedback from the enrolled PDRs, lessons learned, and recommendations for instructors interested in designing similar curricula. Our course focusing on computing and data science education for postdoctoral scholars from a non-computing background demonstrates a promising model for incorporating computing education in other areas of study that do not traditionally have a focus on computing education as well as in continuing education.},
  keywords={Statistical analysis;Education;Curriculum development;Focusing;Data science;Software;Libraries;computer science education;interdisciplinary computing education;data science education;continuing education},
  doi={10.1109/FIE56618.2022.9962737},
  ISSN={2377-634X},
  month={Oct},}@INPROCEEDINGS{5508834,
  author={Hurson, Ali R. and Sedigh, Sahra},
  booktitle={2010 IEEE Transforming Engineering Education: Creating Interdisciplinary Skills for Complex Global Environments}, 
  title={Transforming the Instruction of Introductory Computing to Engineering Students}, 
  year={2010},
  volume={},
  number={},
  pages={1-19},
  abstract={Computer science as a discipline encompasses the study and creation of computational techniques for problem-solving. Unfortunately, much of the benefit of these techniques to engineering students is lost in translation, in part due to the disconnect between introductory computing courses and the disciplinary courses that introduce problems that could benefit from computational techniques. A considerable body of literature has documented the ineffectiveness of traditional programming courses in transferring usable knowledge to students, specifically where problem-solving skills and computational thinking are concerned. This paper describes a transformative change to the instruction of introductory computing to engineering students, in the context of a single non-major course. In the proposed architecture, a core lecture is supplemented with plug-in domain-specific modules and problems that are presented in domain-specific recitation/laboratory sections. The focus of the lecture component of the course is to introduce the core concepts and skills required for computational thinking, including algorithms and software engineering techniques. The recitation/laboratory component encourages and guides the application of these skills to introductory problems in engineering. The objective is to shift the emphasis from the minutia of the syntax of textual programming languages to computational thinking.},
  keywords={Computer aided instruction;Engineering students;Problem-solving;Laboratories;Computer science;Computer architecture;Software algorithms;Software engineering;Application software;Computer languages},
  doi={10.1109/TEE.2010.5508834},
  ISSN={},
  month={April},}@INPROCEEDINGS{6826147,
  author={Giordano, Daniela and Maiorana, Francesco},
  booktitle={2014 IEEE Global Engineering Education Conference (EDUCON)}, 
  title={Use of cutting edge educational tools for an initial programming course}, 
  year={2014},
  volume={},
  number={},
  pages={556-563},
  abstract={Programming skills are an important component of an engineering curriculum, not only because they enable the customization of software tools to be used in the profession, but also (and perhaps more crucially) because of the "computational thinking" and problem solving capabilities that are ideally developed by young students who learn to program for the first time. The necessity to expand the computing curriculum across a wider range of schools and university courses for students who are not majoring in Computer Science (CS) ) it is well-documented in literature [1], as is the difficulty of teaching 21st century skills (www.p21.org. This work presents an educational approach to teaching initial programming based on the development of fundamental and transversal skills and computer science skills, including creative and computational thinking as well as problem solving and critical thinking. The approach is based on cutting-edge educational tools, namely the visual programming frameworks Scratch, AppInventor, BYOB, and the well-known C/C++ language; curriculum material is drawn from CSPrinciples pilot courses, CS unplugged, school level preparation material for the International Olympiad in Informatics, and are complemented by supplementary information. The pedagogical approaches used in the course are based on constructivist learning theory, experiential learning and guided inquiry. This paper presents a year-long teaching experience in a 10th/13th grade high school with 14 to 16-year-old students. Ways to extend the experience to a university course are also presented. An initial analysis of the course results, both qualitative (based on two student surveys) and quantitative (based on formal written examinations) is presented and discussed. Results are encouraging, showing how visual programming languages help students to improve their problems solving skills and reasoning practices. Exposing the younger generation to computational concepts is fundamental in order to improve the mastering of these concepts and increase the success rate in university studies.},
  keywords={Educational institutions;Programming profession;Visualization;Problem-solving;Pedagogy;Curriculum design;Initial programming course;Visual programming frameworks},
  doi={10.1109/EDUCON.2014.6826147},
  ISSN={2165-9567},
  month={April},}@INPROCEEDINGS{7044089,
  author={Al-Jarrah, Ahmad and Pontelli, Enrico},
  booktitle={2014 IEEE Frontiers in Education Conference (FIE) Proceedings}, 
  title={"AliCe-ViLlagE" Alice as a Collaborative Virtual Learning Environment}, 
  year={2014},
  volume={},
  number={},
  pages={1-9},
  abstract={There is a growing literature demonstrating the importance of collaboration and teamwork in the process of learning computational thinking and the foundational aspects of computer science. While Collaborative Virtual Environments are becoming widespread in the software development professional domain and in various areas of advanced learning, their use in the introductory stages of learning computing is still very limited. On the other hand, in recent years, there has been a blooming of attractive programming environments specifically designed to expose young students (e.g., middle school age) to computational thinking. Alice is a very popular introductory programming environment, focused on programming through animations and story-telling. This paper introduces a novel extension of the Alice framework that enables interaction and collaboration among students in the development of programs. In particular, the new version of Alice described in this paper provides support for virtual pair programming. The modified version of Alice allows two students to remotely share a virtual world, and interact in its construction; the system supports roles assignments, to allow teachers to control activities and contributions of the two students in the creation of a programming project.},
  keywords={Programming profession;Navigation;Educational institutions;Three-dimensional displays;Teamwork},
  doi={10.1109/FIE.2014.7044089},
  ISSN={2377-634X},
  month={Oct},}@INPROCEEDINGS{7760705,
  author={Jung, Inho and Choi, Jaewoong and Kim, In-Jung and Choi, Changbeom},
  booktitle={2016 15th International Conference on Information Technology Based Higher Education and Training (ITHET)}, 
  title={Interactive learning environment for practical programming language based on web service}, 
  year={2016},
  volume={},
  number={},
  pages={1-7},
  abstract={As the needs of education of programming language increase, the importance of the learning environment has been emphasized. Based on the social trends, various web services for the education of programming which improves the computational thinking of a student. Among the web services, block-based programming languages are well known as an effective educational tool for a primary student though a freshman in the university. These tools are proven to be useful tools since the tools provide same programming environment to the students and the teachers anytime and anywhere. However, the environments may be insufficient for learning practical programming languages, such as C/C++ and Java, because they are not the block-based programming languages. This paper introduces a block-based learning environment for C programming language using web services. The environment fills the gap between building computational thinking and learning the syntax of the programming language. The programming environment provides the equivalent environment to teachers and the students during the programming hands-on.},
  keywords={Computer languages;Programming profession;Visualization;Computers;Programming environments;Education;web-based instruction;visual programming language;problem-based learning;self-motivated learning},
  doi={10.1109/ITHET.2016.7760705},
  ISSN={},
  month={Sep.},}@INPROCEEDINGS{8511891,
  author={Li, Yue and Pan, Yiqing and Liu, Wensheng and Zhang, Xingming},
  booktitle={2018 IEEE 16th Intl Conf on Dependable, Autonomic and Secure Computing, 16th Intl Conf on Pervasive Intelligence and Computing, 4th Intl Conf on Big Data Intelligence and Computing and Cyber Science and Technology Congress(DASC/PiCom/DataCom/CyberSciTech)}, 
  title={An Automated Evaluation System for App Inventor Apps}, 
  year={2018},
  volume={},
  number={},
  pages={230-235},
  abstract={More and more K-12 schools are paying attention to the training of Computational Thinking. A considerable amount of K-12 use blocked-based visual programming platforms such as Scratch, App Inventor, Alice and etc. MIT App Inventor is one of the more popular mobile application visualization programming platforms. Visual programming is based on the 'You see what you get' doctrine. Its simplicity and ease of use coheres with K-12 teaching principles and allows students to access to computational thinking without the burden of learning Coding grammar. Recently App Inventor is gaining momentum and traction in China at a very high speed and is expected to grow even faster in the future. Teachers using App Inventor for teaching face the problem of having to go through a very high number of App Inventor apps without any way to catalogue them. The 2017 Google App Inventor Competition alone received over 1300 entries. This article aims to devise an automated scoring method based on TF-IDF and clustering to help teachers evaluate App Inventor apps, thus greatly reducing their workload. Evaluating the method gives us an 75.42% with space for further improvement in the future.},
  keywords={Clustering algorithms;Programming;Visualization;Mobile applications;Creativity;Education;App Inventor;automated evaluation system},
  doi={10.1109/DASC/PiCom/DataCom/CyberSciTec.2018.00048},
  ISSN={},
  month={Aug},}@INPROCEEDINGS{9481012,
  author={Oprea, Marin and Mocanu, Mariana},
  booktitle={2021 23rd International Conference on Control Systems and Computer Science (CSCS)}, 
  title={Bluetooth Communications in Educational Robotics}, 
  year={2021},
  volume={},
  number={},
  pages={408-413},
  abstract={In a world in a continuous and rapid change, it is absolutely necessary for our students to keep up with the rapid progress of new technologies: Internet of Things (IoT), Robotics, Artificial Intelligence (AI), Virtual Reality (VR), Augmented Reality (AR) etc. The rapid evolution and diversification of these emerging technologies has recently led to their introduction into the educational offer of the school curriculum for the gymnasium. The discipline of Information and Communication Technology (ICT) has already been implemented, a discipline that involves both the formation of skills to use new technologies and the formation of computational thinking necessary for the efficient and intelligent use of these technologies. In order to teach and learn Physics from a STEM (Science, Technology, Engineering and Mathematics) educational perspective, we initiated optional school courses of IoT, Robotics and AI (approached through Machine Learning). These courses stimulate, at the level of students, computational thinking, creativity and innovation and lead, from an interdisciplinary perspective, to the development of emerging specializations such as Mathematics-Physics-Automation, Mathematics-Physics-Electronics, Mathematics-Physics-Informatics-Robotics etc. In this paper we presented a method of approaching, in the school educational space, the study of wireless communication technologies between smart devices, through an Educational Robotics project. The project consisted of creating a wireless controlled mobile robotic platform (robot car) via a Bluetooth module connected to an Arduino Uno board.},
  keywords={Bluetooth;Robot kinematics;Microwave communication;Microwave amplifiers;Information and communication technology;Internet of Things;Smart devices;wireless communication;Arduino Uno;Bluetooth module HC-05;joystick;motor driver L298N},
  doi={10.1109/CSCS52396.2021.00073},
  ISSN={2379-0482},
  month={May},}@INPROCEEDINGS{9273818,
  author={Ke, Fengfeng and Moon, Jewoong and Sokolikj, Zlatko},
  booktitle={2020 IEEE Frontiers in Education Conference (FIE)}, 
  title={Tracking Representational Flexibility Development through Speech Data Mining}, 
  year={2020},
  volume={},
  number={},
  pages={1-4},
  abstract={In this work-in-progress research we exploited and investigated a virtual reality (VR) based, flexibility learning environment (FLE) in which adolescents with autism use, customize, and design an assortment of simulation games that represent and exemplify the application of forces and Newton's laws of motion. The simulation/game modeling and making tasks acted as the primers of practicing and assessing representational flexibility in solving the engineering design problems with computational thinking. The participants' participation behaviors and verbal utterances during the intervention sessions have been archived via screen and webcam recordings. The current study findings indicated that two approaches of speech or text data mining, multi-label classification and similarity index, can act as the in-situ performance assessment methods to evaluate the representational flexibility development for engineering design and computational thinking of a heterogeneous learner group.},
  keywords={Task analysis;Autism;Solid modeling;Data models;Data mining;Training;Indexes;educational data mining;representational flexibility;learning by making;virtual reality},
  doi={10.1109/FIE44824.2020.9273818},
  ISSN={2377-634X},
  month={Oct},}@INPROCEEDINGS{10343283,
  author={Walker, Justice T. and Barany, Amanda and Acquah, Alex and Reza, Sayed Mohsin and Barrera, Alan and Del Rio Guzman, Karen and Johnson, Michael A.},
  booktitle={2023 IEEE Frontiers in Education Conference (FIE)}, 
  title={Coding Like a Data Miner: A Sandbox Approach to Computing-Based Data Science for High School Student Learning}, 
  year={2023},
  volume={},
  number={},
  pages={1-5},
  abstract={Personal health tracking devices and internet-based digital platforms with the capacity to collect, aggregate, and store data at massive scales are examples of tools that have broadened priorities in computing to include data science. In response, there has been growing attention in research and practice emphasizing pre-college groups. This is partly because of the growing recognition-reflected in initiatives like CS4ALL, Code.org, Bootstrap: Data Science, Exploring Computer Science-that learning experiences before college are consequential in sustaining a robust pipeline of computer scientists and engineers. Despite these inroads, there is justifiable concern that existing efforts might not fully support learner development in the necessary conceptual, epistemological, and heuristic styles needed to productively parse and understand “big data.” This is because computing-based curricula that include data science often involve data curated by others (rather than learners directly), which results in simulated versions of practice instead of engagement that is realistically discursive and messy. This is further complicated by the persistent shortage of K-12 computer science teachers in general and even fewer who can design and implement curricula that support authentic engagement with data science. To address these issues, we leverage culturally relevant and constructionist perspectives in a sandbox (i.e., open-ended) science where tools like Scratch and electronic textiles (E-textiles) have had success expanding possibilities in computing to also include activities where learners can engage broadly along varied pursuits-and encounter challenges that spur computational thinking and problem-solving. The literature suggests that learning activities framed in this way encourage knowledge construction, practice literacies, and seriously impact learner attitudes, interest, and perceptions of growth in the field. This latter set of self-concept measures represents a few of many related key predictors of long-term field participation and persistence. In this work-in-progress scholarship of discovery research, we co-develop, with youth and educators, “Coding Like a Data Miner” (CLDM)-a sandbox approach to computing-based data science wherein learners access a social media platform, Twitter, to mine, analyze, and understand quantitative and qualitative data sources. In this preliminary work, we assess affordances in co-developing a curriculum that leverages sandbox approaches to data science. Ultimately (and what will be presented in our final submission), we aim to study learning outcomes when high school students' access, analyze and make sense of “big data” sets of their own. We collaborated with high school teachers in a West Texas/Paso Del Norte region where computer science educators are exceptionally scarce and where there is an urgent and persistent need to support underrepresented learner access to burgeoning areas of computing. Using mixed-methodological approaches (e.g., quantitative analysis of learner pre- and post-survey responses along with qualitative assessments of semi-structured interview data), we address the following research questions: (1) What affordances exist using co-design approaches to develop sandbox data science for pre-college learners? (2) Which computational concepts do students learn when carrying out CLDM activities, (3) Which computational practices do high school students enact when mining, processing, and analyzing big data sets in CLDM? (4) How do learner knowledge and perceptions about data science shift after participating in CLDM? We use contemporary perspectives in computing education, constructionism, and equity to discuss how open-ended sandbox approaches to computing-based data science support learner computational thinking, practice literacies, and field perceptions.},
  keywords={Computer science;Smart textiles;Social networking (online);Statistical analysis;Affordances;Soft sensors;Scholarships;Computer Science Education;Data Science Education;Constructionism;Curriculum Design;Computer Science Learning},
  doi={10.1109/FIE58773.2023.10343283},
  ISSN={2377-634X},
  month={Oct},}@INPROCEEDINGS{8985981,
  author={Lee, Sarah and Ivy, Jessica and Stamps, Andrew},
  booktitle={2019 Research on Equity and Sustained Participation in Engineering, Computing, and Technology (RESPECT)}, 
  title={Providing Equitable Access to Computing Education in Mississippi}, 
  year={2019},
  volume={},
  number={},
  pages={1-4},
  abstract={To maintain competitiveness as a nation, the United States must broaden participation in computing education and career pathways. Integrating computational thinking and computer science in K-12 classrooms is becoming increasingly essential to the development of a responsible and innovative workforce. Further, with increased recognition of the need for computing competency, workforce development programs that target the emerging workforce that may not be on a college pathway and those citizens who want to retool for the digital economy are also essential. This study examines work by researchers and practitioners in Mississippi to engage all public school students and the workforce with computational thinking, computer science concepts, and cybersecurity, providing pathways for learning that make computing education accessible for all citizens. The state of Mississippi has the lowest median wage in the nation, and one of the lowest rates of STEM employment. With half of the public school children identified as African American, and half of them female, there is much opportunity for broadening participation in computing. Assessments from a K-12 teacher professional development programs will be discussed, in addition to outcomes from one year of a workforce development program.},
  keywords={computer science;K-12;workforce development},
  doi={10.1109/RESPECT46404.2019.8985981},
  ISSN={},
  month={Feb},}@INPROCEEDINGS{10578608,
  author={Choi, Wan-Chong and Lam, Chan-Tong and Mendes, António José},
  booktitle={2024 IEEE Global Engineering Education Conference (EDUCON)}, 
  title={How Various Educational Features Influence Programming Performance in Primary School Education}, 
  year={2024},
  volume={},
  number={},
  pages={1-8},
  abstract={In the digital age, programming education has become increasingly important, even in primary schools. However, introducing programming at such an early stage presents unique challenges, given the need for students to grasp mathematical concepts, abstract thinking, and the intricacies of programming syntax. Educational Data Mining (EDM) offers a potential contribution by predicting learning performance, facilitating the optimization of the learning processes, and providing real-time guidance. A notable gap in the current literature about EDM in programming education is its predominant emphasis on the university level. Our research objectives were to identify features influencing primary school students' programming capabilities. A more comprehensive dataset was introduced, incorporating psychometric data and highlighting features such as learning motivation and attitude, computational thinking data, and other potentially influential variables, which set our study apart from previous studies. We found that the strongest predictor was academic performance in Information Technology, followed by psychometric data on students' learning attitudes and motivation. Computational thinking also emerged as a significant feature in predicting programming performance. It's worth highlighting that involvement in extra-curricular activities, like Olympic Mathematics training, showed a significant association, underscoring the importance of mathematical logic and reasoning in programming. This is further bolstered by the evident correlation with academic performance in Mathematics, confirming its pivotal role in shaping programming abilities. Interestingly, the correlation of academic performance in Chinese is also significant, indicating that the language medium of instruction can notably influence success.},
  keywords={Training;Performance evaluation;Computers;Correlation;Syntactics;Mathematics;Cognition;Computer science;Programming Education;Educational Data Mining;Educational features correlation;Performance prediction;Features selection},
  doi={10.1109/EDUCON60312.2024.10578608},
  ISSN={2165-9567},
  month={May},}@INPROCEEDINGS{7943068,
  author={Ng, Peter H. F.},
  booktitle={2017 IEEE Global Engineering Education Conference (EDUCON)}, 
  title={Introducing the practices for adopting the constructivist teaching in game engineering}, 
  year={2017},
  volume={},
  number={},
  pages={1636-1643},
  abstract={In this paper, we are going to present our solid experience in applying constructivism to teach computational thinking and game engineering. Fifty undergraduate students have created nine game based learning applications for a special school in two semesters. This special school caters to children who are severely mentally handicapped, and their day-to-day training consists of repetitive tasks that are designed to help them to express their needs to a certain degree. We will present (1) our timeline and detailed setting of our course which is different from traditional lecture setting. (2) the way to provide situated learning which helps our students to develop better, larger and more linked information. (3) the ways to provide constructivist teaching which helps our students to construct the knowledge of computational thinking and game engineering, so that it can improve their products and have a better interaction with the real world.},
  keywords={Games;Computational modeling;Prototypes;Mathematical model;Training;Computer science;Constructivist teaching;game engineering},
  doi={10.1109/EDUCON.2017.7943068},
  ISSN={2165-9567},
  month={April},}@INPROCEEDINGS{7250352,
  author={Jun, Zhao Yan and Ying, Zhang Chun},
  booktitle={2015 10th International Conference on Computer Science & Education (ICCSE)}, 
  title={Construction of virtual-actual fusion experiment platform: Exploration of University Computer reform in local college}, 
  year={2015},
  volume={},
  number={},
  pages={789-793},
  abstract={Based on present situation analysis of University Computer Foundation Course facing reformation in local college, for the purpose of training computational thinking ability, this paper integrates virtual experiment system into practice teaching link and constructs Virtual-Actual fusion experiment platform. It consists of four parts, such as virtual experiment platform, practical platform, network platform and comprehensive test platform. The platform provides much and enough practice training in the class and outclass for the students, trains computational thinking ability, meanwhile, improves application skills and innovative quality.},
  keywords={Computers;Training;Software;Encoding;Hardware;Computational modeling;University Computer;Virtual-Actual fusion;experiment platform;reform},
  doi={10.1109/ICCSE.2015.7250352},
  ISSN={},
  month={July},}@INPROCEEDINGS{8190558,
  author={Schmeelk, Suzanna and Fontaine, Fred and Ackerman, Larisa and Aho, Alfred},
  booktitle={2017 IEEE Frontiers in Education Conference (FIE)}, 
  title={Learning Java in a New York City immigrant engineer retraining program}, 
  year={2017},
  volume={},
  number={},
  pages={1-7},
  abstract={This research explores the psychology of programming and the pedagogical environment in a certificate granting urban immigrant engineer retraining program in New York City. The program is aimed at teaching under-represented immigrant engineer students to learn how to program in the Java programming language. The programming concepts and the fostered pedagogical environment were implemented in three-hour evening sessions over 15 weeks in which the students were encouraged to develop programming communities while working on computational thinking concept strands. The research findings that we report are threefold. First, we report on how we fostered building programming concepts into the curriculum into a set of activities specifically designed for an immigrant engineer retraining program with students ranging in backgrounds. We found that at that the program curriculum must be flexible enough for student learning regardless of the fact that a student may miss sessions. Second, we report on how an effective pedagogical environment, which fosters student-centered learning, was promoted so that the students could construct their own meanings of the programming concepts. Third, we report on implementation strategies unique to a retraining program, such as specific environmental constraints as well as how sessions were partitioned into components that fostered computational thinking while learning Java. Our findings provide unique insights into intervention constraints for an urban retraining program which can be used to guide and inform further retraining computer learning program research.},
  keywords={Java;Education;Programming profession;Urban areas},
  doi={10.1109/FIE.2017.8190558},
  ISSN={},
  month={Oct},}@INPROCEEDINGS{10343256,
  author={Mendoza Diaz, Noemi V. and Esparza, Allison M. and Rambo-Hernandez, Karen E. and Nepal, Bimal},
  booktitle={2023 IEEE Frontiers in Education Conference (FIE)}, 
  title={Enculturation of Students to Engineering and COVID's Impact Associated}, 
  year={2023},
  volume={},
  number={},
  pages={1-5},
  abstract={Enculturation to engineering is a topic of interest to professional organizations such as ASEE or IEEE. Enculturation can be understood as the process by which students are assimilated into the engineering culture. This culture involves the base knowledge, practices, and values shared by the community of practicing engineers. Both the culture and its assimilation are somewhat obscure and often attributed to role-modeling and hidden curriculum. Nevertheless, undergraduate students are expected to undergo this assimilation process, and by the end of a five-year program, they behave, talk, and do what engineers do. An approach to this process is the well-established model of engineering identity. This model of identity, however, limits its scope to the intrinsic process occurring in the student without paying much attention to the support systems expected to welcome and nurture students into the profession. Enculturation is a relatively new model that proposes both intrinsic and extrinsic factors affecting this assimilation of students. During the Spring of 2022, a team of researchers at a U.S. Southwest institution applied a survey to operationalize the extrinsic factors of a recently outlined engineering model of enculturation to understand the impact of COVID on engineering students. Eight Likert-based questions were asked to 534 engineering undergraduate students at different school year classifications (e.g., sophomore, junior, or senior). The model of enculturation tested eight extrinsic factors involving (1) engineering design, (2) teamwork, (3) engineering profession, (4) ethics, (5) engineering communications, (6) mathematical/physical modeling, (7) problem-solving, and (8) algorithmic/computational thinking. Additional Likert-based questions asked students about the perceived impact of COVID on their educational experience. The research questions guiding their investigation were: (a) How are the dimensions of enculturation to engineering changing across engineering undergraduate classifications?, and (b) How is enculturation associated with the COVID impact on students? Preliminary results show that six of the factors (namely 1–5 and 7) increase by students' school classification. This means that students in the lower years of their undergraduate program perceive their enculturation, as portrayed by factors 1–5 & 7, less than students at more advanced stages of their program. In terms of the perceived impact of COVID, only two factors showed negative correlations with this perceived impact The factors were ethics and algorithmic/computational thinking. In other words, the worse the student's perception of COVID's impact on their educational experience, the less they endorsed their enculturation in the impact of society of their technical solutions and their use of programming languages. While these results show encouraging applicability of the enculturation model, it can only be considered a first approach to a more fully developed model. The researchers expect to engage the FIE community in a discussion leading to a more refined enculturation model.},
  keywords={COVID-19;Surveys;Knowledge engineering;Ethics;Organizations;Mathematical models;Teamwork;Enculturation to engineering;COVID impact;curriculum},
  doi={10.1109/FIE58773.2023.10343256},
  ISSN={2377-634X},
  month={Oct},}@INPROCEEDINGS{10127310,
  author={Hegade, Prakash and Aryan and Shettar, Ashok},
  booktitle={2023 2nd Edition of IEEE Delhi Section Flagship Conference (DELCON)}, 
  title={Effectiveness of Metaphors in Problem Based Learning}, 
  year={2023},
  volume={},
  number={},
  pages={1-6},
  abstract={The paradigm of education has undergone a significant transition from traditional teacher-directed instruction to student-centered problem-based learning. In various contexts, problem-based learning, computational thinking, and metaphor-based learning approaches have been used to deliver an efficacious learning of the concept. This paper puts forward a model and its usage to build metaphor based case studies directing towards cognitive thinking, self-directed learning and lifelong learning. The model directly influences on the problem solving thought process. The paper further presents a case study on application of this model and its effectiveness validated through the embedded design method. The method appears to be effective in from model analysis and feedback collected. This directly connects to the pattern recognition paradigm of the computational thinking process.},
  keywords={Analytical models;Computational modeling;IEEE Sections;Design methodology;Buildings;Education;Pattern recognition;design;metaphors;pattern recognition;problem based learning},
  doi={10.1109/DELCON57910.2023.10127310},
  ISSN={},
  month={Feb},}@INPROCEEDINGS{10935485,
  author={Zheng, Yunping and Chen, Haowen and Liu, Jie},
  booktitle={2024 14th International Conference on Information Technology in Medicine and Education (ITME)}, 
  title={A Teaching Innovative Model of C++ Based on Outcome-Based Education (OBE) and Integration of ACM Competition and Teaching}, 
  year={2024},
  volume={},
  number={},
  pages={799-803},
  abstract={Aiming at the main problems of the traditional C++ course teaching, in this paper, a C++ teaching innovation model based on the concept of the Outcome-Based Education (OBE) and the integration of the ACM competition and teaching is proposed based on the background of the era of the New Engineering. It takes the problem-solving and the live code as the main teaching line, takes the information technology teaching as the means, promotes the students’ integration of the theory and practice by the ACM/ICPC competition, and organically combines the process assessment and the final assessment, and implements the diversified assessment forms. For theoretical teaching, the authors put forward an innovative model of C++ teaching based on the concept of the OBE and the combination of the ACM competition and teaching. For practical teaching, the authors designed a keyword-oriented OJ system to address the problem of the large differences in the programming ability among the students. For the course assessment, the authors designed a C++ multi-topic intelligent online examination system. The results of more than ten years’ practical teaching show that the innovative model of the C++ teaching based on the OBE concept and the ACM competition has effectively cultivated the students’ computational thinking and significantly improved their programming ability and innovation ability. In the past ten years, our students won many ACM/ICPC prizes. At present, this teaching innovation model has been effectively promoted and applied in three campuses of our university. It has a certain leading and exemplary role in cultivating the top-notch innovative talents in the field of the computer science with the excellent professional programming ability, computational thinking, the national sentiment, the global vision and the all-round development.},
  keywords={Technological innovation;Codes;Computational modeling;Education;C++ languages;Problem-solving;Information technology;Programming profession;OBE (Outcome-Based Education);ACM/ICPC;C++;teaching innovative model},
  doi={10.1109/ITME63426.2024.00161},
  ISSN={2474-3828},
  month={Sep.},}
