@INPROCEEDINGS{8658572,
  author={Lobo de Aguiar Gomes, Ludymila and Reginaldo Hughes Carvalho, Jos√© and Lauschner, Tanara and Nakamura, Fabilo G. and de Freitas, Rosiane},
  booktitle={2018 IEEE Frontiers in Education Conference (FIE)}, 
  title={Encouraging Women to Pursue a Computer Science Career in the Context of a Third World Country}, 
  year={2018},
  volume={},
  number={},
  pages={1-5},
  abstract={This innovative practice full paper presents a set of engaging actions aimed to encourage women to pursue a Computer Science career in a city of a third world country (Manaus, Brazil). Despite worldwide efforts to promote gender equality, typically, women account for less than 30% of the workforce in technological areas. In third world countries, the situation is much more unbalanced. Poor educational and economic conditions, allied with a chauvinism culture contaminated by sexism and stereotypes, are strong forces that repel the young girls from IT areas. As a result, the percentage of women in local Computer Science majors is lower than expected. The authors detail a program to involve girls from all school levels in computer science career, which is indeed the adaptation of a national program, combined with indigenous elements. The mentioned adaptation was a key success factor to catch the attention of students and local educators. Some activities that are included in this program are lectures at scientific, technological and gender discussion events, realization of dynamics in schools for the dissemination of computational thinking in children and young students, training students to take part in programming contests and develop knowledge into real computational applications. These actions resulted in highlights achieved in programming contests and prizes obtained through application development, and have provided a more conducive academic environment to discuss issues related to the female gender in science and technology fields. Besides the fundamentals of the program, the authors present the results of the last three initiatives, which happened in conjunction with local events, and the promising opportunities perceived in Computer Science major of a local university.},
  keywords={Engineering profession;Conferences;Programming profession;STEM;gender equality;diversity politics, STEM education;women inclusion and leadership},
  doi={10.1109/FIE.2018.8658572},
  ISSN={2377-634X},
  month={Oct},}@ARTICLE{10005170,
  author={Peterson, Tina L. and Ferreira, Rodrigo and Vardi, Moshe Y.},
  journal={IEEE Transactions on Technology and Society}, 
  title={Abstracted Power and Responsibility in Computer Science Ethics Education}, 
  year={2023},
  volume={4},
  number={1},
  pages={96-102},
  abstract={As computing becomes more powerful and extends the reach of those who wield it, the imperative grows for computing professionals to make ethical decisions regarding the use of that power. We propose the concept of abstracted power to help computer science students understand how technology may distance them perceptually from consequences of their actions. Specifically, we identify technological intermediation and computational thinking as two factors in computer science that contribute to this distancing. To counter the abstraction of power, we argue for increased emotional engagement in computer science ethics education, to encourage students to feel as well as think regarding the potential impacts of their power on others. We suggest four concrete pedagogical approaches to enable this emotional engagement in computer science ethics curriculum, and we share highlights of student reactions to the material.},
  keywords={Ethics;Computer science education;Writing;Cognition;Codes;Philosophical considerations;Social implications of technology;Curriculum development;Social factors;Power;abstraction;responsibility;social impact;emotional engagement;ethics},
  doi={10.1109/TTS.2022.3233776},
  ISSN={2637-6415},
  month={March},}@INPROCEEDINGS{6220928,
  author={Izurieta, Clemente and Poole, Geoffrey and Payn, Robert A. and Griffith, Isaac and Nix, Ryan and Helton, Ashley and Bernhardt, Emily and Burgin, Amy J.},
  booktitle={2012 International Conference on Information Science and Applications}, 
  title={Development and Application of a Simulation Environment (NEO) for Integrating Empirical and Computational Investigations of System-Level Complexity}, 
  year={2012},
  volume={},
  number={},
  pages={1-6},
  abstract={Network Exchange Objects (NEO) is a new software framework designed to facilitate development of complex natural or built distributed system models, where the system model is represented as a graph, through which currencies (e.g., coding information) flux. This paper introduces "system-level hypothesis (SLH) testing" as a form of computational thinking that will drive integration of computational and empirical sciences to promote efficient, self- correcting inquiry into the operations and behavior of complex systems. To demonstrate NEO, we examine the problem of maximizing the productivity of a software development organization by measuring growth in the total lines of code (LOC) contributed by developers. We develop a software framework (NEO) that allows rapid creation of model variants representing alternative SLHs. NEO is designed to investigate systems we describe as "complex adaptive hierarchical networks" (CAHNs - complex systems represented as networks that route and store multiple interactive currencies). Models built atop NEO, are organized collections of individual values (model variables) and algorithms (model logic). Modelers systematically combine algorithms to create alternative model formulations at runtime. Thus, NEO is a simulation framework that can be used in any domain of expertise, where systems are represented as interdependent entities that store and flux multiple currencies.},
  keywords={Organizations;Heuristic algorithms;Mathematical model;Complexity theory;Object oriented modeling;Topology;Biological system modeling},
  doi={10.1109/ICISA.2012.6220928},
  ISSN={2162-9048},
  month={May},}@INPROCEEDINGS{10143930,
  author={Hsu, Ting-Chia and Hsu, Tai-Ping and Lin, Yi-Ting},
  booktitle={2023 International Conference on Artificial Intelligence and Education (ICAIE)}, 
  title={The Artificial Intelligence Learning Anxiety and Self-Efficacy of In-Service Teachers Taking AI Training Courses}, 
  year={2023},
  volume={},
  number={},
  pages={97-101},
  abstract={This research explored the degree of learning self-efficacy of machine learning experience (MLSE) and artificial intelligence learning anxiety (AILA) of elementary and junior high school teachers. The participants were in-service teachers in the technology domain. This research applied the AI2 Robot City, which is a computational thinking board game, to in-service teacher education. The learning content was image classification for AI application. Elementary and junior high school teachers operated the MIT App Inventor(MAI) and Personal Image Classifier(PIC) platform, and trained the model for practicing AI to implement supervised machine learning on the PIC platform. The learners then inserted the model they had trained into the block-based programming environment of MAI. They completed the smart phone app and used the app to recognize the board game cards so as to control the movement of the smart cars on the table map to meet the requirements of the task in the AI2 Robot City board game. In order to understand affective factors such as the self-efficacy and learning anxiety of the elementary and middle school teachers participating in the AI teacher training workshop, the MLSE and AILA scales were administered before and after the classes. A total of 28 samples were collected. The results showed that there was no significant difference between the MLSE of the elementary and junior high school teachers. However, the average AILA degree of the junior high school teachers was significantly higher than that of the elementary school teachers. It was found that AILA was significantly negatively correlated with MLSE. The elementary and junior high school teachers were confident that they could study AI-related courses. However, the AILA of the junior high school teachers was higher than that of the elementary school teachers. Therefore, more teacher training workshops on AI application can be conducted for junior high school teachers to generally improve their familiarity with AI application. Future research can further explore whether teachers will gradually improve their AILA and MLSE with time and as training courses increase.},
  keywords={Training;Maximum likelihood estimation;Conferences;Anxiety disorders;Urban areas;Learning (artificial intelligence);Games;in-service teacher education;artificial intelligence education;learning self-efficacy of machine learning;artificial intelligence learning anxiety},
  doi={10.1109/ICAIE56796.2023.00034},
  ISSN={},
  month={March},}@INPROCEEDINGS{9155812,
  author={De La Rosa, Matthew and Chen, Yinong},
  booktitle={2019 IEEE 14th International Symposium on Autonomous Decentralized System (ISADS)}, 
  title={A Machine Learning Platform for Multirotor Activity Training and Recognition}, 
  year={2019},
  volume={},
  number={},
  pages={1-8},
  abstract={Machine learning is a new paradigm of problem solving. Teaching machine learning in schools and colleges to prepare the industry's needs becomes imminent, not only in computing majors, but also in all engineering disciplines. This paper develops a new, hands-on approach to teaching machine learning by training a linear classifier and applying that classifier to solve Multirotor Activity Recognition (MAR) problems in an online lab setting. MAR labs leverage cloud computing and data storage technologies to host a versatile environment capable of logging, orchestrating, and visualizing the solution for an MAR problem through a user interface. This work extends Arizona State University's Visual IoT/Robotics Programming Language Environment (VIPLE) as a control platform for multi-rotors used in data collection. VIPLE is a platform developed for teaching computational thinking, visual programming, Internet of Things (IoT) and robotics application development.},
  keywords={Robots;Machine learning;Mars;Training;Activity recognition;Tools;Machine learning;training and recognition;Internet of Things;VIPLE;cloud computing;orchestration;education;classification;multirotor},
  doi={10.1109/ISADS45777.2019.9155812},
  ISSN={2640-7485},
  month={April},}@INPROCEEDINGS{7760759,
  author={Miller, Gary and Hermans, Felienne and Braun, Robin},
  booktitle={2016 15th International Conference on Information Technology Based Higher Education and Training (ITHET)}, 
  title={Gradual structuring: Evolving the spreadsheet paradigm for expressiveness and learnability}, 
  year={2016},
  volume={},
  number={},
  pages={1-8},
  abstract={Spreadsheets are arguably the most used form of programming and are frequently used in higher education to teach fundamental concepts about computation. Their success has shown that they are simple enough for a huge number of end users to learn and use. This is in contrast to traditional programming languages and the high dropout rate from introductory programming and computer science. However in comparison to traditional programming languages and structured modelling, spreadsheets are not expressive, placing a limit on the levels of computational thinking that can be taught using the spreadsheet paradigm. This limitation is imposed by the lack of programming language features and abstractions in the paradigm. Furthermore, more advanced spreadsheet features (e.g. array formulae, lookup formulae, R1C1 syntax) can be difficult to learn and use. This paper discusses the idea of adding language features to spreadsheets, enabling the gradual structuring of free-form spreadsheets to more structured models. We propose that this concept is termed Gradual Structuring, and is analogous to the programming language concept of gradual typing. In this analogy, spreadsheets take the place of dynamic programming and structured modelling of static programming. In programming languages, gradual typing allows dynamic programming to be mixed with static programming. It is our contention that dynamic programming is more learnable while static programming is more expressive and abstract. Gradual typing could be used to mitigate the issues in the teaching of traditional programming. Likewise Gradual Structuring can mitigate the conceptual limits that can be taught using current spreadsheets. The key language feature required to enable Gradual Structuring is the ability to logically group cells together so that a single formula can be applied to the grouped cells. This concept, termed cell grouping diminishes and can even eliminate the need for the ubiquitous and error-prone use of copy-pasted in spreadsheets. Moreover, it makes the structure present in spreadsheet models explicit. Cell grouping requires a cascade of other new languages features. Namely a more expressive referencing style, which in turned requires enabling labels to be moved to the row and column headers, and the hierarchical structuring of these headers. Respectively these language features are termed enhanced referencing and semantic axes. The ongoing research focusses on the usability and learnability of these language features. Spreadsheet applications exist that contain aspects of the features mentioned. However these applications do not enable Gradual Structuring and have taken a mainly technical, not human behavioural, approach to evolving the spreadsheet.},
  keywords={Programming profession;Computer languages;Dynamic programming;Electronic mail;Education;Semantics},
  doi={10.1109/ITHET.2016.7760759},
  ISSN={},
  month={Sep.},}@INPROCEEDINGS{8102343,
  author={Mufeti, Tulimevava K. and Sverdlik, William},
  booktitle={2017 IST-Africa Week Conference (IST-Africa)}, 
  title={Introducing computer programming in secondary schools: A case study of NAMTOSS}, 
  year={2017},
  volume={},
  number={},
  pages={1-8},
  abstract={Most countries in the Southern Africa Development Community (SADC) have adopted national development plans that recognize ICT as the main driver for economic development. For ICT to effectively contribute to the national development agenda however, there is a need to ensure that citizens are ICT literate. As a result, a number of countries have developed Subject Policy Guidelines aimed at introducing Computer Studies at Secondary School level. While most of these guidelines are carefully crafted, actual implementation in secondary schools has proved troublesome; having under-maintained or non-existent ICT infrastructures along with inadequately trained teachers as major obstacles. Subsequently, most African student's first exposure to computer programming occurs in the first year of university education, thus entering the Computer Science major without any prior hands-on experience. The Namibian Technology Outreach to Secondary Schools (NAMTOSS) initiative is a pilot program started by the School of Computing (SoC) at the University of Namibia (UNAM) in March 2016. NAMTOSS is a partnership between secondary school teachers, learners and the staff members of the School of Computing at UNAM that is designed to introduce computer programming skills and computational thinking at secondary school level. NAMTOSS attempts to address the structural and systemic issues raised by previously unsuccessful outreach efforts conducted in Southern Africa. In this paper, we enumerate the successes and failures of our initial outreach efforts and suggest several enhancements to our program that we feel will lead to its success.},
  keywords={Programming profession;Economics;Training;Africa;Technology education;secondary education;outreach;Namibia;Africa;computing;programming;ICT},
  doi={10.23919/ISTAFRICA.2017.8102343},
  ISSN={},
  month={May},}@INPROCEEDINGS{9964176,
  author={Noordin, N. H. and Mok, RenHao and Mohamad, I. H.},
  booktitle={8th International Conference on Mechatronics Engineering (ICOM 2022)}, 
  title={UMP STEM Bot as educational kit for robotics and computer programming}, 
  year={2022},
  volume={2022},
  number={},
  pages={1-8},
  abstract={We present UMP STEM Bot, an open-source robotic platform, for educational use that covers a wide spectrum of black-box and white-box learning objectives. The building structure of UMP STEM Bot and its learning outcomes are described. The educational kit is scalable to a more advance application as it is built based on the open-source technology. The UMP STEM Bot is a viable low-cost robotic manipulator platform alternative for introductory courses such as basics of robotics, computational thinking, and programming, as well as for advance courses at the university level such as intelligent robotics.},
  keywords={},
  doi={10.1049/icp.2022.2256},
  ISSN={},
  month={Aug},}@INPROCEEDINGS{9962584,
  author={Cheng, Qingwan and Tao, Angela and Chen, Huangliang and Samary, Maira Marques},
  booktitle={2022 IEEE Frontiers in Education Conference (FIE)}, 
  title={Design an Assessment for an Introductory Computer Science Course: A Systematic Literature Review}, 
  year={2022},
  volume={},
  number={},
  pages={1-8},
  abstract={This Research Full Paper presents a literature review on introductory CS assessments. As Computer Science (CS) becomes increasingly popular in the world of big data, more college students are taking introductory CS courses to follow the trend. However, students have different levels of exposure to CS when they start CS in college, varying from no experience to years of coding experience. This disparity in the amount of exposure can pose many problems. In the same intro-level class, some students may think they do not learn anything new, while others believe the professor goes through concepts so fast that they cannot follow the pace. CS professors may also feel confused about how to control the pace and content of introductory courses. Therefore, CS departments need an assessment to measure students‚Äô CS knowledge and then assign them to the appropriate CS introductory courses. Though a vast number of research papers discuss CS introductory courses, few of them focus on developing and validating assessments that evaluate students‚Äô background knowledge (i.e., concept inventory). This paper aims to conduct a systematic literature review to gain an overview of the most important introductory CS contents that need to be assessed, the methods to evaluate students‚Äô understanding of introductory CS concepts, and some existing assessments/concept inventories. By reviewing relevant papers over the last 15 years, we selected 48 papers that are related to assessments and corresponding introductory courses. We collected assessment information and made tables of contents, question types, programming languages, and origins to analyze data. We found that iterations, conditionals, and variables are the most popular assessment contents. Multiple-Choice and Code Writing questions, which are more popular than Code Explaining questions, are the preferred ways of assessing students‚Äô knowledge. Scratch is commonly used as a CS0 assessment language, while Python, Java, C, and Pseudo-codes are employed in CS1 assessments. FCS1, SCS1, and BDSI are existing assessments/concept inventories for CS1 or CS2, but there is not yet a validated assessment or concept inventory that encompasses introductory concepts of CS0 (computational thinking), CS1 (fundamentals), and CS2 (data structure). Designing a comprehensive CS0/CS1/CS2 assessment by using the information collected from our systematic literature review would help students choose the right course and benefit educators and researchers for general use.},
  keywords={Computer science;Java;Systematics;Codes;Bibliographies;Buildings;Market research;computer science education;introductory CS courses;assessment;concept inventory;systematic literature review},
  doi={10.1109/FIE56618.2022.9962584},
  ISSN={2377-634X},
  month={Oct},}@INPROCEEDINGS{9794193,
  author={Groher, Iris and Vierhauser, Michael and Sabitzer, Barbara and Kuka, Lisa and Hofer, Alexander and Muster, David},
  booktitle={2022 IEEE/ACM 44th International Conference on Software Engineering: Software Engineering Education and Training (ICSE-SEET)}, 
  title={Exploring Diversity in Introductory Programming Classes: An Experience Report}, 
  year={2022},
  volume={},
  number={},
  pages={102-112},
  abstract={Digitization is becoming part of almost everyone‚Äôs life, ranging from smartphones and tablets, smart devices automatically collecting information, to tools and scripting languages that are widely available and easy to use. This has recently been reflected in various university curricula, where courses such as computational thinking, and basic programming classes are now included in a broader range of (non-computer-science) programs. However, these programs often face challenges in such courses due to their diverse student body, with students often lacking profound digital competencies and technical background. While gender diversity aspects have been broadly studied in the past, other diversity dimensions such as ethnicity, age, or educational background have largely been neglected thus far. In this paper, we report on our experiences in teaching an introductory programming course to first-year Business Informatics bachelor students. After undergoing fundamental changes in our teaching concepts and the provided learning material, we explore what diversity factors play an important role when teaching programming to non-computer science students, and how diversity is perceived by lecturers and tutors. Our analysis confirms that a collaborative teaching concept positively supports female students and students with language barriers.},
  keywords={Training;Education;Collaboration;Smart devices;Interviews;Informatics;Programming profession;Introductory Programming;Diversity Dimensions},
  doi={10.1145/3510456.3514155},
  ISSN={},
  month={May},}@INPROCEEDINGS{7140058,
  author={Sanneman, Lindsay and Ajilo, Deborah and DelPreto, Joseph and Mehta, Ankur and Miyashita, Shuhei and Poorheravi, Negin Abdolrahim and Ramirez, Cami and Sehyuk Yim and Kim, Sangbae and Rus, Daniela},
  booktitle={2015 IEEE International Conference on Robotics and Automation (ICRA)}, 
  title={A Distributed Robot Garden System}, 
  year={2015},
  volume={},
  number={},
  pages={6120-6127},
  abstract={Computational thinking is an important part of a modern education, and robotics provides a powerful tool for teaching programming logic in an interactive and engaging way. The robot garden presented in this paper is a distributed multi-robot system capable of running autonomously or under user control from a simple graphical interface. Over 100 origami flowers are actuated with LEDs and printed pouch motors, and are deployed in a modular array around additional swimming and crawling folded robots. The garden integrates state-of-the-art rapid design and fabrication technologies with distributed systems software techniques to create a scalable swarm in which robots can be controlled individually or as a group. The garden can be used to teach basic algorithmic concepts through its distributed algorithm demonstration capabilities and can teach programming concepts through its education-oriented user interface.},
  keywords={Robots;Light emitting diodes;Graphical user interfaces;Insects;Fabrication;Cranes;Bluetooth},
  doi={10.1109/ICRA.2015.7140058},
  ISSN={1050-4729},
  month={May},}@INPROCEEDINGS{7017829,
  author={C√°pay, Martin},
  booktitle={2014 International Conference on Interactive Collaborative Learning (ICL)}, 
  title={Algorithmic thinking observation: How students of applied informatics break the mystery of black box applications}, 
  year={2014},
  volume={},
  number={},
  pages={535-540},
  abstract={The Black Box is a system with the internal organization and behavior about which the observer has no information. However, it is possible to impact the whole system via its inputs and observe its reactions via its outputs. The paper is concerned with the implementation of ‚Äúblack box‚Äù type of activities to teach computational thinking. The main idea is to give the students the puzzles and ask them to ‚Äúplay‚Äù with the inputs and observe the outputs enough to determine the internal mechanisms or principles that produce particular outputs from given inputs. First year students were asked to define a formula or describe a principle, based on which the input transforms itself into the output. There were four different types of answers: the student could be able (1) to state a formal proof, (2) to state a verbal proof, (3) to state a basic concept of algorithms, or (4) not to state any type of correct solution. We found out that a lot of the students were not able to think about the concept of the application functioning and were not able to create any formal description of algorithms.},
  keywords={Programming;Informatics;Educational institutions;Mathematics;Problem-solving;teaching methods;black box;scientific approach;algorithm;reverse engineering},
  doi={10.1109/ICL.2014.7017829},
  ISSN={},
  month={Dec},}@INPROCEEDINGS{7943092,
  author={Knobelsdorf, Maria and Otto, Jonathan and Sprenger, Sandra},
  booktitle={2017 IEEE Global Engineering Education Conference (EDUCON)}, 
  title={A computing education approach for geography students in context of GIS}, 
  year={2017},
  volume={},
  number={},
  pages={1790-1796},
  abstract={We present an educational design for an undergraduate university course meant to engage Geography majors with computing and computational thinking. For that matter, we use the pedagogical principle of contextualization, relating computing topics to the discipline of Geography using climate change modeling with geographic information systems as a context. Following a design-based research approach, we first present considerations and arguments that form the basis for our educational design, and then discuss initial results of implementing and teaching a corresponding course to Geography Education majors.},
  keywords={Handheld computers;Engineering education;Geographic information systems;Geography;Computing Education;non-CS students;contextualization;design based research;Geographic Information System},
  doi={10.1109/EDUCON.2017.7943092},
  ISSN={2165-9567},
  month={April},}@INPROCEEDINGS{9766768,
  author={Zarkadoula, Kallirroi and Xenos, Michalis},
  booktitle={2022 IEEE Global Engineering Education Conference (EDUCON)}, 
  title={Evaluating Usability and Educational Effectiveness of a Serious Game for Programmers Using Alternative Interfaces and Types of Activities}, 
  year={2022},
  volume={},
  number={},
  pages={644-651},
  abstract={This paper presents a serious game that has been developed for programmers aiming to analyze and examine the effectiveness and the perceived usability of two different game interfaces. This game presents a drag-and-drop interface and a classical typing interface and towards this approach, four different versions of the same game were developed. Each version of the game focuses on either creating a part of code or debugging (finding the errors in the code provided). The game enables the players to advance their programming skills and computational thinking by engaging them in problem-solving activities during the gameplay. This paper provides insight and focuses on the evaluation of different interfaces in a serious game that is developed for programmers and targets fundamental programming concepts.},
  keywords={Codes;Conferences;Games;Debugging;Serious games;Problem-solving;Usability;serious games;programming;game-based learning;human-computer interaction},
  doi={10.1109/EDUCON52537.2022.9766768},
  ISSN={2165-9567},
  month={March},}@ARTICLE{9969519,
  author={Paredes-Velasco, Maximiliano and Lozano-Osorio, Isaac and P√©rez-Mar√≠n, Diana and Santacruz-Valencia, Liliana Patricia},
  journal={IEEE Transactions on Learning Technologies}, 
  title={A Case Study on Learning Visual Programming With TutoApp for Composition of Tutorials: An Approach for Learning by Teaching}, 
  year={2024},
  volume={17},
  number={},
  pages={498-513},
  abstract={Teaching programming is a topic that has generated a high level of interest among researchers in recent decades. In particular, multiple approaches to teaching visual programming have been explored, from the use of tools such as Scratch, robots, unplugged programming, or activities for the development of computational thinking. Despite the wide range of resources used, students generally tend to perform poorly academically and perceive learning visual programming as a complex and demotivating task. In this article, the TutoApp system is proposed together with a new methodology based on ‚ÄúLearning by Teaching,‚Äù where students create tutorials on their mobile devices to explain programming concepts to their peers. The hypothesis of this article is that the use of this tool improves learning outcomes and the level of student satisfaction. An experiment with a pre‚Äìposttest design has been carried out with 57 university students in an introductory programming course, 30 belonging to a control group (did not use TutoApp) and 27 belonging to the experimental group (used TutoApp). The findings indicate that the creation of tutorials with TutoApp significantly improved students' academic performance over those who did not use it, specifically in learning the loops and conditional control structures. However, it was observed that anxiety increased in all students while learning visual programming. The results of this study open the door to the validation of the use of systems and methodologies for creating tutorials for teaching visual programming to university students.},
  keywords={Education;Visualization;Programming profession;Writing;Tutorials;Anxiety disorders;Task analysis;Emotions;learning by teaching;mobile devices;visual programming;written composition},
  doi={10.1109/TLT.2022.3226122},
  ISSN={1939-1382},
  month={},}@INPROCEEDINGS{6974114,
  author={Liu, Dongning and Teng, Shaohua and Zhu, Haibin and Tang, Yong},
  booktitle={2014 IEEE International Conference on Systems, Man, and Cybernetics (SMC)}, 
  title={Minimal role playing logic in Role-Based Collaboration}, 
  year={2014},
  volume={},
  number={},
  pages={1420-1425},
  abstract={Role-Based Collaboration (RBC) is a computational thinking methodology where roles provide an underlying mechanism to facilitate abstraction, classification, separation of concerns, dynamics, and interactions. From a meta theoretical perspective, the specification of groups, roles and agents is a critical element of RBC. In consideration of the relationships and hierarchies faced by groups, roles and agents, we propose a minimal role playing logic system (MRPL) through substructural logic, which is polynomial in complexity, in support of RBC. From MRPL and RPLs extending from it, there are three levels of application, i.e., the global level governing how people organize agents to form a group; the concatenative level for role assignment with respect to logic and algebra, and the operational level governing properties, relations and structures that should appear in collaborative system design. From MRPL to RPLs, one can extend it to suit other appropriate applications.},
  keywords={Conferences;Cybernetics;Role-Based Collaboration (RBC);group;role;agent;role playing logic},
  doi={10.1109/SMC.2014.6974114},
  ISSN={1062-922X},
  month={Oct},}@INPROCEEDINGS{10342942,
  author={Choi, Wan-Chong and Lei, Huey and Mendes, Ant√≥nio Jos√©},
  booktitle={2023 IEEE Frontiers in Education Conference (FIE)}, 
  title={Motivating the New Generation: Using Flipped Classroom and ARCS Model to Enhance Block-Based Programming Education}, 
  year={2023},
  volume={},
  number={},
  pages={1-8},
  abstract={This Research-to-Practice full paper presents an explorative study investigating the effects of flipped learning on the learning motivation of primary school students enrolled in a block-based programming course. Technology development has increased the importance of information technology-related competencies for the new generation. Programming skills are essential in various industries nowadays. Thus, programming education has become necessary to cultivate students' relevant abilities to meet the rapid pace of development. Programming learning encourages students to think logically and systematically, solve problems effectively, and develop computational thinking skills. However, learning programming is challenging for many students for different reasons, such as its inherent complexity, inadequate study methods, and pedagogical approaches unsuited to promote programming learning. Traditional teaching methods are often impersonalized and only suitable for some learning styles present in class. Moreover, the challenges encountered by the students as novice programmers are attributed to their low learning motivation. To learn to program, students must comprehend different syntactic conventions, complex instructions, and logical operators and actively engage in practical learning activities, often facing difficulties. This may reduce their learning motivation leading to failure and dropout. To accommodate different learning styles and increase students' motivation, this study employed the ARCS motivation model to design various innovative activities in a flipped classroom setting to increase students' motivation and improve teachers' teaching effectiveness. The study utilized a pretest-posttest method with two groups of grade five students to compare the effectiveness of teaching and learning between the flipped and traditional classroom students. The study's findings revealed that the flipped classroom experimental group showed significantly higher learning motivation than the students in the control group. Moreover, it was found that different flipped classroom activities, including the use of gamification, flipped videos, self-study, self-questioning, self-assessment, split programming tasks, group cooperation, and demonstration activities, had a positive influence on various sub-dimensions of the ARCS model, such as attention, relevance, confidence, and satisfaction.},
  keywords={Industries;Electronic learning;Education;Syntactics;Complexity theory;Online services;Task analysis;Flipped classroom;Computer science;Motivation;ARCS Model;Block-based programming education},
  doi={10.1109/FIE58773.2023.10342942},
  ISSN={2377-634X},
  month={Oct},}@INPROCEEDINGS{9453965,
  author={Plaza, Pedro and Castro, Manuel and Sancristobal, Elio and Garc√≠a-Loro, F√©lix and Gil, Rosario and Menacho, Antonio and Bl√°zquez, Manuel and Quintana, Blanca and Martin, Sergio and Mur, Francisco and Macho, Alejandro and Baiz√°n, Pablo and Carrasco, Ram√≥n and Carro, German and L√≥pez-Rey, √Åfrica and P√©rez, Clara and Meier, Russ and Tovar, Edmundo},
  booktitle={2021 IEEE Global Engineering Education Conference (EDUCON)}, 
  title={Build your own robot}, 
  year={2021},
  volume={},
  number={},
  pages={543-551},
  abstract={This Research to Practice Full Paper presents a pilot test framed in educational robotics where parents and child work together during the same session. In recent years, an educational movement has emerged that is related to the introduction of computational thinking, programming, and robotics in schools. Educational robotics is presented as one more resource that serves as a support in the different curricular subjects and facilitates the emergence of skills such as socialization, creative spirit and personal initiative, allowing participants to find answers to the problems that may arise in their reality. It is for this reason that a pilot test was carried out where we included the participants' parents in a session. To do this we used the Crumble controller, a platform that is programmed using block programming language. This platform also allows making electrical connections in an amazingly simple way. From the mechanical point of view, we use materials that can be easily machined, both by children and by inexperienced people. At the end of the experience, the assistants completed the assembly of their own robot. The article contains a study of the state of the art of using educational robotics. It also includes an analysis of the different tools mostly used in educational robotics. Also, throughout the article the learning methodology used, the different educational resources and the results obtained from the experience are described.},
  keywords={Robotic assembly;Computer languages;Conferences;Tools;Collaborative work;Teamwork;Engineering education;Collaboration;Education;Educational Robotics;Learning technology},
  doi={10.1109/EDUCON46332.2021.9453965},
  ISSN={2165-9567},
  month={April},}@INPROCEEDINGS{9018582,
  author={Pancieri, Jussara and Siqueira, F√°bio Ventorim and Oliveira, M√°rcia Gon√ßalves de and Santos, Marcelo Cardoso Lima dos},
  booktitle={2019 Latin American Robotics Symposium (LARS), 2019 Brazilian Symposium on Robotics (SBR) and 2019 Workshop on Robotics in Education (WRE)}, 
  title={Robotics in the Resocialization of Youngsters and Teenagers in Socio-Educational Measures}, 
  year={2019},
  volume={},
  number={},
  pages={429-434},
  abstract={This paper presents a proposal and an experience report of an educational robotics course integrated to the process of resocialization of youngsters and teenagers in socio-educational measures. This proposal adopts a teaching approach oriented to the development of comprehension, analysis, logical reasoning, creativity and collaboration skills in order to develop in these young people real world problemsolving skills. The main challenge of this proposal is to favor the assimilation of the contents and the development of robotics practice outside the classroom, since, in accommodation, no course material is accessible from paper and pencil to robotics practice instruments. Thus, the main differential of this work is literally working the computational thinking in spaces of deprivation of liberty in order to develop ideas for problem solving tasks. The results of this developed experience point to excellent opportunities for resocialization and professional orientation of young people in socio-educational measures through the teaching of robotics.},
  keywords={Robots;Education;Electronic components;Proposals;Programming profession;Problem-solving;resocialization, educational robotics, youngsters and teenagers in socio-educational measures},
  doi={10.1109/LARS-SBR-WRE48964.2019.00082},
  ISSN={2643-685X},
  month={Oct},}@INPROCEEDINGS{9973573,
  author={Jeong, Hyun and Payton, Jamie and Julien, Christine and Castelli, Darla},
  booktitle={2022 IEEE 19th International Conference on Mobile Ad Hoc and Smart Systems (MASS)}, 
  title={Integrating Computer Science and Physical Education in Elementary Schools with Data Science Learning Modules Using Wearable Microcontrollers}, 
  year={2022},
  volume={},
  number={},
  pages={710-715},
  abstract={With limited time in the school day to meet required state-level objectives across subjects, it is challenging to meet the need to address declining physical activity levels and to incorporate additional computer science instruction in elementary schools. Project moveSMART uses a web-based platform to integrate opportunities for physical education with computer science and computational thinking (CS/CT) learning activities. Fourth grade students who underwent a single-day intervention experienced a significant improvement in their interest in coding and their perceptions of coders. This paper presents a series of three new lessons in the fifth grade moveSMART curriculum that allow students to create and improve a physical activity monitor. We employ a project-based learning approach to expose students to data analysis and machine learning in the framework of classification and pattern recognition.},
  keywords={Computer science;Microcontrollers;Wearable computers;Education;Machine learning;Data science;Encoding;integrative curriculum;gamification;elementary school;physical activity;pervasive computing;BBC micro;bit},
  doi={10.1109/MASS56207.2022.00105},
  ISSN={2155-6814},
  month={Oct},}@INPROCEEDINGS{9028486,
  author={Oomori, Yasumasa and Tsukamoto, Hidekuni and Nagumo, Hideo and Takemura, Yasuhiro and Iida, Kouki and Monden, Akito and Matsumoto, Ken-ichi},
  booktitle={2019 IEEE Frontiers in Education Conference (FIE)}, 
  title={Algorithmic Expressions for Assessing Algorithmic Thinking Ability of Elementary School Children}, 
  year={2019},
  volume={},
  number={},
  pages={1-8},
  abstract={This Research to Practice Full Paper presents the development of the algorithmic expressions for the assessment tools for assessing algorithmic thinking ability of elementary school children. In Japan, elementary school children will be required to learn computer programming as an interdisciplinary element appearing throughout the curriculum in 2020. The purpose of this programming education is to nurture Computational Thinking (CT) for elementary school children in Japan. However, almost no discussion has been conducted in Japan on how to measure the level of CT an elementary school child has acquired. Since the definition of CT is not very firm, it is not easy to measure the levels of CT. Therefore, several organizations have issued operational definitions of CT. Among the concepts of CT in those operational definitions, Algorithmic Thinking was chosen as a representative of CT, and the assessment tools for evaluating Algorithmic Thinking ability have been developed in this research. The assessment tool was conducted in the experimental Computer Science Unplugged classes and in the control classes in two elementary schools in Japan. There were in total 152 children in the classes, and all of them were 5th grade children. By answering the questions in the assessment tool, each child got a score between 0 and 15. The scores were statistically analyzed.},
  keywords={Programming profession;Tools;Education;Visualization;Computational modeling;algorithmic thinking;algorithmic expression;assessment;elementary school children},
  doi={10.1109/FIE43999.2019.9028486},
  ISSN={2377-634X},
  month={Oct},}@INPROCEEDINGS{9962664,
  author={Jain, Garima and Martin, Fred and Feliciano, Bernardo and Hsu, Hsien-Yuan and Fauvel-Campbell, Barbara and Bausch, Gillian and Ni, Lijun and Thomas-Cappello, Elizabeth},
  booktitle={2022 IEEE Frontiers in Education Conference (FIE)}, 
  title={CS Pathways: A Culturally Responsive Computer Science Curriculum for Middle School}, 
  year={2022},
  volume={},
  number={},
  pages={1-9},
  abstract={In this Research-to-Practice Full Paper, we report on CS Pathways, a middle school computer science (CS) curriculum developed as part of a researcher-practitioner partnership among two public universities and three urban school districts in the Northeast USA. The curriculum serves middle school students to develop apps for social impact. The partnership focuses on bridging the gap between STEM (Science, Technology, Engineering, and Mathematics) and community and gender gap within STEM. The project is based on Culturally Responsive Pedagogy (CRP), which includes the importance of recognizing students‚Äô culture in all facets of learning. The project employs a researcher-practitioner partnership (RPP) model, which recognizes that transformational change can occur in educational ecosystems that connect research, policy, practice, and community work.The project curriculum was collaboratively developed by CS researchers, teacher-practitioners, and school administrators. Middle school students develop their own apps that support socially relevant activities in their communities. Using the RPP process, continuous feedback from researchers, teacher-practitioners, and students shaped the curriculum design. Key feedback was collected via one-on-one meetings with the teacher-practitioners, which bridged the visions and knowledge among different groups of the project partners.The curriculum includes the areas of computing and society, digital tools and collaboration, computing systems, and computational thinking. The curriculum helps students develop a critical consciousness of the role they can play in affecting their communities through computing, and empower them to move beyond simply learning to code [1]. The curriculum strives to demonstrate how to integrate computing across middle school subjects in a culturally-responsive way and spread a powerful message of Computer Science for All. This paper advocates for the need for culturally-responsive computing, describes how it is integrated into teachers‚Äô instruction, and presents the CS Pathways curriculum design.},
  keywords={Computer science;Codes;Face recognition;Ecosystems;Collaboration;Mathematical models;STEM},
  doi={10.1109/FIE56618.2022.9962664},
  ISSN={2377-634X},
  month={Oct},}@INPROCEEDINGS{8190707,
  author={Bremgartner, Vitor and de Magalh√£es Netto, J. F. and de Menezes, Credin√© Silva},
  booktitle={2017 IEEE Frontiers in Education Conference (FIE)}, 
  title={Conceptual framework of educational resources adaptation for improve collaborative learning in virtual learning environments}, 
  year={2017},
  volume={},
  number={},
  pages={1-9},
  abstract={Frequently, the existing resources in Virtual Learning Environments (VLEs), used in distance education courses and blended, are presented in the same way for all students. This may complicate the effective learning process of each student. In order to solve this problem, one of the original goals of intelligent educational systems is to guide every student to the most appropriate educational contents. So, the approach adopted in this paper is based on a framework called ArCARE (Conceptual Framework of Educational Resources Adaptation in Virtual Learning Environments), which allows adaptation of resources for students in VLEs, allowing the construction of their knowledge, using multi-agent system technology that handles an open learner model ontology. These ArCARE resources are recommendation and adaptation of collaborative activities such as Pedagogical Architectures for the students have a more effective learning of particular course content. Results obtained from some tests in a flexible curriculum course of Computational Thinking show the feasibility of the proposal.},
  keywords={Adaptation models;Collaboration;Collaborative work;Ontologies;Proposals;Data models;Tools;Collaborative Learning;Virtual Learning Environments;Adaptation of Resources;Software Agents;Open Learner Model},
  doi={10.1109/FIE.2017.8190707},
  ISSN={},
  month={Oct},}@INPROCEEDINGS{9620713,
  author={Fancsali, Cheri and Klevan, Sarah and Mirakhur, Zitsi},
  booktitle={2021 Conference on Research in Equitable and Sustained Participation in Engineering, Computing, and Technology (RESPECT)}, 
  title={Making Research Practice Partnerships Work: An Assessment of The Maker Partnership}, 
  year={2021},
  volume={},
  number={},
  pages={1-6},
  abstract={Strong, equitable research practice partnerships (RPPs) center both researcher and practitioner perspectives and priorities. These RPPs facilitate rigorous, relevant research that practitioners can use to improve program implementation. Our project, The Maker Partnership, is an RPP focused on building knowledge about how to help elementary level teachers integrate computer science (CS) and computational thinking (CT) into their regular science classes using maker pedagogy. In this experience report, we use the Henrich et al. framework to assess the Maker Partnership's effectiveness along five dimensions and share practical advice and lessons learned. This paper contributes to the CS and RPP literature by providing insight into how an RPP can address critical problems of practice in computer science education.},
  keywords={Computer science;Shape;Buildings;Education;Tools;Writing;Computer science education;Research Practice Partnership;teacher capacity building;elementary level;CS/CT integration;maker pedagogy},
  doi={10.1109/RESPECT51740.2021.9620713},
  ISSN={},
  month={May},}@INPROCEEDINGS{10148382,
  author={Duong, Ta Nguyen Binh and Shar, Lwin Khin and Shankararaman, Venky},
  booktitle={2022 IEEE International Conference on Teaching, Assessment and Learning for Engineering (TALE)}, 
  title={AP-Coach: formative feedback generation for learning introductory programming concepts}, 
  year={2022},
  volume={},
  number={},
  pages={323-330},
  abstract={In this work, we aim to improve code writing skill in Python-based introductory programming courses for first-year university students. In such courses, students as novice programmers would benefit from personalised and formative feedback to: 1) quickly identify issues in their computational thinking process or coding techniques, and 2) know how to proceed when facing a certain problem. Due to the large number of students, it is impractical for instructors to manually assess all the work of each student to provide tailored feedback. We design and implement Automatic Programming Coach (AP-Coach), a web-based tool for automatically generating formative feedback for exercises on basic programming concepts. AP-Coach combines software engineering techniques (code similarity measures based on abstract syntax trees, and unit testing), and AI techniques (machine translation) in a novel manner to provide relevant feedback. We report promising results for AP-Coach in the following aspects: 1) quantitative evaluation of code similarity computation and machine translation, 2) qualitative evaluation of the perceived quality and usability of auto-generated feedback, and 3) experience of a selected group of computing students using the system.},
  keywords={Codes;Education;Writing;Syntactics;Machine translation;Software measurement;Usability;learning programming;formative feedback;machine translation;code similarity},
  doi={10.1109/TALE54877.2022.00060},
  ISSN={2470-6698},
  month={Dec},}
